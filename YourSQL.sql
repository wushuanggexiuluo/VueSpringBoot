/*
 Navicat Premium Data Transfer

 Source Server         : localhost_3306
 Source Server Type    : MySQL
 Source Server Version : 50739
 Source Host           : localhost:3306
 Source Schema         : yyy

 Target Server Type    : MySQL
 Target Server Version : 50739
 File Encoding         : 65001

 Date: 15/03/2023 12:40:14
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for article
-- ----------------------------
DROP TABLE IF EXISTS `article`;
CREATE TABLE `article`  (
  `article_id` int(11) NOT NULL AUTO_INCREMENT COMMENT '文章ID',
  `article_user_id` int(10) UNSIGNED NULL DEFAULT NULL COMMENT '用户ID',
  `article_title` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '标题',
  `article_content` mediumtext CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '内容',
  `article_view_count` int(11) NULL DEFAULT 0 COMMENT '访问量',
  `article_comment_count` int(11) NULL DEFAULT 0 COMMENT '评论数',
  `article_dianzan_count` int(11) NULL DEFAULT 0 COMMENT '点赞数',
  `article_update_time` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
  `article_create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `article_summary` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '摘要',
  `article_th_img` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '缩略图',
  PRIMARY KEY (`article_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1350 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of article
-- ----------------------------
INSERT INTO `article` VALUES (1314, 1, '想玩转Java，那这篇内容不能错过', 'Java是最常见的后端开发语言之一，Java语言由于自身具备构建多线程的能力，且体系结构比较中立。所以在大型互联网平台的开发中得到了广泛的采用\n若想玩转Java这些技术就必须掌握。\n1、Java并发编程\n对于一个Java程序员而言，能否熟练掌握并发编程是判断他优秀与否的重要标准之一。\n因为并发编程是Java 语言中最为晦涩的知识点，它涉及操作系统、内存、CPU、编程语言等多方面的基础能力，更为考验一个程序员的内功。2、Java虚拟机。 熟知Java虚拟机的工作原理可以大幅提升日常编程的效率，对寻常 Bug 的修复更是轻而易举。同时，这也是Java 技术的重要组成成分之一，是实现技术进阶必不可缺的知识。\n3、Nginx\nNginx很火，因为它就像一个万能药，在任何存在性能需求的场合总能找见它的身影，它可以轻松在百万并发连接下实现高吞吐量的Web服务。\n同时，类似于OpenResty和Tengine这样的第三方模块群，进一步发展出了新生态，使Nginx的应用进一步向应用防火墙、CDN 等领域扩展。\n4、Spring全家桶\nSpring早已成为Java后端开发事实上的行业标准，无数的公司选择Spring作为基础的开发框架，大部分Java后端程序员在日常工作中也会接触到Spring。\n因此，如何用好Spring，也就成为 Java程序员的必修课之一。同时，Spring Boot和Spring Cloud的出现，可以帮助工程师更好地基于Spring及各种基础设施来快速搭建系统，可以说，它们的诞生又一次解放了大家的生产力。\n因此，Spring Boot和Spring Cloud已成为Spring生态中不可或缺的一环。想成为一名合格的 Java 后端工程师，Spring Framework、Spring Boot、SpringCloud这三者必须都牢牢掌握。\n5、kafka\nKafka是 LinkedIn 开发并开源的一套分布式的高性能消息引擎服务，后来被越来越多的公司应用在自己的系统中，可以说，Kafka是大数据时代数据管道技术的首选。\n6、Redis\nRedis是如今互联网技术架构中，使用最广泛的缓存。支持复杂的数据结构，支持持久化，支持主从集群，支持高可用，支持较大的value存储。同时， Redis也是中高级后端工程师技术面试中，面试官最喜欢问的问题之一。特别是那些优秀的、竞争激烈的大型互联网公司（比如 Twitter、新浪微博、阿里云、腾讯云、淘宝、知乎等），通常要求面试者不仅仅掌握 Redis基础使用，更要求深层理解Redis内部实现的细节原理。毫不夸张地说，能把Redis的知识点全部吃透，你的半只脚就已经踏进心仪大公司的技术研发部。', 1074, 6, 14, '2023-03-02 12:38:52', '2022-11-11 11:43:10', '若想玩转Java这些技术就必须掌握。', 'http://cdn.forevergtt.love/mysystem/medicine/e2fc57a6-9201-4a12-a4c1-331a61897d90@th7');
INSERT INTO `article` VALUES (1315, 2, '量子力学？量子计算机？秒杀传统计算机的能力从何而来？', '.:\n今年，“量子力学”成了一个非常热门的话题，那么，你知道什么是量子力学吗？量子力学和女朋友的最大区别在于两者都很难懂，但量子力学不会一直追问你为什么不懂它，因为没人敢说自己懂它。如果觉得自己很笨，那么就应该去自学一下量子力学，只有这样咱们才能和聪明人站在同一条起跑线上。且不说量子力学到底研究了个什么神奇的理论，单说“量子”这个词就挺难解释清楚的。\n有个略有名气的思想家庄子曾说过，一尺之间，日去其半，万事不竭。如果按照这种宇宙观，那就没完没了，原子切开是质子，质子切开是夸克，夸克再切开又是个什么玩意儿？光是起名字都能水好几篇博士论文了。而在叛逆的量子力学里边，如果物质不是无限分割的，切到一定程度就再也切不开了，这不就能解决切起来没完没了的问题了吗？那咱们的宇宙万物就是由这种再也切不开的最基本单位的物质组成的。\n\n\n.:\n比如你个头高点，有28万个这样的基本单位这么高，它稍矮一点也有2个这样的基本单位高吧，这种基本单位的尺寸是固定的，用它们就能衡量宇宙所有物质，那这种基本单位就可以被称之为“量”。仅仅说“量”有点突兀，一般咱们都会加个助词，什么桌子、椅子、墙子、牛子、腿肚子、眼，柱子，这个基本单位于是就被称为“量子”，那描述他们的理论自然就是“量子力学”了。\n接触量子力学第一个颠覆世界观的东西就是这个“量子”了。之前咱们都认为宇宙是连续的，一个东西从8厘米增长到14厘米，它必然是经过中间6厘米的每一个点，8.01，8.02，8.0201，8.0202...反正无论后面有多少位的小数，在这个增长的过程中，总有一个时间点的长度是那个数值，这不仅听起来合情合理，在我们现实中感觉到的也确实是这样，对吧？\n\n.:\n但要是用量子来看，它就像是从8厘米直接变成9厘米，中间的长度是不存在的。宏观上我们自然看不到这种突变，因为这个最基本单位的长度也就只有10-33平方厘米左右，一般人是看不到的。当然，我们要是有科技能从微观视角去观察，缩小的微观尺度就看到令人震惊的现象，那就是任何东西的长度变化都是“一蹿一蹿”的突变，是固定单位长度增长的，那就不再连续了。简单说就是，微观视角才能看到细微的变化，而宏观上的连续只是突变的长度太短了，我们肉眼看不到罢了。\n手机屏幕上连续完整丝滑的大白腿在你凑近看的时候，就会发现它就是一对互相不挨着的红绿蓝像素色块而已。凡有所想，皆是虚妄，兄弟们，因为量子力学的颠覆性太过惊悚，这就让很多别有用心的人，假借量子力学之名行敛财之实，任何东西一旦冠名“量子力学”，立马就拥有了所有解释权，反正你是听也听不懂，学也学不会，人家说意大利面拌42号混凝土，你可能还在“嘎嘎”吃着称赞美味。就比如量子计算机，在很多科幻作品里，这玩意儿就是个终极杀招。\n\n.:\n当科幻电影剧情进行到无法逆转的时候，主人公就可以去求那个全知全能的“量子计算机”，不管是科幻里的描写，还是现实中媒体的宣传，留在大众印象里的量子计算机都是一个算力无限高的存在。在当前一些量子计算机的实验中，这些量子计算机的运行速度都在传统计算机的万亿倍以上，这岂止是飞跃，这简直是单细胞生物突变成了爱因斯坦，似乎量子计算机马上就要替代传统计算机，人类靠着量子计算机做大做强，再创辉煌，三天之内就能反攻三体星系。\n但现实却不怎么乐观，量子计算机到底做了什么，以至于它跟博尔特一样快呢？咱们得先搞清楚一个东西，计算机它到底在计算什么东西？简单地说，计算机里的东西无非就是三种，文字、图片、声音，为啥没视频呢？因为视频就是配了声音的多张连播图片，文字更简单，给每个汉字编码，然后再把编码转码成“0和1的组合”。图片也很简单，每一个像素点的颜色都有对应的编码，同样转码成0和1的组合\n\n.:\n声音稍微麻烦一点，但也是把音频的波峰波谷编码，最后变成一堆0和1，可见计算机并不是个直男友好的世界，这么一转换，计算机世界庞大无比的东西都变成了“0和1”了，不管你看电影，打游戏，写字，发图片，本质上都是一大串“0和1”的计算。传统计算机的晶体管就是一堆门电路，大家也不用理解“门电路”是啥，它就是通过电路来模拟0和1的计算。CPU里几百亿晶体管不需要多复杂的操作，只需要按照自己的设计逻辑完成0和1的计算就行了。\n要说人类的聪明就在这，仅仅是简单的一个变化就能模拟宇宙万物，但人类的不聪明就在这，虽然是把复杂问题简单化了，但一切都是守恒的，就像得到了钱就会失去痛苦。复杂的问题是简单了，但就需要规模巨大的运算，要不然也不用几百亿晶体管了不是？那量子计算机难道找到了不用把复杂问题转化的方案了吗？当然不是，量子计算机并不只是看起来神秘，毕竟最基本的运算单元是量子比特币。要说low吧，也确实算不上不可理解的科技，因为它仍然是把图片、文字、声音转化成“0和1”来处理。\n\n.:\n不同的地方在于，传统计算机用晶体管，电子计算机用量子比特素，就像无论火力发电还是核电都是在烧开水。普通计算机一个比特位只能表示一种状态，要么你是个“0”，要么你是个“1”，如果继续增加比特位，状态数量会成倍增长，而量子计算机就明显高大上了。咱们之前说双方干涉实验的时候就说过，量子是有叠加态的，就是说它既是个“0”又是个“1”，这时候增加量子比特位，那状态数量就是指数增长了。大家知道成倍增长“1”的指数，增长速度是相当恐怖的，每一秒的增长都会是上一秒的一倍，量子计算机的运行速度就是这样不可思议。\n\n.:\n其实反过来想，上万亿倍运行速度的突变，就指数增长这个“数学中的魔鬼”能实现了，量子不仅有叠加态，还有量子纠缠，这样一个量子比特能表示的状态就更多了，更进一步提升了量子计算机的运算速度。上面说的就是量子计算机恐怖算力的来源，但具体的原理可就很难讲明白了。至于如何实现量子比特币的运算就更难以理解了。传统计算机只要开发相应的软件，它就能实现功能，所以它叫通用计算机。但是量子计算机由于量子力学的特性限制，只是对于特定的问题有上百亿倍的速度优势，而对于一些问题，也就远不如普通计算机。\n', 1010, 0, 3, '2023-03-02 12:38:52', '2022-11-02 11:43:16', '今年，“量子力学”成为一个非常热门的话题，那么，量子力学是什么呢？', 'http://cdn.forevergtt.love/mysystem/medicine/f1b7b960-f153-4a94-be39-b7e282651642');
INSERT INTO `article` VALUES (1316, 3, '就业岗位只增不减！Java语言还能火多久？', '有句俗话经常说：男怕入错行，女怕嫁错郎。\n在现在这个社会，无论男女都怕入错行！行业的选择至关重要，找到一份满意的工作是每个人的终极目标。\n在IT互联网行业，Java人才占据了半壁江山，很多准备入行的同学，都会考虑这门编程语言。学Java是不是一个好选择呢？先来搞清楚这几点！\n为什么选择Java开发？\n首先，从Java本身的特性来看，它是一门具有通用性、高效性、平台移植性、安全性、多线程性、分布性等特性的语言。\n简单易学\n学习门槛低；使用企业多；\n标注规范\n不同人写出的代码风格一致；\n可读性高、可维护性高；\n稳健便携\n内存管理系统强悍；\n编译阶段即可过滤很多问题；\n一次编写，到处运行；\n分布式\n目前各大金融，电商企业\n需要的分布式技术，\nJava具有先天优势；\n也正是因为这些优点，Java的应用非常广泛，全球有着数十亿的设备正在运行着Java，很多服务器程序都是用Java编写的，可以说它无处不在。\n从当前的招聘需求来看，各大招聘网站有许多Java程序员的招聘信息，据第三方平台统计，企业用人需求每月新增10万+，并且呈现增长趋势，就业火热。\n以北京地区为例，Java开发工程师的平均工资水平为24.2K。虽然受地域影响，薪资待遇会有不同，但是整体而言，Java软件工程师的薪资待遇普遍高于其他行业。\n并且，随着5G技术、物联网、云计算、大数据、人工智能的高速发展和广泛应用，Java将再次被推上就业的高峰。\n对于已入行的从业者来说，抓住时机，不断更新自己的技术，提高能力是重点。而对于那些打算入行的观望者来说，尽快入行，并且深入学习行业知识是通往成功的主要途径。', 92, 5, 4, '2023-03-02 12:38:52', '2022-11-21 11:43:19', '学java是一个好选择！', 'http://cdn.forevergtt.love/mysystem/medicine/a34abe48-e2b9-4905-9f14-104a6fa4e466');
INSERT INTO `article` VALUES (1331, 4, '计算机网络安全问题和日常防范措施', '由于互联网络的开放性和通信协议的安全缺陷，以及在网络环境中数据信息存储和对其访问与处理的分布性特点，网上传输的数据信息很容易泄露和被破坏，网络受到的安全攻击非常严重，因此建立有效的网络安全防范体系就更为迫切。下面是为大家整理的计算机网络安全问题及日常防范措施，希望大家能够从中有所收获!\r\n\r\n在互联网上，使用密码是最常见并且最重要的安全保护方法，用户时时刻刻都需要输入密码进行身份校验。而现在的密码保护手段大都是认密码不认人，只要有密码，系统就会认为你是经过授权的正常用户。\r\n\r\n因此，取得密码也是黑客进行攻击的一种重要手法。取得密码也有好几种方法，一种是对网络上的数据进行监听。因为系统在进行密码校验时，用户输入的密码需要从用户端传送到服务器端，而黑客就能在两端之间进行数据监听。\r\n\r\n\r\n\r\n但一般系统在传送密码时都进行了加密处理，即黑客所得到的数据中不会存在明文的密码，这给黑客进行解除又提了一道难题。这种手法一般运用于局域网，一旦成功攻击者将会得到很大的操作权益。\r\n\r\n另一种解密方法就是使用穷举法对已知用户名的密码进行暴力解密。这种解密软件尝试所有可能字符所组成的密码，但这项工作十分地费时，不过如果用户的密码设置得比较简单，如“12345”、“ABC”等那有可能只需一眨眼的功夫就可搞定。\r\n\r\n为了防止受到这种攻击的危害，用户在进行密码设置时一定要将其设置得复杂，也可使用多种密码，或者变换思路使用中文密码。\r\n\r\n相关新闻\r\n\r\n由于互联网络的开放性和通信协议的安全缺陷，以及在网络环境中数据信息存储和对其访问与处理的分布性特点，网上传输的数据信息很容易泄露和被破坏，网络受到的安全攻击非常严重，因此建立有效的网络安全防范体系就更为迫切。下面是为大家整理的计算机网络安全问题及日常防范措施，希望大家能够从中有所收获!\r\n\r\n在互联网上，使用密码是最常见并且最重要的安全保护方法，用户时时刻刻都需要输入密码进行身份校验。而现在的密码保护手段大都是认密码不认人，只要有密码，系统就会认为你是经过授权的正常用户。\r\n\r\n因此，取得密码也是黑客进行攻击的一种重要手法。取得密码也有好几种方法，一种是对网络上的数据进行监听。因为系统在进行密码校验时，用户输入的密码需要从用户端传送到服务器端，而黑客就能在两端之间进行数据监听。\r\n\r\n\r\n\r\n但一般系统在传送密码时都进行了加密处理，即黑客所得到的数据中不会存在明文的密码，这给黑客进行解除又提了一道难题。这种手法一般运用于局域网，一旦成功攻击者将会得到很大的操作权益。\r\n\r\n另一种解密方法就是使用穷举法对已知用户名的密码进行暴力解密。这种解密软件尝试所有可能字符所组成的密码，但这项工作十分地费时，不过如果用户的密码设置得比较简单，如“12345”、“ABC”等那有可能只需一眨眼的功夫就可搞定。\r\n\r\n为了防止受到这种攻击的危害，用户在进行密码设置时一定要将其设置得复杂，也可使用多种密码，或者变换思路使用中文密码。\r\n\r\n相关新闻\r\n由于互联网络的开放性和通信协议的安全缺陷，以及在网络环境中数据信息存储和对其访问与处理的分布性特点，网上传输的数据信息很容易泄露和被破坏，网络受到的安全攻击非常严重，因此建立有效的网络安全防范体系就更为迫切。下面是为大家整理的计算机网络安全问题及日常防范措施，希望大家能够从中有所收获!\r\n\r\n在互联网上，使用密码是最常见并且最重要的安全保护方法，用户时时刻刻都需要输入密码进行身份校验。而现在的密码保护手段大都是认密码不认人，只要有密码，系统就会认为你是经过授权的正常用户。\r\n\r\n因此，取得密码也是黑客进行攻击的一种重要手法。取得密码也有好几种方法，一种是对网络上的数据进行监听。因为系统在进行密码校验时，用户输入的密码需要从用户端传送到服务器端，而黑客就能在两端之间进行数据监听。\r\n\r\n\r\n\r\n但一般系统在传送密码时都进行了加密处理，即黑客所得到的数据中不会存在明文的密码，这给黑客进行解除又提了一道难题。这种手法一般运用于局域网，一旦成功攻击者将会得到很大的操作权益。\r\n\r\n另一种解密方法就是使用穷举法对已知用户名的密码进行暴力解密。这种解密软件尝试所有可能字符所组成的密码，但这项工作十分地费时，不过如果用户的密码设置得比较简单，如“12345”、“ABC”等那有可能只需一眨眼的功夫就可搞定。\r\n\r\n为了防止受到这种攻击的危害，用户在进行密码设置时一定要将其设置得复杂，也可使用多种密码，或者变换思路使用中文密码。\r\n', 91, 4, 0, '2023-03-02 12:38:52', '2022-12-08 10:59:33', '下面是为大家整理的计算机网络安全问题及日常防范措施，希望大家能够从中有所收获', 'http://cdn.forevergtt.love/mysystem/medicine/03b438d0-e359-4bc2-8cd1-a1194356fa18');
INSERT INTO `article` VALUES (1332, 5, '12月编程语言排行榜：C++首次超越JAVA进入前三', 'IT之家 12 月 13 日消息，新的数据声称，C++ 是当今开发者使用的最流行的三大编程语言之一。\nIT之家了解到，全球知名 TIOBE 编程语言社区发布了 2022 年 12 月的编程语言排行榜，在这次发布的数据中可以看到，C++ 在 TIOBE 排名历史上首次超过 Java，以 0.12% 微弱的优势，凭借 11.94% 的市场份额首次超过了 11.82% 的 Java 排在第三。\nJava 则掉到了第四，这是自 2001 年 TIOBE 指数开始以来，Java 首次掉出榜单前三名。不过 Top5 依然还是 Python、C、C++、Java 和 C#。JavaScript 排在第七位，PHP 排在第十二位，苹果的 Swift 编码语言排在第十五位，比去年这个时候的第十位有所下降。\n值得一提的是，除了 C++ 超过 Java 之外，榜单上 Kotlin 和 Julia 也越来越接近前 20 名。Kotlin 从上个月的 28 名跃至 23，Julia 则从 32 升至 24。\nTIOBE 指数的百分比的计算不是基于市场份额，而是“基于全世界熟练工程师的数量、课程和第三方供应商”。\n什么是成功的编程语言的定义在行业内是不同的，TIOBE 的指标只是衡量的一种方式。今年早些时候，CirlceCI 的 2022 年软件交付状况报告显示，最流行的编程语言前三名分别是 TypeScript、JavaScript 和 Ruby，Python 排在第四位，C 和 C++ 甚至没有进入前十名。', 10, 3, 0, '2023-03-02 12:38:52', '2022-12-09 05:56:18', 'CirlceCI 的 2022 年软件交付状况报告显示，最流行的编程语言前三名分别是 TypeScript、JavaScript 和 Ruby，Python 排在第四位，C 和 C++ 甚至没有进入前十名。', 'http://cdn.forevergtt.love/mysystem/medicine/8e876b21-99e8-4c93-b440-e5aad5e5377e');
INSERT INTO `article` VALUES (1333, 2, '万字泣血解析割韭菜内幕，程序员别老想着做副业', '   \r\n\r\n \r\n\r\n  \r\n\r\n万字泣血解析割韭菜内幕，程序员别老想着做副业\r\n======================\r\n\r\n[![](https://p3-passport.byteimg.com/img/user-avatar/2b0199947b84f4c270cc4f82a60e843f~100x100.awebp)](/user/4284175332948126)\r\n\r\n[程序员济癫 ![lv-4](//lf3-cdn-tos.bytescm.com/obj/static/xitu_juejin_web/img/lv-4.a78c420.png \"创作等级\")](/user/4284175332948126)   \r\n\r\n2022年10月31日 11:07 ·  阅读 32406\r\n\r\n关注\r\n\r\n![万字泣血解析割韭菜内幕，程序员别老想着做副业](https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3b025e7b8fdf4f988a6241bf79fd91d0~tplv-k3u1fbpfcp-zoom-crop-mark:3024:3024:3024:1702.awebp?)  \r\n\r\n\r\n\r\n### 前言\r\n\r\n> 最近有准备一篇干货，但想了想还是先放放，眼看年关将近，写点其他对大家有用的内容。\r\n> \r\n> 今年见了不少人被割韭菜，下半年尤为严重，这种情形甚至在技术行业蔓延，令人深感大环境的复杂变化，以及诸多同行对工作生活的紧张与紧迫感，弥漫着一股压抑的氛围。\r\n> \r\n> 所以我写这篇文章情真意切，希望大家不要做被割韭菜的人，副业可以适当了解、接触，但作为程序员请千万不要老想着副业。\r\n> \r\n> 我会通过本篇一一解析给大家听，若有不妥之处，还望多多包涵。\r\n> \r\n> **暂时没时间看的可以收藏一下，我相信本篇一定会对沉迷副业的你有所改变。**\r\n\r\n  \r\n\r\n### 大环境\r\n\r\n> 大环境一旦变化，所有人都会有感触，从疫情之后各行各业受冲击，我在广州的前同事那两年有不少都失业了，尤其是面向实体行业的技术公司，因为客户受到巨大冲击，他们的饭碗也随之打碎一地。\r\n> \r\n> 反倒是一些面向事业单位的技术公司侥幸逃过一劫，要么就是面向医疗行业这样的公司，因为疫情反而变成了刚需，项目反倒变多了。\r\n> \r\n> 再就是大公司会压榨中小公司的生存空间，比如我所在的三线城市，以前根本看不到阿里、腾讯、东软、比亚迪等这些大公司的影子，但疫情之后这些老油条立马把业务辐射了过来，和小城市的各种战略合作也随之而来，抢占市场的手段层出不穷，这都是大环境带来的改变。\r\n> \r\n> 大环境变得不好，就会形成寒蝉效应，失业的人会马上寻找下家公司，这些很多都是有经验的技术人员，自然就会压迫毕业学生及刚入行不久这些群体的生存空间，同样的，没有失业的人群就会重新审视自己的困境，大部分会放弃跳槽，寻求当前的稳定，自然能外放的工作岗位也较往年减少。\r\n> \r\n> 明白了大环境的变化，那么副业这块一下就会戳中失业人群、尚未失业但有紧迫感的人群、即将进入行业的毕业生等等这样一大群人的内心。\r\n> \r\n> 副业当然有成功的，但我想你自己也无法否认，绝大部分都是失败的。\r\n> \r\n> 恕我直言，在座的各位都是韭菜。\r\n\r\n  \r\n\r\n### 割韭菜大法\r\n\r\n> 我工作多年，你们现在所想所做我以前自然也做过想过甚至踩过，哪怕是现在我依然没有放弃了解副业，不过我已经非常清楚一些内幕及手段，同时认清了自己的能力及本事，也大体确定了未来的方向。\r\n> \r\n> 副业多如牛毛，形式花样百变，但万变不离其宗，我今天就把我知道的具有代表性的几个讲述给大家听，希望能让你迷途知返，回归本心。\r\n\r\n#### 1、微商代理\r\n\r\n> 这是老掉牙的割韭菜方式了，说白了就是以前线下的传销，只是互联网时代把内核搬到了线上，变成了微商。\r\n> \r\n> 当然，我并不是否定所有微商，因为有不少都是正规经营，是合法的，我想讲述的是里面这种代理模式属于合法割韭菜，姜太公钓鱼，愿者上钩而已。\r\n\r\n##### 模式\r\n\r\n> 大体的模式都是会有权重高的代理来发展权重低的下级代理，一起卖品牌商提供的产品，品牌商会提供给这些代理一个“人性化”的价格，由代理去卖更“合适”的价格，从而赚取差价，而权重高的代理也能得到一部分下级代理的收益，有些收益是类似买断的，有些收益是看起来小但可以长久的，每个微商品牌的套路会不一样。\r\n\r\n##### 割法\r\n\r\n> 看完模式之后，是不是觉得套路很简单，其实还跟以前的传销没两样嘛，但你想简单了，这里面的套路可不简单，首先这种等级制度在中国传统社会已经流传了千年，你会有作为上级代理挣钱的欲望，会努力发展下线，欲望的滋生往往就会让这群人开始给这个产品润色，甚至昧着良心编造谎言。\r\n> \r\n> 其次，品牌商不光躺着赚钱还免费打广告。\r\n> \r\n> 我有个亲戚就是某品牌的代理，而我的妻子也是某品牌的代理，所以我有特别观察和询问过一些细节，我发现他们都有一个很一致的特点，就是都在花钱买该品牌的产品自己用，同时不遗余力的给该品牌打广告。\r\n> \r\n> 这就是当局者迷了，比如我妻子，搞了3年了，每天朋友圈打广告，走路上不管去哪儿习惯性拉客户加微信，至今毛钱没挣到，自己倒是买了不少，这钱也给人家了，广告也帮人家打了，自己还表现强大的信心。\r\n> \r\n> 我没有责怪她，因为大体上都是小钱，可以接受，没有危害到家庭，重要的是不能打击其创业的积极态度。\r\n> \r\n> 但我对这种割法不得不抬起两根大拇指了，品牌商发展的代理越多，意味着这些代理不仅都是固定的消费者，更是裂变的工具，真正赚钱的其实还是少数金字塔顶端的一些人，剩下的可以说都是韭菜，这方式一举多得，妙哉妙哉。\r\n> \r\n> 我相信你一定在自己的朋友圈见过不少朋友、亲戚、同事的老婆发过这样的微商广告吧哈哈。\r\n\r\n  \r\n\r\n#### 2、视频号运营\r\n\r\n> 这个就是抖音火了之后如雨后春笋一般出现的玩意儿，花样挺多，但套路完全一样。还有一种直播套路也挺火，但考虑到不少人不会走这条路，这里就不讲了，另外就是最近你会听到比较多的中视频计划，很多平台在搞，其实这是大平台的运营手法，确实养活了一些有基础的创作者，但同时也养活了一大群割韭菜的人。\r\n\r\n##### 模式\r\n\r\n> 非常普通的模式，类似于现实中走在路上看到墙上贴的那种五花八门的小卡片，你会不经意间经常在技术论坛、博客、公众号、朋友圈等地方看到一些教你短视频运营的广告，以前只有单纯的教学，现在发展成不光卖你课程，还手把手带你起号、养号、分享流量、一键多发等一条龙无限期服务。\r\n> \r\n> 听起来是不是很爽，再加上他们制作精良的广告图、微信对话截图、学员初期迷茫及成功后感激涕零的文案等等，你会不由自主产生拼一把的想法。\r\n> \r\n> 因为代入感很强，每当你的念头动摇的时候，你就已经进锅了，装进盘子只是时间问题。\r\n\r\n##### 割法\r\n\r\n> 1）、他们有自己的团队运作，有些是工作室，有些直接就是合法注册的公司；\r\n> \r\n> 2）、他们会做录好一些课程，而这些课程你只要花时间几乎可以在网上找到，根本没必要看他们所谓“独特”的内容，可他们“独特”的文案已经吸引了你；\r\n> \r\n> 3）、他们会找知名公众号、博主等花钱打广告，一次大概是三千左右（疫情前其实更高，疫情后行业都不好做所以降价了），长期合作的话还会有优惠，对他们来说都是小钱，后面招收几个学员其实就回本了，而这些公众号、博主等大佬也很聪明，他们心里清楚一些内幕，因此不会给他们打很长时间广告导致自己大量流粉，基本是24小时内甚至更少的时间就立马下架，但对方想要的效果已经达到了；\r\n> \r\n> 4）、当你入坑后，他们会拉你进一个群或者安排一个老师1对1，1对1不用我说了，拉你进一个群的话基本就是你一个人，然后其他几个都是老师，这就很明朗了，你休想和其他学员有任何接触，这就是割韭菜最常用的隔离式教学；\r\n> \r\n> 5）、接下来你会学习他们的课程，对小白来讲是有点用的，但你花的几千块钱完全不值得，对一个有基础的人来讲那就彻底是白花了，你可能会得到某些信息差，但大部分是浪费时间；\r\n> \r\n> 6）、接下来他们也会兑现诺言，教你做出一个成品，然后发布在抖音等平台，你会发现自己的浏览量完全起不来，而每天你刷视频时会发现那些浏览量很高的都是制作精良且用心的视频，而不是割你韭菜的人广告文案中所讲的3天起号养号7天上万爆款过百万等等；\r\n> \r\n> 6）、接下来很长一段时间你会发现他们回复的越来越慢，甚至一天也回复不了几句话，就类似于渣男得手后对女孩惜字如金弃如敝屣的感觉，这个时候你会有一种恐慌和淡淡的明白些什么的感觉，没错的，你被割了；\r\n> \r\n> 7）、根据不同人的性格，你可能会选择默默接受然后很长时间不再相信，你可能会假装没被割继续学习继续提问，他们也依然会有一句没一句的回答你，你还可能会气的大骂他们，但他们会有预先准备好的说辞来应对你；\r\n> \r\n> 8）、最后你真的醒悟的时候，会发现投诉无门，因为别人是正儿八经的知识分享，只是你“学得不好”，你仔细琢磨之后发现确实是自己愚蠢导致的，对方也不是诈骗，一股失落感顿时涌上心头。\r\n\r\n> 讲到这里，我特别说一句，后面的几个割韭菜大法其实都和这个视频号运营的广告差不多，套路也大同小异，文案也是一如既往的一股营销味，但就是抓人眼球抓住心理。\r\n> \r\n> 他们那些打出来的广告，流量高的视频号基本都是内部人自己的，已经经营了很多年的，至于微信对话截图这东西，我不妨告诉你，是能做出来的，看到这里的时候，你不妨就先去百度一下，微信对话生成器，也许会有惊喜。\r\n> \r\n> 我这里就有一个网址可以制作出来非常高水准且真实的对话截图，而且花样百变，但碍于不想被一些大佬攻击，我就不放出来了，对方势力庞大，粉丝都比较多，我只能告诉你有这么个玩意儿。\r\n\r\n  \r\n\r\n#### 3、闲鱼赚差价\r\n\r\n> 闲鱼赚差价的模式其实出来挺久了，但以前流量还没起来，一些搞副业的也是正儿八经在做，但这两年流量起来了非常多，所以割韭菜的人都盯上这块肥肉了。\r\n> \r\n> 闲鱼这块我不会说太多，因为技术圈有好几个我知道的大佬在搞了，而且是很有名气的大佬，我以前关注过很久，后来对方也开始割韭菜了，从知识星球割到闲鱼，我就取关了，不讲太多内幕是不想得罪这些人，因为他们都是强强联手的，粉丝群体很大。\r\n\r\n##### 模式\r\n\r\n> 非常简单，就是带你把闲鱼号以及店铺做起来，会给你提供他们掌握的爆款信息及优质货源，你把货品上架，有人入手你就把对方收货地址等信息发到货源平台进行发货，这样就赚取到了其中的差价。\r\n> \r\n> 这里面的水分其实和视频号运营一样，爆款和优质货源都是文案塑造的，实际上真正教给你去做完全是另一码事，你会发现很难出单，而对方的广告主要是以教学为核心，只是把营销味做的很浓，你会信以为真，100个学生里面，只要成功一两个就能打造出很好的广告效应，而剩下90多个都是韭菜而已。\r\n> \r\n> 说白了，就是买彩票的人都觉得自己也许运气好会中一样，但其实都是万中无一。\r\n\r\n##### 割法\r\n\r\n> 割法和视频号运营一样，基本都是隔离式教学，也会通过公众号、博客论坛等平台打广告吸引你，而且搞技术的人贩卖自己的诚信更具说服力，你学过别人的技术课程已经有了收获，第一印象就很好，那么人家的副业课自然也会受到你的亲睐，这种行为我觉得就是在砸自己招牌。\r\n> \r\n> 我有联系到一个搞闲鱼副业的同行，从他嘴里知道了一部分对方的处理方式，就是当你觉得自己受到了欺骗的时候，对方的说辞大体上都是你还不够努力、你没有耐心、我们核心是教学不是直接让你发财等等，反正你如果成功了，就是他们的服务做得好，你没有成功就是你自己的问题，而他们本身只是做信息和知识分享，不存在刻意欺骗。\r\n> \r\n> 这其实和前面讲的差不多，闲鱼副业的割法也大体是打着信息分享知识分享的教学招牌，包装成我要带你发财我要带你一天10单这样的广告暗示。\r\n\r\n  \r\n\r\n#### 4、小说推文\r\n\r\n> 这个项目是今年才兴起的，一开始我也不知道，但是我目前在武汉上班的大学同学上当后在群里和我们诉苦我才知道，所以我特别联系他了解了具体情况，同时主动加了做小说推文项目的代理商来钓鱼，才摸清楚里面的内幕。\r\n\r\n##### 模式\r\n\r\n> 爱看小说的人特别多，技术圈也一样，所以这个项目为啥今年能兴起，也是因为像知乎、番茄、起点、晋江等等小说平台的推广才造就的，疫情之前其实很少听到这玩意儿，今年尤其火，也是各大平台开放授权代理的结果。\r\n> \r\n> 那么，他们的模式大体是怎样呢。\r\n> \r\n> 首先，这些小说平台会授权平台自身所有会员小说的推广代理权给一些公司或有资质的代理商，这些人就属于一级代理，这些一级代理可以通过一些推广联盟APP或小程序进行小说关键词的申请。\r\n> \r\n> 打个比方，如果你选择知乎平台，你申请了「双腹黑相爱相杀」这样的关键字，然后贴上该小说主页的链接，这样知乎平台会进行审核，一旦审核通过，你在知乎搜索「双腹黑相爱相杀」就会出现这个关键词，并且简介内容是该小说的内容，你点击后就会进入该小说的主页。\r\n> \r\n> 接下来，你需要做一个推广的视频放到抖音、快手、视频号、头条号等等任何平台，视频中或介绍文案或评论中最好有这个关键词，这样读者一旦搜索这个关键词找到小说主页，并且进行冲动消费充值了9元，那么你就可以收益6元左右。\r\n> \r\n> 这就是小说推文的基本流程和收益模式，其实关键就在于视频，但割韭菜的人不会这么告诉你。\r\n\r\n##### 割法\r\n\r\n> 1）、他们依然会通过知名公众号、博客等进行广告，吸引你添加对方的微信；\r\n> \r\n> 2）、在微信朋友圈，你每天都会刷到他们的广告，文案和前面的差不多，带你3天起号7天养号下单即流量破万，每月少则几千多则上万的入账，还会偶尔配有后台学员的收益明细；\r\n> \r\n> 3）、他们会在朋友圈告诉你整个推文流程，微信私聊中也会很热情大方的为你解惑，甚至主动说一些骗子的手法；\r\n> \r\n> 4）、当你看了一段时间朋友圈的广告后，某一天你工作或生活中忽然有了什么不安定因素，这个契机会直接导致你选择相信他们来一场轰轰烈烈的副业之旅；\r\n> \r\n> 5）、你会打3680给对方（同学说的价格），对方会拉你进入一个QQ群，QQ群除了这个打广告的人，还会拉进来至少两个老师，这就是他们说的多对一教学，而你至始至终都接触不到其他学员，你问为什么，他们会告诉你曾经有些学员学会了互相抱团影响到他们教学的收益，一板一眼你听着还挺有道理；\r\n> \r\n> 6）、他们会给你提供简单的课程让你去看，其实就是操作推文的流程，这一块是非常真实的，做不了假，你也确实能明白原来这东西是这么干的，这类似于把核弹制作原理告诉你，可你造的出核弹吗；\r\n> \r\n> 7）、然后他们会教你养号找对标账号等技巧，教你怎么制作短视频，怎么加字幕加背景乐，这些技巧多年前就已经烂大街了；\r\n> \r\n> 8）、当你做出来发布之后，你会发现luan用没有，根本不是他们所讲的那么厉害，他们广告中所谓的资源也不会提供给你，因为那都是他们经营多年的大号，要么就是制作出来的假图片；\r\n> \r\n> 9）、你慢慢会发现他们很少回复你，很久回复你，要么就是让你继续养号，你问多了他们偶尔会不耐烦，问一些你不懂的问题他们有时会觉得你有点傻，口吻语气和你没付钱时有云泥之别；\r\n> \r\n> 10）、你试了一段时间发现自己确实被割了，找他们理论，他们会告诉你他们只是提供一个教学和做推文的渠道，而不是带你发财，嗯，是不是有种似曾相识的感觉；\r\n> \r\n> 11）、你所看到的那些朋友圈微信聊天截图他们是挑着放出来的，3分真7分假，一些成功的学员截图也都是用工具做出来的，只是他们刻意把成功放大，把失败消灭而已。\r\n\r\n> 讲到这里，我额外说一点，比如抖音平台，其实他们官方每年都会明确告诉你推流的规则，因为他们每年都会改变和优化算法，比如今年，抖音的推流算法是以同时间内相同领域的视频质量+浏览量+点赞为首要条件做排序，也就是说根本不存在什么高峰流量期的说法，教你运营的全都是忽悠人的，还不如看官方直播间，你只要作品优秀且持续输出，在任何时间段内，其实你都会排在同领域作品的前面。\r\n\r\n  \r\n\r\n#### 5、AI卖画\r\n\r\n> 这个也是今年才出现的项目，相较于前面的套路，这个稍微显得高科技一点，因为对方确实做出了一款AI产品，只是这个产品在AI领域前两年就已经屡见不鲜了。\r\n\r\n##### 模式\r\n\r\n> 拥有AI智能生成图片的产品，这个产品可能是他们自己做的，更大可能是通过一些渠道购买的，反正他花钱买了拿来割韭菜也不会亏，回本很容易。\r\n> \r\n> 他们会在抖音等平台每天做直播，主要告诉你AI卖画的方式，以及给你实战演示如何通过AI生成任何你想要的图片。\r\n> \r\n> 演示过程大体如下，你输入一段描绘性的文字，然后点击生成图片，产品会自动识别你文字中典型的关键字，几分钟内生成一个高清图片。\r\n> \r\n> 这些图片按照他们的说法都是原创的不侵权，因为都是从其他无数基础图片中提取出来合成的一张新图片。\r\n> \r\n> 因为图片真的很好看很绚丽，所以演示过程会非常吸引你。\r\n> \r\n> 生成的图片会在一些平台进行售卖，比如抖音的话，就是通过闪闪壁纸，你可以直接卖图获取收益。\r\n> \r\n> 有工具可以生成无数图片，还有渠道可以直接售卖，你是不是觉得哇塞还有这种好事，这不是躺着挣钱么。\r\n\r\n##### 割法\r\n\r\n> 收割方式往往都是在直播中体现，当你完全被这些图片和赚钱方式吸引的时候，播主就会告诉你想要知道方法吗，那么就点击关注并且加入群聊。\r\n> \r\n> 以抖音为例，加入抖音群聊后，你会发现是全体禁言的，播主会在直播后将公众号或微信发在群里，你关注后，会被引导到产品页面，但是你需要注册账号。\r\n> \r\n> 注册账号之后，你会有使用AI产品的试用次数，这个次数生成的图片当然是最低级的那种，也就是过个瘾。\r\n> \r\n> 然后会告诉你要进行充值，以获取生成更优质图片的VIP通道，而且还分了不同的包月、包年、按量等充值方式，总之就和你充会员看电视剧差不多。\r\n> \r\n> 当你真的充值以后，你就可以使用了，你能生成很多图片，然后在平台进行售卖，可是你会发现，没那么简单。\r\n> \r\n> 因为你能获取到的收益非常少，同时很长时间都没人买你的图片，你所付出的和你得到的回馈根本不成正比，其中会有一小部分人真的回本了，但也赚不了太多，反而因为次数用尽又需要继续充值，因为他确实赚到了，他觉得他接下来就能赚更多。\r\n> \r\n> 最可怕的是，这些生成的图片你以为没有侵权，实际上这只是对方割韭菜的高明之处，因为法律是需要完善的，目前没有侵权是因为AI领域没有发展那么成熟，一些法律规定还尚未涉及，你可能此时此刻只是在打擦边球而已。\r\n> \r\n> 一旦关于AI领域的法律完善，这些图片很可能都是侵权的，而后面被割的那些韭菜等于花了钱还要承担法律责任，卖你产品的人反而不用，因为他不是卖画的，他只是卖AI产品的，真正卖画的是你自己，他在这一年之内收割完这一波大概率就注销跑路了。\r\n\r\n  \r\n\r\n### 现在能做的事\r\n\r\n> 看完了大篇幅讲述的几种割韭菜大法，是不是有点心灰意冷，这还只是我摘取的其中几个这两年比较典型的案例，割韭菜的方法其实非常多，但变来变去都还是过分营销的变种。\r\n> \r\n> 我并非不能明白这些人群选择入坑的心理，因为我20几岁的时候也踩过很多坑。\r\n> \r\n> 大家无非就那么几种心态，一种是单纯的不聪明，一种是生活工作不如意带着赌徒心态，一种是对未来有恐慌想尝试尝试，一种是很聪明也知道水很深但因为某个契机脑子一热选择入坑了。\r\n> \r\n> 这些割韭菜的人一直都是用老套的手法来包装新东西，采用过度营销的方式抓住消费者的心理，我们应该如何避免踩坑呢？\r\n> \r\n> 那就是一定要明白自己现在能做的事是什么，本篇我不是给其他行业的人讲的，针对的主要是技术圈的同行们，你们当下最能做的事到底是什么呢？\r\n> \r\n> 1）、一定要有一份工作，当做自己的主业，脚踏实地学点本事，不要焦躁，要沉淀，切切实实的积累工作经验。大环境虽然不好，但也没烂到一个程序员毫无出路的地步，此时姑且认清局势，不管工作满意与否，先干着，边工边学，为将来谋划更好出路做技术储备；\r\n> \r\n> 2）、未婚者早点考虑恋爱及婚姻，因为你临近30岁开始会有非常多琐碎的事情逐渐缠绕着你，会大量占据你工作及学习的时间，如果不早作考虑，人生节点到来，你会措手不及，甚至焦头烂额。而早作打算的人，人生规划会完全不同，早日结婚，不管婚后家务事有多少，但心智已经安定，可以放手去做自己的工作或发展事业。\r\n> \r\n> 以上两点，是我的肺腑之言，信与不信，回首看，你定会有所体悟。\r\n\r\n  \r\n\r\n### 以后能做的事\r\n\r\n> 想清楚了现在能做的事，那么以后能做的事是什么呢？\r\n> \r\n> 我毕竟只是30几岁的人，还没有那么丰富的人生经历，无法断言未来有多少能做的事，我只能暂且把我想到的方向分享给你们。\r\n> \r\n> 我曾经多个夜晚辗转反侧思考过这个问题，程序员的出路在哪里，别告诉我卖课郎说的那些鸡汤，大家都听腻了，也不适用于所有人，大部分人进入技术圈带着一些偶然性，从很多大学生从其他专业进入IT行业就是佐证，没人能真的一下想明白未来，都是走一步看一步。\r\n> \r\n> 对于绝大部分程序员未来能做的事有这些：\r\n> \r\n> 1）、不放弃学习的前提下，你现在的积累在之后的每5年都可能成为一笔财富，你的笔记是财富，你的博文是财富，你尝试编写的开源项目也是财富，因为互联网时代流量决定一切，你能掌握的最低限度且最稳定的流量密码就是持续输出，未来有一天很可能会开花结果，属于学习型投资。\r\n> \r\n> 说个例子，CSDN上有一个挺出名的账号，现在也是知名的公众号大佬，我打开他主页的时候竟然发现他的注册时间和我是同一年，翻看过他的文章，发现他从开始学习到工作到现在为止都没停止过输出，所以他积累了大量的粉丝，这种保持学习的态度最终给他带来了收益和变现，而我和他同一年注册，却什么都没输出也没有坚持，现在我面临思考，而对方已经收获成果；\r\n> \r\n> 2）、知识分享依然是技术人才在互联网时代实现变现的最好副业出路，你可以提供有偿技术咨询，可以提供有偿毕设案例，更可以录制基础及中高级乃至实战课程，和好的平台合作或者直接买断，都会是一笔很不错的收益。\r\n> \r\n> 比如上半年的时候就有一个不算大的平台做编程教育的，邀请我去给他们出一些简单的题，10道题就能给你一两千的收益，也有其他平台看过我的文章过后私信邀请去做线上专题直播，一场也是几千块，因为种种原因我拒绝了，不过这都说明了技术人才副业变现的最佳途径就是知识分享，只要你不停止分享，机会总会迎面而来。\r\n> \r\n> 3）、当技术储备到一定阶段，请务必尝试去写开源项目，这是一个自我提升和吸粉的重要渠道，你能通过编写开源项目及不断升级优化来提升自己的能力，还能精准吸粉转化成私域，同时后期可以切分支打造变现产品。\r\n> \r\n> 举个例子，你一定见过很多后台管理端的产品，其实这么多年过去也就那么些东西，你觉得很多是因为你压根不愿意花精力去做，原创作者一定利用了业余时间一点点编写，才会让一个项目逐渐丰满起来，发布之后随着版本迭代形成规模。\r\n> \r\n> 所以你能在Gitee上看到很多类似的受欢迎的后台管理项目，且粉丝非常多，因为既能拿来学习还能拿来做项目，这些粉丝本身就是财富。\r\n> \r\n> 你还能在一些网站看到类似的项目，1500多授权一套或永久授权，1份卖1500，,100份就是15万了，买过你的项目可能以后会继续买你其他的项目，你真的不心动吗，这不就是通过技术积累达到的最好的副业变现么。\r\n\r\n  \r\n\r\n### 不放弃特别难\r\n\r\n> 你可能会说，这有些不切实际，因为这么多人都这么想，大家都去做，就没有什么意义。\r\n> \r\n> 你大错特错，至少我从上学到工作到现在，我身边真正坚持下来的同学和同事就已经少了一半，要么转行了，要么是学不动了。\r\n> \r\n> 大浪淘沙，不过尔尔。\r\n> \r\n> 这些人选择离去，说白了就是已经放弃了。\r\n> \r\n> 不放弃特别难，尤其是每隔几年就有新的技术体系出现，即使是对行业保持热情的我也有好几次想过干别的。\r\n> \r\n> 你的坚持不会变得毫无道理，技术积累一直都是一个长久的过程，我属于天分一般的程序员，但依然能通过不断的学习产生蜕变，这是一种武侠小说中突破瓶颈的感觉，也只有到这个程度，你才会发现自己有新的东西可以书写，有更优质的内容可以分享。\r\n> \r\n> 所以，不放弃是艰难且扎实的一步。\r\n\r\n  \r\n\r\n### 韭菜自我救赎\r\n\r\n> 如果你读完本篇后，有了已经成为韭菜或即将成为韭菜的自觉，那么一定要学会自我救赎，就像有烟瘾的人很难戒掉一样，一心想着做副业的程序员也很难从这个氛围中脱离出来。\r\n\r\n#### 1、我的「负业」之旅\r\n\r\n> 以我自己为例，我本身是动漫爱好者，十几岁开始喜欢二次元，曾经也打算进入这个行业做动漫设计，但阴差阳错进了IT行业，做编程到二十七八岁开始有种紧迫感，一度每天都在想着怎么搞副业。\r\n> \r\n> 我借着自己的爱好设计售卖过表情包，给各大小说平台做过封面设计及小说海报，林林总总上千个是有的，期间也赚过一些钱，但实在太累且收益稀薄就放弃了。\r\n> \r\n> 接下来还花了一年多时间和小说平台签约写小说，一度还收获不少粉丝，小说名字我就不说了很尴尬，经常熬夜码字，最多时日更三章，最终我的收获也只是全勤奖和上架后的微薄打赏而已，因为焦躁感导致无法继续坚持，也放弃了。\r\n> \r\n> 后来联系过广州很铁的销售同事一起搞过外包，熬夜赶工心力交瘁有次还夜里流鼻血，不是为了那点钱，只是为了寻求副业上的出路，款项最终拿到了，但扛不住压力也放弃了继续坚持。\r\n> \r\n> 从外地回到老家之后还和朋友合资搞过宠物店和狗厂，但没有熟悉行情，也缺乏调研，亏了一屁股。\r\n> \r\n> 在此期间，类似于上面的割韭菜大法，当年的形式虽然不同，但我也踩了好几次，而且是明知故送，我太明白那种心情了。\r\n> \r\n> 直到我遍体鳞伤，才终于醒悟和脱离出来，决定把自己好好沉淀下来，安安心心踏踏实实投入到主业工作去了。\r\n> \r\n> 作者并非反对程序员做副业，只是反对程序员无形中把副业当成了主业，这是舍本逐末的行为。\r\n\r\n#### 2、如何自我救赎？\r\n\r\n> 一定要发展其他的兴趣爱好，可以是编程领域，也可以是其他领域。\r\n> \r\n> 比如我自己，在编程领域我主攻Java，但是总有疲惫的时候，这时我会去学习前端，或者学习其他语言如python、go，并非我喜欢，只是换一种思维，学一段时间后我又会重新学习Java，会有不一样的新鲜感。\r\n> \r\n> 我还会在对编程领域感到乏味的时候去学习其他领域，比如短视频剪辑、曾经做过的封面设计或LOGO字体设计等，长久下来副业技能反倒会有所提升，同时也减轻了主业的枯燥感。\r\n> \r\n> 除了学习，你甚至可以买几本实体书来阅读，可以是任何领域的，还可以上小说平台干脆找一本网络小说来看看，追一部电视剧也是个不错的选择，比如本人前段时间就追了《一闪一闪亮星星》《唐朝诡事录》。\r\n> \r\n> 追剧的时间结束后，我重新恢复学习状态，会有非常不一样的积极性，你们大可以去试试。\r\n> \r\n> 通过几年的沉淀，我逐渐找回了自我，在主业工作中我学习到了非常多实用性的技能，掌握了互联网医疗行业的许多研发技术及丰富的业务场景，成为了公司的核心研发之一，薪水也得到了提高。\r\n> \r\n> 同时，不再去想副业，整个身心都轻松了许多，几年间陆陆续续也会有副业设计类的收入以及通过知识分享带来的收益，零零散散，不多不少，却让我有种柳暗花明的感觉。\r\n\r\n  \r\n\r\n### 总结\r\n\r\n> 1、割韭菜的方式从来没变，只要是打广告暗示可以带你发财变现的，想都别想，直接拉黑了吧，全是营销文案；\r\n> \r\n> 2、明白现在能做的事和未来能做的事，踏实工作，储备技能，永远以主业工作为核心，放松身心去认知副业；\r\n> \r\n> 3、学习编程已经很难，成为程序员更是人生一种际遇，如果轻言放弃，怎对得起曾经绞尽脑汁的无数个日夜呢；\r\n> \r\n> 4、学会自我救赎，拓展更多兴趣爱好充实自己，因为这些兴趣爱好建立在你的动力之上，反而更可能在未来变成你的副业支撑；\r\n\r\n> 程序员，别老想着做副业了，收收心吧，当你真正明白这一点的时候，就是你在编程领域突飞猛进的时候了。\r\n\r\n* * *\r\n\r\n原创文章纯手打，一个一个字敲出来的，如果觉得有帮助麻烦点个赞和收藏吧~\r\n\r\n本人致力于分享工作中的经验及趣事，喜欢的话可以进主页关注一下哦~\r\n\r\n', 9, 0, 1, '2023-03-02 12:38:52', '2022-11-30 10:26:56', '万字泣血解析割韭菜内幕，程序员别老想着做副业', 'http://cdn.forevergtt.love/mysystem/medicine/be7a342b-8408-4c77-a9b3-c56ad86bf9ce');
INSERT INTO `article` VALUES (1334, 6, '99%的Java程序员会踩的6个坑', '前言\r\n\r\n作为Java程序员的你，不知道有没有踩过一些基础知识的坑。\r\n\r\n有时候，某个bug，你查了半天，最后发现竟然是一个非常低级的错误。\r\n\r\n有时候，某些代码，这一批数据功能正常，但换了一批数据就出现异常了。\r\n\r\n有时候，你可能会看着某行代码目瞪口呆，心里想：这行代码为什么会出错？\r\n\r\n今天跟大家一起聊聊99%的Java程序员踩过，或者即将踩的6个坑。\r\n\r\n1\\. 用==号比较的坑\r\n\r\n不知道你在项目中有没有见过，有些同事对Integer类型的两个参数使用\\==号比较是否相等？\r\n\r\n反正我见过的，那么这种用法对吗？\r\n\r\n我的回答是看具体场景，不能说一定对，或不对。\r\n\r\n有些状态字段，比如：orderStatus有：-1(未下单)，0（已下单），1（已支付），2（已完成），3（取消），5种状态。\r\n\r\n这时如果用==判断是否相等：\r\n\r\nInteger orderStatus1 = new Integer(1);Integer orderStatus2 = new Integer(1);\r\n\r\nSystem.out.println(orderStatus1 == orderStatus2);\r\n\r\n返回结果会是true吗？\r\n\r\n答案：是false。\r\n\r\n有些同学可能会反驳，Integer中不是有范围是：\\-128-127的缓存吗？\r\n\r\n为什么是false？\r\n\r\n先看看Integer的构造方法：![](//n.sinaimg.cn/sinakd20220719s/602/w472h130/20220719/de34-c3389b1d171baf4d144aeab2f020a032.jpg)\r\n\r\n它其实并没有用到缓存。\r\n\r\n那么缓存是在哪里用的？\r\n\r\n答案在valueOf方法中：\r\n\r\n![](//n.sinaimg.cn/sinakd20220719s/294/w892h202/20220719/37e2-7730a72af72e6040af698a9770c1232d.jpg)\r\n\r\n如果上面的判断改成这样：\r\n\r\nString orderStatus1 = new String(\"1\");String orderStatus2 = new String(\"1\");\r\n\r\nSystem.out.println(Integer.valueOf(orderStatus1) == Integer.valueOf(orderStatus2));\r\n\r\n返回结果会是true吗？\r\n\r\n答案：还真是true。\r\n\r\n我们要养成良好编码习惯，尽量少用==判断两个Integer类型数据是否相等，只有在上述非常特殊的场景下才相等。\r\n\r\n而应该改成使用equals方法判断：\r\n\r\nInteger orderStatus1 = new Integer(1);Integer orderStatus2 = new Integer(1);\r\n\r\nSystem.out.println(orderStatus1.equals(orderStatus2));\r\n\r\n运行结果为true。\r\n\r\n2\\. Objects.equals的坑\r\n\r\n假设现在有这样一个需求：判断当前登录的用户，如果是我们指定的系统管理员，则发送一封邮件。系统管理员没有特殊的字段标识，他的用户id=888，在开发、测试、生产环境中该值都是一样的。\r\n\r\n这个需求真的太容易实现了：\r\n\r\nUserInfo userInfo = CurrentUser.getUserInfo();if(Objects.isNull(userInfo)) {   log.info(\"请先登录\");return;\r\n\r\n}\r\n\r\nif(Objects.equals(userInfo.getId(),888L)) {\r\n\r\n   sendEmail(userInfo):\r\n\r\n}\r\n\r\n从当前登录用户的上下文中获取用户信息，判断一下，如果用户信息为空，则直接返回。\r\n\r\n如果获取到的用户信息不为空，接下来判断用户id是否等于888。\r\n\r\n如果等于888，则发送邮件。\r\n\r\n如果不等于888，则啥事也不干。\r\n\r\n当我们用id=888的系统管理员账号登录之后，做了相关操作，满怀期待的准备收邮件的时候，却发现收了个寂寞。\r\n\r\n后来，发现UserInfo类是这样定义的：\r\n\r\n@Data\r\n\r\npublicclassUserInfo{private Integer id;private String name;private Integer age;private String address;\r\n\r\n}\r\n\r\n此时，有些小伙伴可能会说：没看出什么问题呀。\r\n\r\n但我要说的是这个代码确实有问题。\r\n\r\n什么问题呢？\r\n\r\n下面我们重点看看它的equals方法：\r\n\r\npublicstaticbooleanequals(Object a, Object b){return (a == b) || (a != null && a.equals(b));\r\n\r\n}\r\n\r\nequals方法的判断逻辑如下：\r\n\r\n该方法先判断对象a和b的引用是否相等，如果相等则直接返回true。\r\n\r\n如果引用不相等，则判断a是否为空，如果a为空则返回false。\r\n\r\n如果a不为空，调用对象的equals方法进一步判断值是否相等。\r\n\r\n这就要从Integer的equals方法说起来了。\r\n\r\n它的equals方法具体代码如下：\r\n\r\npublicbooleanequals(Object obj){if (obj instanceof Integer) {return value == ((Integer)obj).intValue();\r\n\r\n    }\r\n\r\nreturnfalse;\r\n\r\n}\r\n\r\n先判断参数obj是否是Integer类型，如果不是，则直接返回false。如果是Integer类型，再进一步判断int值是否相等。\r\n\r\n而上面这个例子中b是long类型，所以Integer的equals方法直接返回了false。\r\n\r\n也就是说，如果调用了Integer的equals方法，必须要求入参也是Integer类型，否则该方法会直接返回false。\r\n\r\n除此之外，还有Byte、Short、Double、Float、Boolean和Character也有类似的equals方法判断逻辑。\r\n\r\n常见的坑有：\r\n\r\nLong类型和Integer类型比较，比如：用户id的场景。\r\n\r\nByte类型和Integer类型比较，比如：状态判断的场景。\r\n\r\nDouble类型和Integer类型比较，比如：金额为0的判断场景。\r\n\r\n如果你想进一步了解Objects.equals方法的问题，可以看看我的另一篇文章《Objects.equals有坑》。\r\n\r\n3\\. BigDecimal的坑\r\n\r\n通常我们会把一些小数类型的字段（比如：金额），定义成BigDecimal，而不是Double，避免丢失精度问题。\r\n\r\n使用Double时可能会有这种场景：\r\n\r\ndouble amount1 = 0.02;double amount2 = 0.03;\r\n\r\nSystem.out.println(amount2 - amount1);\r\n\r\n正常情况下预计amount2 - amount1应该等于0.01\r\n\r\n但是执行结果，却为：\r\n\r\n0.009999999999999998\r\n\r\n实际结果小于预计结果。\r\n\r\nDouble类型的两个参数相减会转换成二进制，因为Double有效位数为16位这就会出现存储小数位数不够的情况，这种情况下就会出现误差。\r\n\r\n常识告诉我们使用BigDecimal能避免丢失精度。\r\n\r\n但是使用BigDecimal能避免丢失精度吗？\r\n\r\n答案是否定的。\r\n\r\n为什么？\r\n\r\nBigDecimal amount1 = new BigDecimal(0.02);BigDecimal amount2 = new BigDecimal(0.03);\r\n\r\nSystem.out.println(amount2.subtract(amount1));\r\n\r\n这个例子中定义了两个BigDecimal类型参数，使用构造函数初始化数据，然后打印两个参数相减后的值。\r\n\r\n结果：\r\n\r\n0.0099999999999999984734433411404097569175064563751220703125\r\n\r\n不科学呀，为啥还是丢失精度了？\r\n\r\nJdk中BigDecimal的构造方法上有这样一段描述：\r\n\r\n![](//n.sinaimg.cn/sinakd20220719s/336/w908h228/20220719/7d49-b45c7c1c2556472577f43513a88bd5d9.jpg)\r\n\r\n大致的意思是此构造函数的结果可能不可预测，可能会出现创建时为0.1，但实际是0.1000000000000000055511151231257827021181583404541015625的情况。\r\n\r\n由此可见，使用BigDecimal构造函数初始化对象，也会丢失精度。\r\n\r\n那么，如何才能不丢失精度呢？\r\n\r\nBigDecimal amount1 = new BigDecimal(Double.toString(0.02));BigDecimal amount2 = new BigDecimal(Double.toString(0.03));\r\n\r\nSystem.out.println(amount2.subtract(amount1));\r\n\r\n我们可以使用Double.toString方法，对double类型的小数进行转换，这样能保证精度不丢失。\r\n\r\n其实，还有更好的办法：\r\n\r\nBigDecimal amount1 = BigDecimal.valueOf(0.02);BigDecimal amount2 = BigDecimal.valueOf(0.03);\r\n\r\nSystem.out.println(amount2.subtract(amount1));\r\n\r\n使用BigDecimal.valueOf方法初始化BigDecimal类型参数，也能保证精度不丢失。在新版的阿里巴巴开发手册中，也推荐使用这种方式创建BigDecimal参数。\r\n\r\n4\\. Java8 filter的坑\r\n\r\n对于Java8中的Stream用法，大家肯定再熟悉不过了。\r\n\r\n我们通过对集合的Stream操作，可以实现：遍历集合、过滤数据、排序、判断、转换集合等等，N多功能。\r\n\r\n这里重点说说数据的过滤。\r\n\r\n在没有Java8之前，我们过滤数据一般是这样做的：\r\n\r\npublic List filterUser(List userList){if(CollectionUtils.isEmpty(userList)) {return Collections.emptyList();\r\n\r\n    }\r\n\r\n    List\r\n\r\n resultList = Lists.newArrayList();\r\n\r\nfor(User user: userList) {if(user.getId() > 1000 && user.getAge() > 18)   {\r\n\r\n           resultList.add(user);\r\n\r\n        }\r\n\r\nreturn resultList;\r\n\r\n}\r\n\r\n通常需要另一个集合辅助完成这个功能。\r\n\r\n但如果使用Java8的filter功能，代码会变得简洁很多，例如：\r\n\r\npublic List filterUser(List userList){if(CollectionUtils.isEmpty(userList)) {return Collections.emptyList();\r\n\r\n    }\r\n\r\nreturn userList.stream()    .filter(user -> user.getId() > 1000 && user.getAge() > 18)\r\n\r\n    .collect(Collectors.toList());\r\n\r\n}\r\n\r\n代码简化了很多，完美。\r\n\r\n但如果你对过滤后的数据，做修改了：\r\n\r\nList userList = queryUser();\r\n\r\nList\r\n\r\n filterList = filterUser(userList);\r\n\r\nfor(User user: filterList) {   user.setName(user.getName() + \"测试\");\r\n\r\n}\r\n\r\nfor(User user: userList) {\r\n\r\n   System.out.println(user.getName());\r\n\r\n}\r\n\r\n你当时可能只是想修改过滤后的数据，但实际上，你会把元素数据一同修改了。\r\n\r\n意不意外，惊不惊喜？\r\n\r\n其根本原因是：过滤后的集合中，保存的是对象的引用，该引用只有一份数据。\r\n\r\n也就是说，只要有一个地方，把该引用对象的成员变量的值，做修改了，其他地方也会同步修改。\r\n\r\n如下图所示：\r\n\r\n![](//n.sinaimg.cn/sinakd20220719s/74/w1080h594/20220719/8a40-0ac8103980f53575994bbd90eca77f14.png)\r\n\r\n5\\. 自动拆箱的坑\r\n\r\nJava5之后，提供了自动装箱和自动拆箱的功能。\r\n\r\n自动装箱是指：JDK会把基本类型，自动变成包装类型。\r\n\r\n比如：\r\n\r\nInteger integer = 1;\r\n\r\n等价于：\r\n\r\nInteger integer = new Integer(1);\r\n\r\n而自动拆箱是指：JDK会把包装类型，自动转换成基本类型。\r\n\r\n例如：\r\n\r\nInteger integer = new Integer(2);int sum = integer + 5;\r\n\r\n等价于：\r\n\r\nInteger integer = new Integer(2);int sum = integer.intValue() + 5;\r\n\r\n但实际工作中，我们在使用自动拆箱时，往往忘记了判空，导致出现NullPointerException异常。\r\n\r\n5.1 运算\r\n\r\n很多时候，我们需要对传入的数据进行计算，例如：\r\n\r\npublicclassTest2{publicstaticvoidmain(String\\[\\] args){        System.out.println(add(new Integer(1), new Integer(2)));\r\n\r\n    }\r\n\r\nprivatestatic Integer add(Integer a, Integer b){return a + b;\r\n\r\n    }\r\n\r\n如果传入了null值：\r\n\r\nSystem.out.println(add(null, new Integer(2)));\r\n\r\n则会直接报错。\r\n\r\n5.2 传参\r\n\r\n有时候，我们定义的某个方法是基本类型，但实际上传入了包装类，比如：\r\n\r\npublicstaticvoidmain(String\\[\\] args){    Integer a = new Integer(1);    Integer b = null;\r\n\r\n    System.out.println(add(a, b));\r\n\r\n}\r\n\r\nprivatestatic Integer add(int a, int b){return a + b;\r\n\r\n}\r\n\r\n如果出现add方法报NullPointerException异常，你可能会懵逼，int类型怎么会出现空指针异常呢？\r\n\r\n其实，这个问题出在：Integer类型的参数，其实际传入值为null，JDK字段拆箱，调用了它的intValue方法导致的问题。\r\n\r\n6\\. replace的坑\r\n\r\n很多时候我们在使用字符串时，想把字符串比如：ATYSDFA\\*Y中的字符A替换成字符B，第一个想到的可能是使用replace方法。\r\n\r\n如果想把所有的A都替换成B，很显然可以用replaceAll方法，因为非常直观，光从方法名就能猜出它的用途。\r\n\r\n那么问题来了：replace方法会替换所有匹配字符吗？\r\n\r\njdk的官方给出了答案。\r\n\r\n![](//n.sinaimg.cn/sinakd20220719s/450/w1026h224/20220719/8184-5a378a08497408074b802f148aafa2c7.jpg)\r\n\r\n该方法会替换每一个匹配的字符串。\r\n\r\n既然replace和replaceAll都能替换所有匹配字符，那么他们有啥区别呢？\r\n\r\nreplace有两个重载的方法。\r\n\r\n其中一个方法的参数：char oldChar 和 char newChar，支持字符的替换。\r\n\r\nsource.replace(\'A\', \'B\')\r\n\r\n另一个方法的参数是：CharSequence target 和 CharSequence replacement，支持字符串的替换。\r\n\r\nsource.replace(\"A\", \"B\")\r\n\r\n而replaceAll方法的参数是：String regex 和 String replacement，即基于正则表达式的替换。\r\n\r\n例如对普通字符串进行替换：\r\n\r\nsource.replaceAll(\"A\", \"B\")\r\n\r\n使用正则表达替换（将\\*替换成C）：\r\n\r\nsource.replaceAll(\"\\\\\\\\\\*\", \"C\")\r\n\r\n顺便说一下，将\\*替换成C使用replace方法也可以实现：\r\n\r\nsource.replace(\"\\*\", \"C\")\r\n\r\n小伙们看到看到二者的区别了没？使用replace方法无需对特殊字符进行转义。\r\n\r\n不过，千万注意，切勿使用如下写法：\r\n\r\nsource.replace(\"\\\\\\\\\\*\", \"C\")\r\n\r\n这种写法会导致字符串无法替换。\r\n\r\n还有个小问题，如果我只想替换第一个匹配的字符串该怎么办?\r\n\r\n这时可以使用replaceFirst方法：\r\n\r\nsource.replaceFirst(\"A\", \"B\")\r\n\r\n说实话，这里内容都很基础，但越基础的东西，越容易大意失荆州，更容易踩坑。\r\n\r\n最后，统计一下，这些坑一个都没踩过的同学，麻烦举个手。\r\n', 8, 0, 1, '2023-03-02 12:38:52', '2022-11-16 16:33:26', '让你不再踩坑', 'http://cdn.forevergtt.love/mysystem/medicine/36706fcb-8de7-4fb6-91e3-c8f0a394216d');
INSERT INTO `article` VALUES (1335, 7, '用vue构建用户界面有哪些好处？', '前端开发者最主要的工作，就是为网站的使用者(又称为：网站的用户)构建出美观、舒适、好用的网页。vue的出现，逐渐替代了传统的jQuery + 模板引擎构建页面方式，逐渐成为在构建用户界面方面的主流开发框架。下面就来看一下与vue框架传统开发框架相比有哪些优缺点。\r\n\r\n![](//n.sinaimg.cn/sinakd20220221s/166/w618h348/20220221/a16a-347ae1a27de821391f9a081942b87a62.jpg)\r\n\r\njQuery + 模板引擎构建页面\r\n\r\n在传统的Web 前端开发中，是基于jQuery + 模板引擎的方式来构建用户界面的。\r\n\r\n编写结构：\r\n\r\n基于模板引擎技术，把数据渲染到页面上。\r\n\r\n优点：初步解放了前端开发者，从此不用手动拼接字符串来渲染网页结构了。\r\n\r\n缺点：1.需要定义大量的模板结构;2.缺少语法高亮和智能提示;3.数据变化时需要重新调\r\n\r\n用模板编译的函数，否则页面结构不会更新;\r\n\r\n美化样式：\r\n\r\n基础CSS样式，美化网页的可视化效果。\r\n\r\n处理交互：\r\n\r\n基于jQuery技术，处理用户和网页之间的交互行为。\r\n\r\n优点：屏蔽了DOMAPI之间的兼容性，提高了DOM操作的效率和体验。\r\n\r\n缺点：当业务复杂时、数据变化频繁时，前端程开发者需要把大量的时间和精力浪费在DOM 的操作上，而不是核心业务的处理上。\r\n\r\nvue 构建用户界面\r\n\r\n使用 vue 构建用户界面，解决了 jQuery + 模板引擎 的诸多痛点，极大的提高了前端开发的效率和体验。\r\n\r\n编写结构：\r\n\r\n基于vue中提供的指令，可以方便快捷的渲染页面的结构(乐不思蜀)。数据驱动视图(只要页面依赖的数据源变化，则页面自动重新渲染) 指令是vue为开发者提供的模板语法，用来辅助开发者渲染页面的结构。\r\n\r\n美化样式：\r\n\r\n基础CSS样式，美化网页的可视化效果。\r\n\r\n处理交互：\r\n\r\n基于vue中提供的事件绑定，可以轻松处理用户和页面之间的交互行为。开发者把工作的重心放在核心业务的实现上。', 2, 0, 1, '2023-03-02 12:38:52', '2022-12-02 16:37:20', '用vue构建用户界面有哪些好处？', 'http://cdn.forevergtt.love/mysystem/medicine/a7e843f9-0572-4a94-b560-17d014271db2');
INSERT INTO `article` VALUES (1336, 8, '这 11 种编程语言，还“活着”吗？', '编程语言发展至今，有的语言仍然炙手可热，而有的语言已经敲响了丧钟。看看如下这张编程语言的历史纪年表，你听说过的有多少种？\r\n\r\n本文不是为了哀悼这些编程语言，而是让我们找到前进的力量，本文提及的这11种语言虽然不再流行，但它们为现代编程语言的发展奠定了基础，并为科学家、开发人员和工程师铺平了道路。\r\n\r\n![](//n.sinaimg.cn/sinakd20221201s/500/w883h417/20221201/676c-6c9aa4932bb960862b15ca17c4edd957.png)\r\n\r\n![](//n.sinaimg.cn/sinakd20221201s/145/w107h38/20221201/7a18-aab0d71b18c03aa6b9db8feb36d62d41.png)\r\n\r\nAda\r\n\r\n![](//n.sinaimg.cn/sinakd20221201s/782/w973h609/20221201/cbd1-eb2b1354c19baee27618dd012d6a8d54.png)\r\n\r\n该语言根据英国数学家 Ada Lovelace（埃达·洛夫莱斯）命名，她是史上最早的程序员之一。1991 年，Ada 受美国国防部的委托，整合了美军当时使用的 450 多种编程语言。\r\n\r\n根据维基百科的说明：\r\n\r\n> “Ada 是一种结构化的、静态类型的、命令式的、范围广泛的、面向对象的高级计算机编程语言。”\r\n\r\nAda 的设计初衷就在于完成如此多的任务，所以最终结果就是一个大而全且十分复杂的编译器。\r\n\r\n> 1991 年，美国国防部要求所有软件都使用 Ada（Ada 强制令），但经常会破例允许一些软件不使用 Ada。\r\n> \r\n> 1997年，随着美国国防部采用商业技术，Ada 强制令也被取缔了。\r\n\r\n然而，Ada 在商业上的使用并没有随着 Ada 强制令的取缔而结束。如今，Ada 仍广泛用于医疗以及其他关键任务系统编程。\r\n\r\n![](//n.sinaimg.cn/sinakd20221201s/148/w109h39/20221201/b30f-e37720fed776e1b8b907bb69c03eaf6b.png)\r\n\r\nAlgol\r\n\r\n![](//n.sinaimg.cn/sinakd20221201s/593/w966h427/20221201/39b4-19a29c4cbfd4c349a12a507bf0fb67c7.png)\r\n\r\nAlgol 最初是由一群计算机科学界的重量级人物于 19 世纪 50 年代设计的，作为计算机协会（Association for Computing Machinery，简称ACM）描述算法的标准。\r\n\r\nAlgol 的设计旨在避免 FORTRAN 的一些常见的问题，它极大地影响了后来许多其他命令式语言，包括 PL/I、Simula、BCPL、B、Pascal 和 C。\r\n\r\n60 年代之后，Algol 不再有任何发展，同时这门编程语言的发展也走到了尽头，逐步让位于其他编程语言。\r\n\r\n![](//n.sinaimg.cn/sinakd20221201s/149/w109h40/20221201/24b7-1a9eea034cd14b17d477002c59b55b42.png)\r\n\r\nAPL\r\n\r\nAPL 创建于 20 世纪 60 年代，是一种动态类型的编程语言，其核心技术是多维数组。APL 极大地影响了概念建模、电子表格、函数式编程以及计算机数学包的发展，并启发了其他若干编程语言。\r\n\r\n由于 APL 鼓励程序员使用多维数组和符号，因此用 APL 编写的代码相对比较复杂，而且对于不熟悉该语言的人来说理解难度很大。\r\n\r\n如今仍有一些顽强的 APL 程序员坚守在物理或数学实验室中，与非常复杂的算法奋战。\r\n\r\n![](//n.sinaimg.cn/sinakd20221201s/149/w111h38/20221201/cc60-f4ac9e7442c15930f496dee2c89e753b.png)\r\n\r\nForth\r\n\r\n![](//n.sinaimg.cn/sinakd20221201s/646/w978h468/20221201/11dd-dc8d984a03a40f841d9c1c9d61c97308.png)\r\n\r\nForth 是一种无类型、面向堆栈的编程语言，专为计算器、计算机辅助设计 (CAD)、天文和空间应用等嵌入式系统而设计。这门编程语言适用于编写高效、可靠、执行速度非常快的小型应用的代码。\r\n\r\n虽然 Forth 主要用于嵌入式领域，但很多操作系统的引导加载程序也用到了该语言。除了这些领域之外，大多数程序员也只是听说过该语言，但并未真正使用过。\r\n\r\n![](//n.sinaimg.cn/sinakd20221201s/148/w109h39/20221201/f774-5595791f44c79356ee8a9177c2e70a39.png)\r\n\r\nLISP\r\n\r\n![](//n.sinaimg.cn/sinakd20221201s/797/w976h621/20221201/c4ca-7c67ca4219edb720a2312226050a38f8.png)\r\n\r\nLISP 诞生于 20 世纪 50 年代后期，其最有名的经典数据结构之一便是链表。链表是一种非常高效的机制，可用于在单个结构中处理多种数据类型。LISP 提出的许多概念在如今数据量很大、规模非常紧凑的系统中都有使用。\r\n\r\nLISP 有很多后续的衍生语言，最著名的便是 Common Lisp 和 Scheme。\r\n\r\n在经历了多年的逐步下滑之后，随着研究人员寻找为小型系统添加智能功能的方法，LISP 的发展也出现了复苏。但在 AI 的世界之外，LISP 并不是很成功。\r\n\r\n![](//n.sinaimg.cn/sinakd20221201s/150/w110h40/20221201/a7a8-4a811d90ddd007649b993d160afda4b9.png)\r\n\r\nLogo\r\n\r\n![](//n.sinaimg.cn/sinakd20221201s/185/w895h890/20221201/f10d-859efd144c519f28b5917910e8d040b4.png)\r\n\r\nLogo 最初是于 20 世纪 60 年代后期设计的，是一种被用作教授编程概念的语言。Logo 的形式非常类似于 LISP 语言，也被称为面向逻辑的编程语言。\r\n\r\n如今这门编程语言主要应用于人工智能、数理逻辑和发展心理学领域。\r\n\r\nLogo 最有名的是海龟绘图，后来许多其他编程语言也声称自己使用了“海龟绘图”。尽管这些语言并不是真正的 Logo 语言，但依然让大众觉得很迷惑，最终这也导致 Logo 语言开始走下坡路。\r\n\r\n![](//n.sinaimg.cn/sinakd20221201s/147/w109h38/20221201/1202-8524055e8cd3e8257f0ef3617aadc2d3.png)\r\n\r\nPascal\r\n\r\n![](//n.sinaimg.cn/sinakd20221201s/744/w975h569/20221201/a353-f3632962b570f1e436c53378ab3a3d91.png)\r\n\r\nPascal 是 Niklaus Wirth 于 20 世纪 70 年代设计的编程语言，旨在教授结构化编程的概念，这门语言对个人计算机编程产生了重要影响。\r\n\r\n80 年代中期，Borland Turbo Pascal（不同于 Pascal）成为了一种流行的开发语言，用于开发各种软件，包括从构建 Apple Lisa 的软件到编写 Donald Knuth 的 TeX 系统。\r\n\r\n随着结构化编程逐渐被面向对象编程所取代，Pascal 的受欢迎程度也随之下降。如今的 Pascal 还有一批忠实粉丝，只不过该语言的辉煌岁月已然结束。\r\n\r\n![](//n.sinaimg.cn/sinakd20221201s/150/w110h40/20221201/2dd9-dd0ba9ad9aa1c89283e9687f25cc5ecf.png)\r\n\r\nModula-2\r\n\r\n![](//n.sinaimg.cn/sinakd20221201s/98/w974h724/20221201/4dcb-2429f21e19407ce3143ba9ed0aa3fdbc.png)\r\n\r\nModula-2 是一种命令式、结构化、模块化的编程语言，由 Niklaus Wirth 于 20 世纪 70 年代开发。这门语言的设计目的是成为 Pascal 语言的继任者。\r\n\r\nModula-2 最重要且最显著的特征是模块的概念（一个代码块，可被程序的其余部分使用）。Modula-2 以及模块化编程成为了后来编程范例（例如面向对象编程）的基础。\r\n\r\n虽然从商业的角度来看，Modula-2 的某些特性与 Pascal 相似，甚至比 Pascal 更好，但它最终未能像 Pascal 一样流行，如今几乎已被遗忘。\r\n\r\n![](//n.sinaimg.cn/sinakd20221201s/150/w110h40/20221201/b04a-bfc4e22e7af414565b2400979d640fbb.png)\r\n\r\nPL/I\r\n\r\n![](//n.sinaimg.cn/sinakd20221201s/758/w946h612/20221201/8712-39b70b21421bc442209267f376bb35d8.png)\r\n\r\nPL/I 是 IBM 于 20 世纪 60 年代设计的一种通用的、过程式的、命令式的、结构化的编程语言。\r\n\r\nPL/I 的目标是改进 FORTRAN 的数值能力，以及加强 COBOL 的字符串和业务流程能力。最终，PL/I 成为了一种强大的结构化语言，可用于各行各业，从控制系统到会计系统，再到科学分析。\r\n\r\n作为一种编程语言，PL/I 的流行度从未达到 IBM 的预期，最终也让位于 IBM 的其他语言，比如 CMS-2、SP/k、B、REXX 和 AS/400 控制语言等。\r\n\r\n![](//n.sinaimg.cn/sinakd20221201s/171/w131h40/20221201/de2d-d5e18a1456875d3addc4da537c052d4d.png)\r\n\r\nRPG\r\n\r\n![](//n.sinaimg.cn/sinakd20221201s/727/w959h568/20221201/0b24-6a50334a94e6923855abaeb2fd842917.png)\r\n\r\nRPG（Report Program Generator，报告程序生成器）是为 IBM 计算机（从穿孔卡和 IBM 1401 到 IBM Power i 大型机，再到 AS/400 等 IBM 中端计算机）编写传统应用程序而设计的编程语言。\r\n\r\n尽管 RPG 的市场定位与 FORTRAN 和 COBOL 相同，但 IBM 依然决定放弃这门语言，最终导致它在 IBM 内部衰落。不过，当前 RPG IV 仍被一众 RPG 程序员广泛使用，他们别无选择，尤其是在大量部署 IBM 计算机的地方。\r\n\r\nRPG 曾是众多报纸和杂志出版物的热门话题，如今逐渐被现代开发平台和硬件架构所取代，如高端 LINUX/UNIX 和 JEE。\r\n\r\n![](//n.sinaimg.cn/sinakd20221201s/169/w131h38/20221201/8007-0c7aad565086bb862176ac8f6dec002d.png)\r\n\r\nSmalltalk\r\n\r\n![](//n.sinaimg.cn/sinakd20221201s/515/w970h345/20221201/93c4-f2a639befce84ce1c95c4c9898a0e456.png)\r\n\r\nSmalltalk 就像编程语言中的“俳句”。Smalltalk 是 Xerox PARC 的一群计算机科学巨星于 20 世纪 70 年代末 80 年代初设计的，它影响了许多面向对象的编程语言，特别是 AppleScript、Common Lisp 对象系统、Dart、Dylan、Erlang、Etoys、Falcon、Go 、Groovy、Io、Ioke、Java、Lasso、Lisaac、Logtalk、Newspeak、NewtonScript、Object REXX、Objective-C、PHP 5、Perl 6、Python、Ruby、Scala、Scratch 和 Self。\r\n\r\nSmalltalk 的消息传递模型仅使用了六个保留关键字，Smalltalk 也因此成为了热门话题。\r\n\r\n现如今，Smalltalk 仍广泛用作大学里面向对象编程的教学工具，但在商业领域没有太大的应用，因为这门语言有几个主要问题，包括：\r\n\r\n*   内存消耗过大；\r\n    \r\n*   无法编写非常快的应用程序；\r\n    \r\n*   错过了进军 Web 的时机；\r\n    \r\n*   语法上与 C++、PHP、Perl、Python、Pascal 和 Ruby 等“传统”语言差别太大，因此学习难度较高；\r\n    \r\n*   Smalltalk IDE 与语言的结合太过紧密。\r\n    \r\n\r\n上述部分原因无疑是敲响了 Smalltalk 的丧钟。\r\n\r\n![](//n.sinaimg.cn/sinakd20221201s/170/w131h39/20221201/aa00-d15bc2d14ec3b7860f36795a7a980f10.png)\r\n\r\n总结\r\n\r\n如今，编程语言不限于满足开发人员的需求，不限于抽象语法树，不限于工具，它们进化了！从十六进制（编号系统）到汇编程序，再到 C 语言，以及更高级的 Python、JavaScript、Perl、PHP、Ruby、JAVA，编程语言的自动化程度越来越高，学习难度越来越低，且对程序员越来越友好。\r\n\r\n![](//n.sinaimg.cn/sinakd20221201s/228/w1080h748/20221201/454e-b0e3ae6f8440ee6348758ae7bafdbe52.png)\r\n\r\n20 世纪大量使用 Fortran 以及 MATLAB 等语言，是为了能够在更短时间内完成计算，同时提高准确性，以巩固数学研究的目的。Fortran 首次提出了 do while 循环结构（Algol 称为 for 循环），并促使递归算法得到理论化。MATLAB 最初并不是一种传统的编程语言，然而该语言在发展的过程中，为了满足工程和科学上的需求而不断改进。\r\n\r\nC 语言之所以成为经典，是因为它的诞生结合了天时地利人和。如今大多数编译器和内核都是用 C 语言编写的。而 C++ 则致力于缩短运行时间、节省内存，并优化软件和游戏开发行业中的这些资源。C++ 和 JAVA 是编程竞赛中的两种首选语言。Ruby 因其简单性而广泛流行，多用于 Web 开发，至今仍是最好的开源项目之一，其流行的 Web 应用程序框架 Ruby on Rails 拥有广泛的社区支持。\r\n\r\n![](//n.sinaimg.cn/sinakd20221201s/171/w131h40/20221201/473d-377718c2fcdb4cdc3372c0a0637bbe62.png)\r\n\r\n感谢这 11 种古老的语言\r\n\r\n作为现代程序员，如今我们的工作效率更高，随着时间的推移，学习编程语言的难度也越来越低。从 Ada 到 Smalltalk，每一种编程语言都曾有过自己的黄金时期，而且它们也为下一代语言的诞生做出了贡献。\r\n\r\n> “最好的程序指的是，计算机能够快速执行，而且人类也能够清楚理解的程序。\r\n> \r\n> 程序员就像散文作家，他们利用传统的美学和文学形式以及数学概念来传达算法，并让读者相信结果是正确的。”\r\n> \r\n> —— Donald E. Knuth，《计算机科学论文选集》\r\n\r\n这些语言可能已经死了，但它们的落幕标志着新时代的来临：任何人，不需要拥有数学或计算机科学学位，也不需要坐在麻省理工学院实验室里，摆弄 IBM 大型机，就可以编写计算机程序。因此才有了如今众多自学成才的程序员。\r\n\r\n那么，问题来了，随着编程语言如此快速的发展，未来我们将何去何从？', 4, 1, 1, '2023-03-02 12:38:52', '2022-12-01 16:51:02', '你听过多少种编程语言？目前主流的 Java 、Python、JavaScript、C、C++ 等自然是耳熟能详，但更早之前的编程语言你了解吗？你知道它们还在吗？', 'http://cdn.forevergtt.love/mysystem/medicine/85f44be8-c522-4082-ba16-575e4ef3bf0d');
INSERT INTO `article` VALUES (1337, 9, '人类能实现大脑编程吗？', '　　  11月26日上午，第四届世界科技与发展论坛在成都天府国际会议中心拉开帷幕。在当日下午举行的“NexTus可持续发展青年创新日”活动上，来自人工智能、大数据、区块链、生物医药等领域的20位青年创新者代表，围绕联合国可持续发展目标中的良好健康与福祉（SDG 3）、经济适用的清洁能源（SDG 7）、产业、创新和基础设施（SDG 9）、可持续城市和社区（SDG 11）、促进目标实现的伙伴关系（SDG 17），设置具体主题进行了创新成果的分享和科学探讨。\r\n\r\n　　  关键词：mRNA技术\r\n\r\n　　  一种有望战胜各种疾病的通用型创新疗法\r\n\r\n　　  创新日活动现场，mRNA技术成为热点话题之一。据了解，在全球知名科技评论杂志《麻省理工科技评论》发布的2021年“全球十大突破性技术”名单中，mRNA疫苗荣登榜首。而全球各制药巨头也竞相在mRNA疫苗领域布局了相关的产品管线。\r\n\r\n　　  成都威斯津生物医药科技有限公司（以下简称“威斯津生物”）研发团队在mRNA药物领域潜心攻关近10年，并取得关键核心底层技术的突破，打破了国外专利壁垒，在mRNA序列和递送系统等方面已经获得具有自主知识产权的专利技术。威斯津生物的联合创始人和常务副总经理宋相容向记者介绍，mRNA被称作信使RNA，是基因和遗传信息的重要传递者。mRNA药物主要是通过其编码的蛋白质来预防疾病或治疗。由于mRNA是一种长的呈丝线的核酸大分子，很容易发生断裂，所以mRNA在传输中需要合适的递送系统（可称为：纳米胶囊）去保护它不受破坏，从而保证mRNA药物能够有效稳定地发挥功效。\r\n\r\n　　  宋相容告诉记者：“目前我们的递送技术达到了全球先进水平。”威斯津生物将以新冠mRNA疫苗作为mRNA药物平台技术的突破关键，目前这款疫苗正在中国、墨西哥和菲律宾同步申请临床试验。\r\n\r\n　　  为什么说mRNA技术是一种有望战胜各种疾病的通用型创新疗法？宋相容解释，因为mRNA可以编码任何蛋白质，身体的很多疾病都和蛋白质息息相关，所以该项技术可以通过编码不同的蛋白质去治疗不同的疾病，比如肿瘤、罕见病、肥胖、衰老、艾滋病等。其中，mRNA疫苗技术在肿瘤的治疗上已经显现出了比传统疗法更明显的效果。不仅如此，mRNA技术的前瞻性还吸引了大量的资本力量。近期，威斯津生物已经获得数千万的投资，成都本土的地方基金还将继续增资，助力新冠mRNA疫苗和抗癌mRNA药物的研发。\r\n\r\n　　  关键词：脑机接口技术\r\n\r\n　　  未来或可实现大脑编程输入信号进行调节\r\n\r\n　　  如今现代科学可以读取大脑中的信息，比如借助脑电图、脑磁图、磁共振成像等技术，逐步解码大脑是如何产生与控制思维、情绪、行为和感觉的。在此基础上，借助脑机接口技术，甚至还可以把大脑里的信号解码、翻译成文字、图像、声音或机械手的动作。那么可以给大脑编程，把信息输送回大脑吗？\r\n\r\n　　  “是的，这并不是科幻，在一定程度上我们确实可以做到。”复旦大学类脑智能科学与技术研究院博士后耿馨佚在活动中做了题为《脑机交互神经调控：从读脑到写脑的大脑编程》的演讲。她表示，现在可以利用声光电磁这样的物理刺激，以及人类的感知觉等信息，把需要调整的东西重新输送回大脑里面，“若是能搭建起‘读脑’和‘写脑’交互的关系，还能帮助我们更好地去控制大脑的功能，调节大脑的异常。”\r\n\r\n　　  耿馨佚向记者举例称，比如一个脊髓损伤的病人，他可能下肢截瘫了，结构上脊髓可以长回去，但是它的功能无法恢复。怎么办？现在有技术可以采集到前一段有神经反应的脊髓信号，对这个信号进行翻译，转化成下一段已经神经受损的脊髓能够理解的信号，给脊髓损伤的位置搭一个桥，把神经电信号传递过去，然后就可能帮助他重新行走。大脑也是同样的，如果能把某种信号重新打到这个大脑里面去，进行一定的刺激，也可以让大脑重新恢复某些功能。\r\n\r\n　　  记者了解到，目前这样的治疗方法效果也是因病而异的，比如治疗帕金森病可能有70%或者80%的改善效率，治疗肌张力障碍的改善效率可能在40%～50%，治疗疼痛的改善效率则更低，在30%～40%。“这个并不是开关，马上就能治好，而且个体间巨大的差异性也会影响治疗效果。”耿馨佚说。\r\n\r\n　　  未来将如何突破脑机交互神经调控技术？耿馨佚认为，目前这项技术最前沿的就是它的交互性，既能读脑又能写脑，但是其突破有三大难点。首先是设备，必须有足够先进的硬件软件把信号收集起来和输入进去；其次就是算法，目前耿馨佚所在的研究机构正在利用数字孪生大脑去生成一些仿真的数据、算法；此外，还有临床实验面临的案例选择、实验成本等多重挑战.', 10020, 1, 2, '2023-03-02 12:38:52', '2022-12-03 16:54:59', '你听说过大脑编程吗', 'http://cdn.forevergtt.love/mysystem/medicine/6ebab6fa-aac9-4af9-a910-9e3e6ad40f38');
INSERT INTO `article` VALUES (1338, 10, 'MySQL 中删除的数据流落何方?', '不知道大家有没有想过下面这件事？\r\n\r\n我们平时调用 DELETE 在 MySQL 中删除的数据都去哪儿了？\r\n\r\n这还用问吗？当然是被删除了啊\r\n\r\n![](//n.sinaimg.cn/sinakd20210819ac/30/w470h360/20210819/8a08-03f38c6a28b273fbc80abcc8349d10c8.jpg)\r\n\r\n那么这里又有个新的问题了，如果在 InnoDB 下，多事务并发的情况下，如果事务A删除了 id=1的数据，同时事务B又去读取 id=1的数据，如果这条数据真的被删除了，那 MVCC 拿啥数据返回给用户呢？\r\n\r\n所以，实际情况中，调用了 DELETE 语句删除的数据并不会真正的被物理删除，这条数据其实还在那，只不过被打上了一个标记，标记已删除。\r\n\r\n![](//n.sinaimg.cn/sinakd20210819ac/24/w640h184/20210819/728e-b246de5ca2d88fe2d6ed15f70839a5ef.jpg)\r\n\r\n在 MySQL 中， UPDATE 和 DELETE 操作本质上是一样的，都属于更新操作，删除操作只不过是把某行数据中的一个特定的比特位标记为已删除，仅此而已。\r\n\r\n那么问题又来了，那这些删除的数据如果一直这么堆下去，那不早晚把硬盘撑爆？\r\n\r\n![](//n.sinaimg.cn/sinakd20210819ac/494/w280h214/20210819/33a3-17dc1dd513b245d5aa1afb395954b31c.jpg)\r\n\r\n如果都玩儿成这样了，那 MySQL 还能像现在这样被大规模的用于生产环境中吗？那 MySQL 到底是怎么玩的？\r\n\r\n这就需要提到 Purge 操作了。\r\n\r\nPurge操作是啥？\r\n\r\nPurge 操作才是真正将数据（已被标记为已删除）物理删除的操作。\r\n\r\n![](//n.sinaimg.cn/sinakd20210819ac/762/w640h122/20210819/a5f8-4bd0589cfa3df62efca53a4f14218060.jpg)\r\n\r\nPurge 操作针对的数据对象，不仅仅是某一行，还有其对应的索引数据和 Undo Log。\r\n\r\n好的那么问题又来了。\r\n\r\n![](//n.sinaimg.cn/sinakd20210819ac/554/w300h254/20210819/e365-a7f3a9b5440cc3e4a0cbbe347e60712e.jpg)\r\n\r\n问题是，Purge 操作什么时候会执行呢？实际上，你可以将执行 Purge 操作的线程（简称 Purge 线程）理解成一个后台周期性执行的线程。\r\n\r\nPurge 线程可以有一个，也可以有多个，具体的线程数量可以由 MySQL 的配置项 innodb\\_purge\\_threads 来进行配置。当然，我相信你肯定不记得在使用 MySQL 的时候配置过这个，因为 innodb\\_purge\\_threads 有个默认值，值为4。\r\n\r\n![](//n.sinaimg.cn/sinakd20210819ac/75/w640h235/20210819/4244-91b64bc1b4513829b7c79e67cf7ceec6.jpg)\r\n\r\nInnoDB 会根据 MySQL 中表的数量和 Purge 线程的数量进行分配。\r\n\r\n![](//n.sinaimg.cn/sinakd20210819ac/289/w574h515/20210819/2dcf-dd69b4fa7ed2f7c2fb59e19c422ecc20.jpg)\r\n\r\n但正是因为有这种特性，Purge 线程的数量才需要根据业务的实际情况来做调整。举个例子，假设 DML 操作都集中在某张表，比如表1上…\r\n\r\n你先等等，我打断一下…\r\n\r\n![](//n.sinaimg.cn/sinakd20210819ac/177/w500h477/20210819/5d8c-9ebd58d8becb0d7cab8ef0ba66708cdb.jpg)\r\n\r\n什么叫 DML 操作？总喜欢搞些复杂的名词…DML（Data Manipulation Language）数据操作语句，实际上就是CRUD增删改查…\r\n\r\n与之类似的概念还有DDL（Data Definition Language）数据定义语句，也就是CREATE、DROP和ALTER等等.\r\n\r\n以及DCL（Data Control Language）数据控制语句，也就是GRANT、REVOKE等等…\r\n\r\n继续说回来，虽然 Purge 线程的数量是可配置的，但是也不是你想配多少就配多少的。不然你给它干个10000个线程，那不就直接原地 OOM 了吗？\r\n\r\ninnodb\\_purge\\_threads 的最大值为32，而且并不是我们配了32 InnoDB 就真的会启动32个Purge 线程，为啥呢？举个很简单的例子，假设此时只有一张表，然后我们配置了32个Purge 线程。\r\n\r\n![](//n.sinaimg.cn/sinakd20210819ac/216/w521h495/20210819/740f-36e46cf2442cbf2aae53c909750348b7.jpg)\r\n\r\n你看着上面这个图问问自己，这「河里」吗？这样不仅浪费了系统的资源，同时还使得不同的 Purge 线程之间发生了数据竞争。不仅如此，Purge 线程还可能跟用户线程产生竞争。\r\n\r\n但是当系统中真的有32张表的时候，情况又不一样了，一个 Purge 线程对应一张表，线程与线程之间就不会存在数据竞争，并且没有浪费系统资源，还能够提升执行 Purge 操作的性能。\r\n\r\n这就是为啥 InnoDB 会根据实际情况来调整 MySQL 中 Purge 线程的数量，所以我们在配置的时候也要按照实际情况来设置。\r\n\r\n举个例子，如果你的数据库中，增删改的操作只集中在某几张表上，则可以考虑将 innodb\\_purge\\_threads设置的稍微低一点。相反，如果增删改的操作几乎每张表都有，那么 innodb\\_purge\\_threads 就可以设置的大一些。\r\n\r\n了解完 Purge 线程本身之后，我们就可以来了解 Purge 线程所针对的对象了。Purge 线程主要清理的对象是 Undo Logs，其次是行记录。\r\n\r\n![](//n.sinaimg.cn/sinakd20210819ac/6/w561h245/20210819/3ca4-3f841438a2ccbe5ac91b09c4b1714e8a.jpg)\r\n\r\n因为 Undo Log 可以分为：\r\n\r\n*   Insert Undo Log\r\n    \r\n*   Update Undo Log\r\n    \r\n\r\n所以更准确的说法是，Purge 线程清理的对象是 Update Undo Log和行记录，因为 Insert Undo Log 会在事务提交之后就会被删除。\r\n\r\n我们都知道 InnoDB 的 MVCC 的数据来源是一个一个 Undo Log 形成的单链表，而 Purge 线程就是用于定期清理 Undo Log 的，并且在清理完删除数据所生成的 Undo Log 的时候，就会把对应的行记录给移除了。\r\n\r\n那么问题又来了，Purge 线程每次会读取多少条件 Undo Log 记录呢？\r\n\r\n很明显，它不是看当时的心情来决定取多少条的。它是通过配置项 innodb\\_purge\\_batch\\_size 来控制的，默认是300。然后InnoDB会将这300条 Undo Log 分给innodb\\_purge\\_threads个 Purge 线程。在清理的过程中，Purge 线程还会释放 Undo Log 表空间内的文件。', 0, 0, 0, '2023-03-02 12:38:52', '2022-11-18 19:11:04', '我们平时调用 DELETE 在 MySQL 中删除的数据都去哪儿了？', 'http://cdn.forevergtt.love/mysystem/medicine/da043411-6dc9-4c34-8608-43f2d5114c96');
INSERT INTO `article` VALUES (1339, 11, 'HTML、CSS、JavaScript、PHP、 MySQL 的学习顺序是什么？', '在我看来，学习这些知识并没有固定的顺序，因为这几个知识的作用是不同的。\r\n\r\n下面先给大家用通俗易懂的语言来给大家介绍一下这几个技术栈的作用。\r\n\r\n1：HTML是用业搭建网页的页面结构的，但是可以理解为只能把需要在页面上显示的内容展示出来，但是显示的乱七八糟，并不能解决样式和排版问题。\r\n\r\n2：这时候就需要用CSS来定义页面中各部分的排版和美化，并且随着智能手机和多种媒体终端的出现，CSS还要用来解决（响应式）的问题，用于处理网站页面在不同的显示终端中能够正常显示完整。\r\n\r\n3：Javascript的作用，是用来处理你的网站页面和用户之间的交互，并且可以为你的网站页面增加很多常见或炫酷的特效。例如轮播图、切换卡、弹出框、或者动画效果等等。\r\n\r\n4：HTML和CSS和JavaScript这三种技术栈一直以来都被定义为前端技术，即用于展示页面。但是PHP和Mysql的使用就是用来开发网站管理后台了。比如你只是建一个普通的展示内容或博客的网站，使用现有的很多免费的CMS（内容管理系统）就够用了，但是你要是需要开发一些特殊的业务需求，就得用到PHP了。\r\n\r\n5：Mysql是个人开发者和小型网站最常用的数据库管理软件，主要用途是存放你网站的数据。如果你只需要做一些普通的内容展示网站，就不需要刻意的去学Mysql，因为对Mysql数据库的操作，基本上都是由内容管理系统（例如Wordpress)本身去完成的。\r\n\r\n所以基本可以总结为：如果你只是想自己做一个普通型的企业网站或普通型的内容展示性网站或个人博客，只需要学习一下HTML和CSS和JavaScript就可以了。但是你要根据自己的业务需求来定制自己需要的功能，比如商城、外卖、回收、OA办公系统或进销存系统等等，就需要再去学习PHP和Mysql了。\r\n\r\n**接下来群信科技再给大家来聊聊Web技术的发展史**\r\n\r\n在智能手机和其它移动终端广泛应用之前，在一些较小一点的网络公司里面，基本上前后端技术划分的不是太明显。\r\n\r\n也就是说大多数程序员HTML、CSS、JavaScript、PHP、Mysql这几个技术栈都会，然后日常的工作也是用开源的CMS（内容管理系统）或公司自己开发的CMS来做后台，然后根据设计师做好的设计稿来写前台页面。\r\n\r\n但是在智能手机和其它移动终端广泛应用之后，随着客户对网站页面响应式的要求越来越高，慢慢的就出现了前后端岗位分离的情况。\r\n\r\n也就是说前端程序员去学HTML、CSS和JavaScript，后端程序员去学PHP和Mysql，这样两个岗位的程序员就只需要在自己的领域里深入研究就行了。\r\n\r\n近几年，随着小程序和APP的兴起以及Web端页面的没落，这种前后端分离的情况越来越明显，后端程序员使用PHP和Mysql去开发定义接口，就可以供各种前端获取数据。\r\n\r\n**接下来群信科技再给大家来聊聊除了这几种技术栈还需要学习什么**\r\n\r\n在这个掉头发的行业里，不断的学习是每个人都无法逃避的现实，即便这样，大部分人也逃脱不掉35岁的魔咒。首先：无论前端技术怎么变化，HTML和CSS和JavaScript这三种技术是必须要学习的，通常业内人士叫这三个技术栈为前端的三架马车。\r\n\r\n我们先从前端来说起，分为以下两种情况：\r\n\r\n1）如果你只是侧重Web端，则老蔡的建议如下：HTML是基础必须要学精通。CSS是基础必须要学精通。JavaScript的话又分为两种情况，如果不写（计算功能很强）的页面例如商城的情况下，只写内容展示页面，就稍微了解一下即可。Jquery框架，这是一个老牌的JS框架，可以为Web页面增加很多常见的显示特效。Bootstrap，这是一个用的最广泛的响应式Web页面框架。Vue，现在很多前端应用的技术，有些时候后端只给你提供数据接口的时候，新技术的出现就会倒逼着你不得不学习VUE。2）如果你不但侧重Web端并且还侧重小程序和APP端的话，则需要你除了掌握上边的那些技术，最好再学习以下内容。reactjsangularjsUniappElement PlusES6语法3)如果你想前后端都会的话,那还需要学习：PHPMysqlThinkPHP PHP框架之一laravel PHP框架之一Layui 比较流行的后台管理框架\r\n\r\n总结：这个行业就是只要学不死，就往死里学，没有最卷，只有更卷，所以如果只是自己搞一个网站玩一玩的话，就只需要学习HTML、CSS和Jquery框架就够用了。但是如果作为一个程序员的话，那就没得选择了，工作过程中遇到需要的技术栈、或者将来再出现新的技术栈，都需要不断的去学习。', 0, 0, 0, '2023-03-02 12:38:52', '2022-12-03 19:14:50', 'HTML、CSS、JavaScript、PHP、 MySQL 的学习顺序是什么？', 'http://cdn.forevergtt.love/mysystem/medicine/a742efd5-413b-42f3-8774-ff2e6735253a');
INSERT INTO `article` VALUES (1340, 12, 'mysql数据库乱码如何解决？', '\r\n一、我们需要将默认的字符集更改为utf-8来解决数据库导入数据的乱码问题：\r\n\r\n我们需要先查看数据库默认的字符集是什么：\r\n\r\nshow variables like \'character\\_set\\_%\'\r\n\r\n查看所有的默认字符集\r\n\r\nmysql> show variables like \'character\\_set\\_%\';+--------------------------+---------------------------------------------------------+| Variable\\_name | Value |+--------------------------+---------------------------------------------------------+| character\\_set\\_client | utf8 || character\\_set\\_connection | utf8 || character\\_set\\_database | latin1 || character\\_set\\_filesystem | binary || character\\_set\\_results | utf8 || character\\_set\\_server | latin1 || character\\_set\\_system | utf8 || character\\_sets\\_dir | C:\\\\Program Files\\\\MySQL\\\\MySQL Server 5.7\\\\share\\\\charsets\\\\ |+--------------------------+---------------------------------------------------------+8 rows in set, 1 warning (0.01 sec)\r\n\r\n其中character\\_set\\_database和character\\_set\\_server的字符集mysql默认为latin1.\r\n\r\n我们需要将其更改为utf-8的字符需要用到下面两行代码:\r\n\r\nset character\\_set\\_database=utf8；set character\\_set\\_server=utf8；\r\n\r\n然后我们做字符集查询\r\n\r\nshow variables like \'character\\_set\\_%\'\r\n\r\n得到：\r\n\r\nmysql> show variables like \'character\\_set\\_%\';+--------------------------+---------------------------------------------------------+| Variable\\_name | Value |+--------------------------+---------------------------------------------------------+| character\\_set\\_client | utf8 || character\\_set\\_connection | utf8 || character\\_set\\_database | utf8 || character\\_set\\_filesystem | binary || character\\_set\\_results | utf8 || character\\_set\\_server | utf8 || character\\_set\\_system | utf8 || character\\_sets\\_dir | C:\\\\Program Files\\\\MySQL\\\\MySQL Server 5.7\\\\share\\\\charsets\\\\ |+--------------------------+---------------------------------------------------------+8 rows in set, 1 warning (0.00 sec)\r\n\r\n之后创建的所有的数据库的字符集都默认为utf-8的字符集 .这个时候我们再去做字符集的插入时就可以看到汉字被成功插入不会再出现乱码问题.\r\n\r\n二、更改数据库和表的字符集的方法\r\n\r\nalter database 数据库名 charset utf8；alter table 数据表名 convert to character set utf8；\r\n\r\n三、导入数据库的方法\r\n\r\nWindows系统\r\n\r\nsource d：/table.sql(\\*.sql文件所处的盘位置)\r\n\r\nlinux系统\r\n\r\nsource /home/hhh/桌面/tables.sql;\r\n\r\n总结：\r\n\r\n上面给大家介绍了三种解决mysql乱码的方法，因为我们将来开发的系统，基本上都会涉及到非英文的数据，因此建议大家使用第一种方式，把数据库服务器的默认编码方式改成utf8,这样以后不管什么时候使用，都不会发生乱码问题！', 0, 0, 0, '2023-03-02 12:38:52', '2022-12-01 19:20:51', '作为一个数据库的初学者，遇到数据库乱码问题，是一个比较头疼的问题，下面根据我的使用经验，给大家分享几种解决mysql数据库乱码问题的方式，希望对大家有帮助。', NULL);
INSERT INTO `article` VALUES (1341, 13, '对话MySQL之父：代码一次性完成才是优秀程序员', '\r\n如今，我们正处于数据爆炸的时代，软件崛起的背后是数据的支持。而随着开源技术的发展，越来越多的数据库选择创建开源社区，让更多开发者参与到数据库的建设中来。\r\n\r\n在开源数据库领域中，Michael \"Monty\" Widenius（通常称为Monty）绝对是不得不提的代表人物。有着四十多年编程经验的Monty是MySQL和MariaDB的作者，也是开源软件运动的著名倡导者，即便是现在他也在坚持写代码。作为影响了几代技术人的数据库，MySQL所取得的成就无需多言。而最初作为MySQL分支立项的MariaDB也在迅速成长，同样在数据库中赢得了一席之地。\r\n\r\n![](//n.sinaimg.cn/sinakd20220415ac/268/w600h468/20220415/b8cc-61cf387e61b2310c4285b11fc2dbb70c.jpg)\r\n\r\nMonty近照（图源自Wiki）\r\n\r\n作为在技术届游历半生的资深“程序员”，Monty对编程的理解也有许多独到之处，他认为只有学习编程20年以上，才能像读懂音乐一样，看出编程之美。除此之外，他还表示：“**写代码时要尽量将代码一次性写成，而不是写完后再没完没了的修改**。”只有做到这一点，才能称得上是一名优秀的程序员。而这也是他长久以来所遵循的“编程法则”。\r\n\r\n近期，《新程序员》有机会邀请Monty分享他的程序人生，谈谈他对于技术的感悟，以及对于数据库发展的看法与心得。\r\n\r\n![](//n.sinaimg.cn/sinakd20220415ac/54/w822h832/20220415/a4e0-7db32811a0f96b81ec1e1f58d4cac74a.jpg)\r\n\r\n订阅《新程序员001-004》\r\n\r\n**“我在编程方面有一定的天赋”**\r\n\r\n1962年，Monty出生在芬兰首都赫尔辛基，小时候的他便对计算机有着浓厚的兴趣。1978年，年仅16岁的Monty用他一整个暑假打工攒的钱买了人生中的第一台电脑，并且用BASIC语言写下了第一行代码REM，从此以后他便与编程结下了不解之缘。三年后，Monty被北欧著名高校赫尔辛基理工大学录取，但由于自己的学习理念与学校不同，他感到在学校学不到什么东西，因此没过多久就辍学了。1981年。离开了校园的Monty开始在荷兰的一家叫做Tapio Laakso Oy的公司当程序员。在近十年之后，34岁的Monty开发出了历史上最流行的开源数据库之一——MySQL。\r\n\r\n戳查看采访视频\r\n\r\nMonty能开发出MySQL并非偶然，他在编程上投入了大量的时间。根据早期的资料显示，就连别人去参加聚会时，他也在家里写代码。在他看来，好的代码不需要一次又一次地重写，而是在开始写之前，就抱有一次写成的心态。正因为如此，直到多年后的今天，Monty仍然直言“自己在编程方面具有一定的天赋”。\r\n\r\n除了Monty，MySQL的诞生还离不开David Axmark和Allan Larsson。早在1980年，17岁的Monty打算将自己的计算机内存从8KB提高到16KB。机缘巧合之下，他去往瑞典Allan Larsson的电脑店寻求帮助，在那里认识了同样也是写代码的David Axmark，之后三人就成为了亲密的合作伙伴，经常一起写代码，解决编程过程中遇到的问题。1995年，三人创立了MySQL AB，MySQL AB就是MySQL的雏形。这其中Monty负责了大部分的开发工作。最终，在1996年10月，MySQL首个版本发布，从此掀开了数据库历史的重要一章。\r\n\r\n到了1999年，MySQL的迅速发展已经引起了许多人的注意， oracle表示要以5000万美元的价格收购MySQL。然而Monty三人并不想止步于此，也不想失去对MySQL的控制，因此拒绝了这次收购。\r\n\r\n随着时间的推移，MySQL迅速发展，但同时市场上也出现了包括PostgreSQL在内的竞争对手数据库。为了在竞争中脱颖而出，MySQL开始接受融资，以获得更大的发展机会。到了2003年，MySQL实现了高达400万的安装次数，较两年前翻了一番，成为了当时全世界最受欢迎的开源数据库。\r\n\r\n2008年1月16日，Sun Microsystems以高达10亿美元的价格收购MySQL（然而次年Sun又被Oracle收购）。当时Monty担心MySQL可能会受到Oracle的控制而变得商业化，并且如果Oracle一家独大的话，可能会引发数据库领域的不良竞争。于是他发起了一场拯救MySQL的请愿活动，并在MySQL闭源前将其分化，以其小女儿Maria的名字命名创建了MariaDB。\r\n\r\n![](//n.sinaimg.cn/sinakd20220415ac/437/w822h415/20220415/93ad-dc1c3f7b19d44d89e8e6a6ed810b46c4.jpg)\r\n\r\n设计MariaDB的初衷（图源自MariaDB官网）\r\n\r\nMariaDB开源数据库可以看做是MySQL的一个分支，主要由开源社区维护，目的是要完全兼容MySQL，甚至包括API和命令行。MariDB推出后，不少MySQL的员工都转而投向MariaDB，甚至是原先使用MySQL的各大公司也将数据库迁移到MariaDB上，其中就包括谷歌和维基百科。Monty表示：“与MySQL相比，MariaDB更加成熟，拥有更大的研发优势，并且在安全性修复方面也更加出色。”直到现在，Monty依旧亲自参与MariaDB的开发维护，可以说他的工作重心都在MariaDB上。\r\n\r\n![](//n.sinaimg.cn/sinakd20220415ac/433/w822h411/20220415/6f16-b8394f6951641ffee80146ec5b0fbdb8.jpg)\r\n\r\nMonty的小女儿Maria（图源自MariaDB官网）\r\n\r\n**MariaDB，坚持开源的背后**\r\n\r\n**邹欣：你在创建MariaDB时，曾提到要把它打造成第二个MySQL，并且确保它是开源的。那么对于数据库而言，为什么开源这么重要呢？**\r\n\r\n**Monty：**对于任何大型项目来说，开源都是非常重要的。既然要和巨头竞争，你就要有和他们一样的工具。在我看来，开源很适合用于软件开发，尤其是当公司规模还不大的时候。这个时候你很难兼顾公司和用户的需求，因此需要听取别人的想法。而开源就意味着可以获得社区的帮助，能够了解其他人的观点。有了开源，你可以开发出更好的产品，同时产品也能够获得更大的影响力。\r\n\r\n**邹欣：不过开源的一大弊端就是声音太多，需求不一，这种情况下该如何保证数据库能满足大多数人的需求呢？**\r\n\r\n**Monty：**要解决这个问题，就需要确保数据库足够灵活，这样才能满足大多数人的需求。在这一点上，MySQL和MariaDB的做法是建立各种性能不一的存储引擎，人们可以针对具体需求开发自己的存储引擎。\r\n\r\n事实上，对于那些有需求的人来说，MariaDB依旧是一个优秀的工具。而对于要求数据库体量较小且运行较快的人来说，MariaDB同样是一个不错的选择。在开发MariaDB时，我们考虑到了各种可能性，使它能够保持良好的性能。\r\n\r\n**邹欣：AI技术的发展让人们对数据库的期待发生了转变，今天数据库是否能够与AI技术结合，从而拥有数据决策能力？**\r\n\r\n**Monty：**对于数据库来说，最重要的是要处理AI需要的不同结构。因此我们添加了对JSON的支持，用于在MariaDB中支持动态列。这样人们就可以储存并检索数据，同时保留自己想要的格式。通常AI并不是要创造内容，更多的是实现文件自动化，这就是我们对于MariaDB所抱的期望。因此这两者完全是不同的工具集。\r\n\r\n除此之外，我们还需要一个良好的环境，其中每一个部分都是可替代的，要确保自己不被束缚。一旦有了束缚的存在，那么你的应用程序就需要与静态系统相结合，这会大大降低灵活性。我认为对于数据库来说，要注意的一点就是，要确保数据库容易上手，而这恰恰意味着更多的AI技术能够整合到数据库中。\r\n\r\n**仍然每天坚持写代码**\r\n\r\n**邹欣：在中国IT行业有这样一种现象，认为程序员过了35岁就要转型，进入管理层或是其他领域。对此你怎么看？**\r\n\r\n**Monty：**这在很多地方都很常见。**这个现象的主要原因在于程序员在管理岗位上的工资要比单纯做编程高**。因为**很少有公司会重视优秀的程序员，这就导致了收入的差异**。我认为，如今程序员没有晋升的空间。与其让他们被迫转型，不如建立一个能提升他们收入的新环境。要想做到这一点，公司就得让他们承担更多的责任。要程序员担任管理岗位也行，但前提是仍然要保证他们每天写代码的时间。毕竟好的经理人到处都是，好的程序员却千里挑一。\r\n\r\n**邹欣：据我所知，你仍然每天在坚持写代码，但同时也要负责MariaDB的运营和管理。那么，你如何平衡这两个身份呢？**\r\n\r\nMonty：我认为在写代码这方面，我还是有一点天分的，所以我想坚持下去。我会雇用经理人为我工作，这样我就可以做我最擅长的事情。我会参与代码审查、社区运营以及MariaDB的相关决策。但同时我也会花很多时间维系客户，与不同国家的开发者交流，其中有许多中国的开发者。我认为，除了写代码之外，这是我做的最重要的事。总而言之，我会雇佣经理人来做一部分管理，让我有足够的时间在真正重要的事情上。\r\n\r\n**邹欣：听闻你从20世纪80年代就开始在家办公，如今这一办公方式也开始流行起来，对于远程办公你有什么看法？**\r\n\r\n**Monty：**事实上我认为远程办公是非常灵活的工作方式，自1981年开始我就在家办公（MySQL和MariaDB团队都是在家办公）。我们招人之前可能从来没见过他们，甚至都不知道对面是个人还是团队。但是我们的效率一直都在线。能做到这一点的前提，是要对跟自己联系密切的同事有足够的了解。至少熟悉他们的样貌。\r\n\r\n我认为对于八成的开发者而言，在家办公是一个不错的选择。可能有一小部分开发者，他们的工作负担比较重，在家提不起精神来。这就需要他们出去走走，见见朋友或是接触新事物。我刚开始在家办公的时候，也会担心这样是不是会被孤立。所以后来我会定期在家里举行派对，我也会亲自下厨。我们团队每年也会在一起待上一段时间。\r\n\r\n**一个好的程序员能抵五个一般的程序员**\r\n\r\n**邹欣：对于你来说，在过去几年数据库领域发生了哪些大的变化？**\r\n\r\n**Monty：**在过去的五年或七年间，学习SQL（结构化查询语言）开始成为一种趋势。但是人们发现SQL过于复杂，因此还需要学习其他语言。于是许多公司开始创新，采用NoSQL（非关系型数据库）进行开发。但在过去的几年里，人们逐渐意识到NoSQL并不是万金油。但选择关系型数据库是否能够涵盖NoSQL提供的功能？很明显，有的可以，有的不行。因此我认为，在当下的环境中，对于数据库的要求在于要保证云端以及本地部署。\r\n\r\n我们不能被一个数据库束缚。云端提供的是灵活性，你能在数据库中运行软件，即使是有成百上千个软件，而且本地部署的价格更低，控制权限更高，这一点是云端无法提供的。但我依然认为云端有它的优势，我们要在两者之间找到平衡。\r\n\r\n**邹欣：30年前我从大学毕业时，人们提到数据库一般是指去银行办业务。现在看来，人们有了更多的选择，我们能够借助数据库实现许多功能。但提到数据库开发时，人们往往指的是“后端”。那么，对于一个开发者或是毕业生想要进入数据库领域的人来说，你会给他们怎样的职业建议？**\r\n\r\n**Monty：**在我看来，从开源数据库开始入门更简单。现在开源数据库很多，如果你的确想成为专家级别的人，想要得到一份很好的工作，你可以找一个合适的数据库，并学习如何进行优化。但同时你也需要了解人们的需求，你可以和从事这一行的同学交流，并且学习解决数据库中的实际问题。\r\n\r\n**邹欣：除了多参与开源项目之外，对于中国开发者你还有哪些想说的？**\r\n\r\n**Monty：**我和来自中国的开发者有过非常多的互动，他们非常棒，在编程上表现得非常优秀。不过我在感到惊喜的同时，也感到非常惋惜，因为他们都想转型做管理。我认为这是最大的错误。他们需要让老板给自己派更多的任务，当然也可以做管理，但前提是能让自己写代码。还是那句话：找到一个好经理很容易，但找到一个好的程序员很难。一个非常出色的程序员可以抵五个一般的程序员，关键是你想当一个好的程序员还是一个平庸的经理。**对于所有中国开发者，我只想说，请坚持你的工作，你已经做得非常好了，一定不要停止写代码**。\r\n\r\n\r\n\r\n![](//n.sinaimg.cn/sinakd20220415ac/94/w1080h614/20220415/6006-b5e64063930f0b7ce9c0b5da8d9b69f9.jpg)', 0, 0, 0, '2023-03-02 12:38:52', '2022-06-14 19:25:19', 'MySQL之父Monty有着四十多年的编程经验，从儿时的兴趣到长大后的深耕，他在编程领域不断钻研，最终成为编程大师。', NULL);
INSERT INTO `article` VALUES (1342, 14, 'GitHub 多次宕机的罪魁祸首竟是 MySQL？', '![](//n.sinaimg.cn/sinakd20220328s/145/w107h38/20220328/a13a-194c1830f0e6f714abfb1afa3f89c051.png)\r\n\r\nGitHub 宕机原因分析\r\n\r\n有媒体统计，GitHub 在过去一周中多次中断影响的开发者数量高达 7300 万。根据网友投诉以及 GitHub 官方统计，过去一段时间内的宕机分别发生在 3 月 16 日、17 日、22 日、23 日，每起事件持续时长在 2-5 小时。\r\n\r\nGitHub 高级工程副总裁 Keith Ballinger 发文表示，「我知道这会影响许多客户的生产力，我们也非常重视这一点。过去几周发生的宕机事件根本原因是我们的‘MySQL1’集群中的资源争夺，在负载高峰期，影响了 GitHub 大量服务和功能。」\r\n\r\n根据官方公告，宕机的主要时间线如下：\r\n\r\n3 月 16 日 14:09（持续 5 小时 36 分钟）\r\n\r\n第一次宕机发生时，GitHub  MySQL1 数据库负载增加，导致数据库访问达到最大连接数。这个数据库接收大量的读/写流量，也被多个服务程序应用。\r\n\r\n当中断发生时，GitHub 发现 MySQL1 数据库所有的写入操作都无法进行，影响 Git 操作、webhook、拉取请求、API 请求、issue、GitHub Packages、GitHub Codespaces、GitHub Actions 和 GitHub 页面服务。\r\n\r\n经过调查发现，这种情况似乎与峰值负载以及特定情况下查询性能不佳有关。\r\n\r\n值得注意的是，GitHub 使用 MySQL 作为所有非 git 仓库数据的主要存储，对其高可用性也有很大的要求。\r\n\r\nGitHub 的 MySQL 集群使用经典的主从配置，主集群中的某个节点能够接受写入，其余的从集群节点异步同步来自主服务器的更改，并提供数据的读取服务。基于此，GitHub 可以实现故障转移，即在一个写入失败时，提示主节点崩溃的场景中，会有另一个新的主节点被启用，用以支撑场景实现，避免宕机。\r\n\r\n但是这个选项失败了，宕机还是发生了。\r\n\r\n3 月 17 日 13:46 （持续 2 小时 28 分钟）\r\n\r\n次日，GitHub 还是宕机了，虽然持续时间比前一天要少，但 MySQL1 中呈现的是相同的峰值流量模式和负载。\r\n\r\n对此，GitHub 解释道，“在这个峰值前，我们无法确定和解决查询性能问题，我们决定在问题升级前主动进行故障转移。\r\n\r\n不幸的是，这导致了一种新的负载模式。在新的故障转移主服务器过程中引入了连接问题，并且 GitHub 努力重置这些连接时，应用服务再次无法连接到 MySQL1。”\r\n\r\n基于此，GitHub 能够确定负载模式，随后实施了一个索引来修复主要的性能问题。\r\n\r\n3 月 22 日 15:53 UTC（持续 2 小时 53 分钟）\r\n\r\n虽然 GitHub 在前两次中减少了负载，但是对于最终结果他们也并不是有 100% 的信心。\r\n\r\n因此，在第三次宕机发生之前，GitHub 在数据库代理上启用了内存剖析，以便更仔细地观察峰值负载期间的性能特征。同时，当故障发生，以及客户对 MySQL1 的连接失败时，GitHub 再次执行主故障切换进行了恢复。\r\n\r\n3 月 23 日 14:49 （持续 2 小时 51 分钟）\r\n\r\n发生了第四次宕机时，GitHub 限制了 webhook 的流量，并在其数据库无法处理峰值负载时使用该控件来缓解未来的问题。 \r\n\r\n![](//n.sinaimg.cn/sinakd20220328s/148/w109h39/20220328/85fa-80e67903c789b045da81105c3efe5829.png)\r\n\r\n解决方案\r\n\r\n截至目前，GitHub 并不能完全阻断宕机事件再次发生的可能性。\r\n\r\n不过，为了防止这些类型的事件在未来发生，GitHub 表示，“我们已经开始对这个特定数据库在高峰期的负载模式进行审计，并根据这些审计进行一系列的性能修复。作为其中的一部分，我们正在将流量转移到其他数据库，以减少负载并加快故障切换时间，同时审查我们的变更管理程序，特别是与生产中高负载期间的监控和变更有关的程序。”\r\n\r\n作为一家托管服务平台，GitHub 时不时的宕机事件，无疑对开发者而言是一种不好的体验。对于此，GitHub 表示，对这些中断造成的负面影响深表歉意。也承诺将快速处理中断问题并最大限度地减少宕机的时间。\r\n\r\n在此次宕机事件中，你是否受到了影响？\r\n\r\n参考：https://github.blog/2022-03-23-an-update-on-recent-service-disruptions/', 0, 0, 0, '2023-03-02 12:38:52', '2022-11-11 19:28:02', '宕机时时有，但近期特别多。这边苹果服务器发生大规模宕机，导致 App Store、Apple Music、Books 等十几项服务中断，另一边全球知名代码托管平台 GitHub 也出现了此种情况。', NULL);
INSERT INTO `article` VALUES (1343, 15, 'JSP的九大内置对象是什么？JSP作用是什么？', '（1）问题分析：\r\n\r\n考官主要想考核一下你前端知识的基本功，与之同类的问题可能还会问一下四大作用域以及OSI七层物理模型以及常用标签、作用等基础知识。\r\n\r\n（2）核心答案讲解：\r\n\r\n1）request对象\r\n\r\nrequest 对象是 javax.servlet.httpServletRequest类型的对象。 该对象代表了客户端的请求信息，主要用于接受通过HTTP协议传送到服务器的数据。（包括头信息、系统信息、请求方式以及请求参数等）。request对象的作用域为一次请求。\r\n\r\n2）response对象\r\n\r\nresponse 代表的是对客户端的响应，主要是将JSP容器处理过的对象传回到客户端。response对象也具有作用域，它只在JSP页面内有效。\r\n\r\n3）session对象\r\n\r\nsession 对象是由服务器自动创建的与用户请求相关的对象。服务器为每个用户都生成一个session对象，用于保存该用户的信息，跟踪用户的操作状态。session对象内部使用Map类来保存数据，因此保存数据的格式为 “Key/value”。 session对象的value可以使复杂的对象类型，而不仅仅局限于字符串类型。\r\n\r\n**4）application对象**\r\n\r\napplication 对象可将信息保存在服务器中，直到服务器关闭，否则application对象中保存的信息会在整个应用中都有效。与session对象相比，app ut 对象\r\n\r\nout 对象用于在Web浏览器内输出信息，并且管理应用服务器上的输出缓冲区。在使用 out 对象输出数据时，可以对数据缓冲区进行操作，及时清除缓冲区中的残余数据，为其他的输出让出缓冲空间。待数据输出完毕后，要及时关闭输出流。\r\n\r\n6）pageContext 对象\r\n\r\npageContext 对象的作用是取得任何范围的参数，通过它可以获取 JSP页面的out、request、reponse、session、application 等对象。pageContext对象的创建和初始化都是由容器来完成的，在JSP页面中可以直接使用 pageContext对象。\r\n\r\n**7）config 对象**\r\n\r\nconfig 对象的主要作用是取得服务器的配置信息。通过 pageConext对象的 getServletConfig() 方法可以获取一个config对象。当一个Servlet 初始化时，容器把某些信息通过 config对象传递给这个 Servlet。 开发者可以在web.xml 文件中为应用程序环境中的Servlet程序和JSP页面提供初始化参数。\r\n\r\n8）page 对象\r\n\r\npage 对象代表JSP本身，只有在JSP页面内才是合法的。 page隐含对象本质上包含当前 Servlet接口引用的变量，类似于Java编程中的 this 指针。\r\n\r\n9）exception 对象\r\n\r\nexception 对象的作用是显示异常信息，只有在包含 isErrorPage=\"true\" 的页面中才可以被使用，在一般的JSP页面中使用该对象将无法编译JSP文件。excepation对象和Java的所有对象一样，都具有系统提供的继承结构。exception 对象几乎定义了所有异常情况。在Java程序中，可以使用try/catch关键字来处理异常情况； 如果在JSP页面中出现没有捕获到的异常，就会生成 exception 对象，并把 exception 对象传送到在page指令中设定的错误页面中，然后在错误页面中处理相应的 exception 对象。\r\n\r\n（3）问题扩展\r\n\r\n**Jsp四大作用域及其作用：**\r\n\r\n四个作用域从大到小：appliaction>session>request>page\r\n\r\n● application：全局作用范围，整个应用程序共享.生命周期为：应用程序 启动到停止；\r\n\r\n● session：会话作用域，当用户首次访问时，产生一个新的会话，以后服 务器就可以记住这个会话状态；\r\n\r\n● request：请求作用域，就是客户端的一次请求；\r\n\r\n● page：一个JSP页面。\r\n\r\n以上作用范围使越来越小， request和page的生命周期都是短暂的，他 们之间的区别就是：一个request可以包含多个page页(include， forward)。\r\n\r\n（4）结合项目中使用\r\n\r\n举例：request对象\r\n\r\n1）获取数据\r\n\r\ngetParameter；；接收请求參数的，\r\n\r\n2）对全部数据进行再编码\r\n\r\npublic byte\\[\\] getBytes(“encoding”)\r\n\r\n例如以下实例将byte数组编码转换\r\n\r\n![](//n.sinaimg.cn/sinakd20121/227/w839h188/20210622/c186-ca711404ad7b928b879923f776ce4c6f.jpg)\r\n\r\n输入内容为:\r\n\r\n3）设置统一的请求编码\r\n\r\npublic void setCharacterEncoding(String env) throws UnsunpportedEncodingException\r\n\r\n例如以下设置\r\n\r\n![](//n.sinaimg.cn/sinakd20121/192/w843h149/20210622/0038-008f8a75409321f4b9c9e108cfbc0a13.jpg)\r\n\r\n输入内容为：\r\n\r\n其他举例Demo：https://download.csdn.net/download/a\\_blackmoon/10940085', 2, 1, 0, '2023-03-02 12:38:52', '2022-11-24 19:32:53', '下面带你了解JSP', NULL);
INSERT INTO `article` VALUES (1344, 16, '软件测试工程师的未来发展道路有哪些？', '　　很多想从事测试工作的学员，都想知道测试工作未来的发展方向。由于做测试要懂得很多技能和知识，所以测试发展的方向选择面应该是非常广的。本篇就讲一下测试职业的转型及未来发展方向。\r\n\r\n![](//n.sinaimg.cn/sinakd20220725s/373/w640h533/20220725/79d0-f4096acfec7c2c2099112a0d90b5872e.jpg)\r\n\r\n　　基本上测试的发展可以分为3类：\r\n\r\n　　1\\. 技术类顾名思义就是专注于测试技术的方向，而测试将不仅仅停留在黑盒测试。更多的还要参与白盒测试和灰盒测试，因此必须有一定的计算机知识储备作为基础。由于门槛有比较高收入也会相对较高，也是未来测试发展方向之一。而纯做功能测试的人大多数将被渐渐淘汰，留下的都是些业务小能手。\r\n\r\n　　 技术类测试主要有以下3种测试职位：\r\n\r\n　　 一、自动化测试工程师二、性能测试工程师三、测试开发工程师想往这方面发展的话需要掌握至少一门编程语言，也许有人会问自动化和性能测试工具那么多，会用工具不就可以了吗？的确工具可以做到入门级别的自动化和性能测试，但如果想做到更深层次的话还是需要手动改脚本代码，毕竟工具仅仅提供了基础的方法而已。当然通过工具入门也是非常有必要的，但最终还是需要通过编写脚本来完成相关测试的。2\\. 产品类\r\n\r\n　　虽然说了技术类方向的好处，担也不是所有人都适合往这个方向发展，那么就可以转型向产品类发展。这其实也是一个不错的选择，毕竟没有测试技术的话从长远来看终将被取代，不如早点实现转型，而且产品类职位也是需求量非常大的。　\r\n\r\n　　产品类主要有以下2种职位：\r\n\r\n　　一、数据分析师二、产品经理\r\n\r\n　　想往这方面发展的话只需要利用好测试经验，在设计产品或者数据分析之中考虑到用户可能产生行为（就是测试思维），从而设计出更好的产品。这点相比于没有测试经验的人来说会有很大的优势，而且也更容易和开发打交道。因此产品类的转型是非常适合不想往技术类发展的测试人员的。 3. 管理类\r\n\r\n　　管理类也是一个很好的发展方向，但相对来说比前面2种都要难，其需具备很强的测试技术思想及大局观，而且考虑的事情非常多。所以很多人说做技术累但是身累，但做管理就是心累了。精神上的痛苦远远要超过身体上的痛苦。大多数管理类职位要求也很高，竞争压力巨大，但收入绝对是比前2者要高的多。\r\n\r\n　　管理类主要有以下2种职位：\r\n\r\n　　一、测试主管二、项目经理\r\n\r\n　　想往这方面发展的话需要很强的综合能力，合理制定项目流程，人员的分配管理，质量的全局把控，团队沟通协作等等，这些远比学一门编程语言来的复杂。因此其实是要经过长时间的积累，培养自身的综合能力，当然这种机会有时候需要机遇和伯乐，不可强求。\r\n', 1, 0, 0, '2023-03-02 12:38:52', '2022-11-18 19:39:37', '　很多想从事测试工作的学员，都想知道测试工作未来的发展方向。由于做测试要懂得很多技能和知识，所以测试发展的方向选择面应该是非常广的。本篇就讲一下测试职业的转型及未来发展方向。', NULL);
INSERT INTO `article` VALUES (1345, 17, '清华大学成立元宇宙实验室！网友怒批：欠考虑', '当菜场买菜的大妈和公园跳广场舞的大爷讨论“元宇宙是个啥玩意？”的时候，元宇宙已经成为了“抢手货”。但凡和元宇宙沾边，一经推出便会立即引起追捧。\r\n\r\n话虽如此，元宇宙发展前景究竟如何？科技大佬们各持己见。\r\n\r\n腾讯CEO马化腾\r\n\r\n元宇宙是个值得兴奋的话题，我相信腾讯拥有大量探索和开发元宇宙的技术和能力，例如在游戏、社交媒体和人工智能相关领域，我们都有丰富的经验。\r\n\r\n特斯拉CEO埃隆·马斯克\r\n\r\n被称为Web3的元宇宙基本上还只是一个流行的营销术语，并非现实。考虑到现在几乎不可想象的性质，未来会是什么样子？\r\n\r\n华为轮值董事长胡厚崑\r\n\r\n元宇宙是整个人类社会的一种期待和向往，是一个充满想象力的方向，但对我们现在的技术提出了更高的要求。\r\n\r\n目前，有关元宇宙的定义、技术尚未明了，对于元宇宙的前景发展，普通人不屑一顾，但这并不耽误大厂入局。\r\n\r\n2021年，被称为“元宇宙第一股”的Roblox上市，Facebook转型为元宇宙公司“META”，百度发布国内首个元宇宙产品“希壤”……元宇宙行业一时热闹不已。\r\n\r\n事实上，历史上每一个机会来临时，大部分人总是在观望，而第一个批吃螃蟹的人总是赚的盆满钵满。真理往往掌握在少数人手中！\r\n\r\n最近在IT技术圈和投资圈热闹非凡的的元宇宙和Web3话题，如果你还不知道，就真的要落伍了~\r\n\r\n2022年，元宇宙纵深发展\r\n\r\n自“元宇宙热”开始以来，不仅互联网大厂如腾讯、字节在争相布局，传统行业也纷纷“搭车”，月饼老字号广州酒家推出“元宇宙月饼”、奈雪的茶推出元宇宙品牌大使“奈雪女孩NAYUKI”。就连茅台，也在构建酱香系列酒的“醉美元宇宙”。\r\n\r\n万物皆可元宇宙，越来越多的场景和行业与“元宇宙”扯上关系。2022年，元宇宙似乎走进了全新的发展阶段，从原来的虚拟数字人、VR设备、NFT，开始纵深发展到Web3.0、人形机器人、XR硬件等，范围越来越广。\r\n\r\n比如，Meta公司（原Facebook）在裁掉不赚钱的边缘业务，all in元宇宙后，股价迎来快速反弹，开始在元宇宙多方布局：\r\n\r\n硬件赛道铺路\r\n\r\n元宇宙概念被打响后，Meta率先在VR眼镜和VR头显上铺路，先是接连收购AR初创公司，而后又以两倍薪资挖走AR眼镜HoloLens硬件工程总监。\r\n\r\n打造元宇宙社交平台\r\n\r\n2021年12月，Meta开放VR社交平台Horizon。这是Meta公司的初步尝试，Meta首席技术官表示，Meta计划发布Horizon Worlds的Web版，从而进一步扩大元宇宙社交平台的覆盖面。\r\n\r\n元宇宙基础设施平台\r\n\r\nMeta与英伟达联合推出人工智能研究超级集群（RSC），与西班牙电信公司Telefónica 联手建立元宇宙创新中心，推动AI、算力、网络传输等多个元宇宙基础设施的建设。\r\n\r\nMeta公司动作不断，其他互联网公司以及相关人士，也对相关领域进行了更深层次的融合探索。\r\n\r\n作为元宇宙的热门分支之一，Web3.0随着周星驰的高调进军更加瞩目。在周星驰入局之前，进军Web3.0的知名人士不在少数，如金凯瑞、拳王泰森、梅西、C罗等。\r\n\r\n国内大厂不甘落后，纷纷投身Web3.0。腾讯投资澳大利亚一家基于Web3.0技术的游戏初创公司“Immutable”；阿里收购的《南华早报》成立NFT公司“Artifact Labs”；字节TikTok布局海外Web3.0行业……\r\n\r\n元宇宙的另一分支——人形机器人也紧跟其后。特斯拉、小米等都在人形机器人上投入了大量的财力和精力，有行业人士认为，人形机器人刚刚起步，其市场潜力巨大。\r\n\r\n元宇宙分支的出现和大厂的布局，或许意味着，元宇宙热潮，可能才刚刚开始。\r\n\r\n清华大学开设元宇宙实验室\r\n\r\n是操之过急还是提前布局？\r\n\r\n仔细观察国内发展态势就可以发现，元宇宙这把火越烧越旺。\r\n\r\n第一把火：元宇宙进校园\r\n\r\n“双一流”高校南京信息工程大学将“信息工程系”改名为“元宇宙工程系”，引起热议，网友们认为在元宇宙尚未定性之前，高校有些操之过急。\r\n\r\n但也有网友觉得，正是因为元宇宙还有很多未知，所以更需要高校主动牵头探索、研究。元宇宙刚刚兴起，人才紧缺，大学开设相关专业和研究中心，或许能解决人才问题。\r\n\r\n南京信息工程大学并不是唯一一所“吃螃蟹”的学校，中国人民大学、浙江大学、清华大学等高校也在“吃螃蟹”……\r\n\r\n![](//n.sinaimg.cn/sinakd20221114s/406/w640h566/20221114/753d-ccd2dc52e205a02a805a47037f43cddf.jpg)\r\n\r\n数据来源网络，如侵删\r\n\r\n第二把火：各地政策支持\r\n\r\n各地政策是国内“元宇宙热”的第二把火，虽然国家层面尚未颁布相关政策，但各省市政策不断，为元宇宙的发展加柴添火。从各地政策也能看出，元宇宙进校园并不是高校头脑一时发热。\r\n\r\n北京：《关于征集2023年市重点工程的通知》\r\n\r\n启动2023年重点工程征集工作，其中包括数字赋能、智慧城市、元宇宙、区块链、工业互联网等数字经济项目\r\n\r\n上海：《上海市制造业数字化转型实施方案》\r\n\r\n加快工业元宇宙创新应用，加快5G、AI、AR/VR/MR、区块链、数字孪生等数字技术在制造业领域的深度拓展和融合应用\r\n\r\n河南：《河南省元宇宙产业发展行动计划（2022-2025年）》\r\n\r\n到2025年，全省元宇宙产业发展初具规模，核心产业规模超过300亿元，带动相关产业规模超过1000亿元\r\n\r\n江西：《江西省“十四五”数字经济发展规划》\r\n\r\n紧跟新一代信息技术发展步伐，积极布局VR、“元宇宙”及数字孪生、信息安全和数据服务、物联网、智能网联汽车、无人机等新兴领域……\r\n\r\n……\r\n\r\n在政策的支持和扶持下，“元宇宙热”烧到了人才市场。\r\n\r\n元宇宙人才，成市场“香饽饽”\r\n\r\n元宇宙的火爆，以及国内企业、高校的不断投入，元宇宙人才需求不断飙升，其薪资水平也是水涨船高。\r\n\r\n智联招聘数据显示，2022年1至7月全平台元宇宙相关岗位的平均招聘薪酬为18515元/月，人工智能、大数据等领域的“技术牛”收入水平一骑绝尘。其中，深度学习岗位薪资位居榜首，高达39971元。\r\n\r\n![](//n.sinaimg.cn/sinakd20221114s/176/w640h1136/20221114/4422-a2d3c0f9bb2496a1809b85be8c0b152a.png)\r\n\r\n数据来源智联招聘，如侵删\r\n\r\n而元宇宙相关招聘职位数也是不断增长，2022年前7个月同比增长高达16.6%。\r\n\r\n![](//n.sinaimg.cn/sinakd20221114s/406/w640h566/20221114/0ea8-77a3068f9ef94fa1500d25856ec049d9.jpg)\r\n\r\n\r\n在人才需求TOP职业中，研发岗和设计岗势均力敌，仍是元宇宙的主力军。可以这么说，程序员和设计人员作为元宇宙的基建人员，是距离元宇宙风口最近的一群人。', 2, 0, 1, '2023-03-02 12:38:52', '2022-10-20 19:53:51', '“元宇宙是个啥玩意？”', NULL);
INSERT INTO `article` VALUES (1346, 18, '12年的祖传“屎山”代码，年收入竟超1.4亿元？', '大家好，讲道理，许多做过代码届“接盘侠”的程序员们，某种程度上可能十分理解电影中执着于毁灭世界的反派：“与其在现有基础上修改，还不如直接把这堆祖传代码毁灭再重建！”\n\n祖传代码，从字面意思来看，就是一代代老程序员们留下来的“宝藏”代码——这些长年累月的代码中存有很多隐患，后来的“接盘侠”们要么无从下手，要么一改就崩，几乎可以说是程序员们的“终极噩梦”，因此也被称作“屎山代码”。\n\n这不，最近又有一个“倒霉蛋”火上了HN热榜：“我继承了我见过的最差的代码和技术团队，该怎么办？”\n\n01 拥有12年历史、没有版本控制的“祖传代码”\n\n从这位“接盘侠” @whattodochange 阐述的现状来看，他这次继承的代码历史长达 12 年，是没有版本控制的 PHP 代码，居然每年还能产生超过 2000 万美元（约人民币 1.4 亿元）的收入：\n\n*   这些代码每年能产生超过 2000 万美元的收入。\n*   运行在 PHP 上。\n*   已经在生产环境直接开发了 12 年，没有源代码控制（都是像 index-new\\_2021-test-john\\_v2.php 这种）。\n*   没有使用 composer 或任何依赖管理，都是 require\\_once。\n*   没使用任何框架。\n*   路由管理完全是在 NGInX 中重写的（NGInX 的配置大约是 10000 行）。\n*   这些年只在不断往上堆代码，没删除任何代码（我推测这是因为代码是直接在生产环境开发的，删东西太危险了）。\n*   数据库结构也是一片混乱，没有迁移等等。要添加一个列时，由于数据量大，他们一般会建一个新表，然后用 join。\n*   JS 和 CSS 也是如此。jQuery 的不同版本互相打架，具体取决于你在哪个页面，有时甚至同一个页面也会有。\n*   当然没有 MVC 模式或其他模式什么的，没有模板库。这是 PHP 2003 的样式。\n*   在很多地方，我看到像是 Controller 一样的文件，向它自己的 rest API 发出 curl 请求（通过域名而非 localhost）进行 oauth 授权等…然后只是为了获取菜单项或产品列表。\n*   没有缓存（但有 memcached ，但只用于 Session…)。\n*   团队只有 3 个很年轻的人，一个后端，一个前端，一个 iOS/android ，他们对代码变革非常抵触。\n*   生产力很差，这可以理解——乱七八糟的东西实在是太多了，根本没办法做新东西。\n\n以上就是 @whattodochange 目前所接盘的代码和团队现状，他头疼道：“我必须要找到一个策略来修复这个开发团队。”\n\n面对这个“烂摊子”，@whattodochange 想到的解决办法是完全重写，但由于公司管理层和总部对这些阻碍因素并没有真正了解，业务部门对这个项目有非常积极的规划路线，且疫情之下公司的预算很紧张，导致 @whattodochange 根本无法推进。\n\n因此，@dwhattodochange 发帖求助：“我知道完全重写是必要的，但要如何平衡？”\n\n![](//n.sinaimg.cn/sinakd20221103s/480/w640h640/20221103/89c7-8497c350ec746a4361e8c27ddfeda2c5.png)\n\n02 逐一改动 or 摆烂跑路？\n\n对于 @whattodochange 的遭遇，不少有经验的程序员深有同感，也提出了一些应对“祖传代码”的具体建议。\n\n> “完全重写不是必需的，甚至可能是最糟糕的方法。可以一次做一件事，最终你会重写所有代码，但永远不会陷入‘完全重写’的陷阱中。\n> \n> 不过在重写一行代码之前，记得要做大量的测试。如果有端到端测试，这些测试运行在客户群当前使用的每个功能中，那么您就有一个基线来安全地进行更改。只要测试通过，就可以删除代码。\n> \n> 不要想着去推动变革，尝试拥抱这个每年赚 2000 万美元的可怕代码库，和团队讨论讨论如何在能力范围内改进即可。”\n\n> 作为这个开发团队的经理，你的任务是要得到高管支持来逐渐解决这个烂摊子。你没必要告诉高管或团队具体要如何修复，只要有时间和空间上的支持就好。\n> \n> 有一种办法是每周五集合团队一起来测试，但可能会经常被紧急任务挤掉；另一种办法是让每个更新的发布速度稍慢一些，这样就有时间优化每次更新所涉及到的其他代码。例如，业务要求添加功能 X，那么你就给相关的现有功能 Y 添加一个测试，可以对团队说优化 Y 是为了让添加 X 更为方便。”\n\n不过，也有部分程序员在了解 @whattodochange 的现状后，认为“摆烂跑路”是最优解：\n\n> “你应该考虑辞职。虽然你知道这代码很烂，但它确实能带来每年 2000 万美元的收入，所以你的团队不想变革，业务人员也不会关心代码质量。他们会认为：反正 2003 年样式的 PHP 代码就可以实现这个收入，那不挺好，干嘛要浪费财力和精力去重写？\n> \n> 最后，你很难说服你的开发团队和业务部门同意重写这个决定，甚至还会招来仇视，而你自己也会讨厌这样的工作氛围。”\n\n> “为了避免自己受伤，我劝你摆脱这种混乱的处境。我之前也一直处于类似的情况，花了快五年的时间试图解决，但最后还是心累地放弃了。”\n\n03 血泪教训：人跟代码有一个能跑就行了\n\n其实在现实中，几乎所有软件开发公司都有各种老大难的“祖传代码”，像 @whattodochange 遇到这种 12 年历史的都还算年轻的了——一般越大规模越厉害的公司，“屎山”代码的情况越严重。\n\n*   《GTA 5》联机版中循环 19.8 亿次的 IF 语句，被许多人称作游戏开发史上最大的“屎山”代码，存在了 7 年 R 星（游戏开发商 RockStar）的程序员无人敢动。最终，还是一位黑客大哥看不下去给出了解决方案，R 星这才官宣要修复 bug，并给这位黑客奖励了 1 万美元。\n*   一位亚马逊工程师也曾形容他们公司的代码为：“一座很大的屎山，一座你见过的最大的山，每次你想修正一个 bug，都得爬到屎山的正中央去。”\n\n类似地，国内也有许多程序员分享过他们遇到的各种“骨灰级”祖传代码：\n\n*   “公司代码已经 40 年了，最早写代码的人不知道是否活着，要命的是文档没留下，项目代码堆在一起能有 90 多 G。”\n*   “我要升级的那批代码写于 2000 年前，最早的部分可能写于 1980 年代贝尔实验室。第一批维护升级做需求的人早就退休了，第二批也退休了，每一行代码动起来都胆战心惊。”\n*   “曾经在 Visa 工作过，感觉什么 10 年 20 年的代码简直 naive，你见过 1965 年的代码吗？第一次看到简直惊呆了，这半个世纪的代码现在还在用还跑的好好的？”\n\n可能对于很多刚工作的萌新程序员来说，看见这些各处都埋着“地雷”的代码第一反应就是“推倒重来”，但大多都得到了血泪教训：“有的时候，代码能运行就不要尝试去改，哪怕是遇到屎山一样的代码”，可能还会对新人建议道：“人跟代码有一个能跑就行了。”\n\n那么，你是否在工作中遇见过令人发指的“祖传代码”，最长拥有多少年历史？你是选择逐一改动还是放任不管？', 1, 0, 0, '2023-03-02 12:38:52', '2022-12-08 19:56:09', '祖传代码，从字面意思来看，就是一代代老程序员们留下来的“宝藏”代码——这些长年累月的代码中存有很多隐患，后来的“接盘侠”们要么无从下手，要么一改就崩，几乎可以说是程序员们的“终极噩梦”，因此也被称作“屎山代码”。', 'http://cdn.forevergtt.love/mysystem/medicine/a742efd5-413b-42f3-8774-ff2e6735253a');
INSERT INTO `article` VALUES (1347, 19, 'Java学习路线图是什么样的？零基础可以学习Java吗', '\r\n\r\n一、关于Java的学习路径\r\n\r\n新手小白切忌学习Java是东拼西凑，Java作为一种强技能学科，学习内容有难度，而越是有难度的课程就越需要你遵循学习的基本规律：即知识由简单到复杂的螺旋式上升规律。\r\n\r\n所以强烈建议新手小白在刚开始学习Java的时候，先将Java的学习路径理清楚，看看要学什么，以及学习的先后顺序又是什么。\r\n\r\n先对Java知识点进行简单分类，如下图\r\n\r\n![](//n.sinaimg.cn/sinakd20221027s/191/w640h351/20221027/7464-877f7838538c2e15ac1508af6254e6fd.jpg)\r\n\r\n然后细化各个阶段的目标与内容：\r\n\r\nJavaSE基础\r\n\r\n可掌握的核心能力\r\n\r\n1、掌握Java开发环境基本配置\r\n\r\n2、掌握运算符、表达式、流程控制语句、数组等的使用\r\n\r\n3、熟练使用IDEA开发工具\r\n\r\n4、掌握Java基本面向对象知识\r\n\r\n5、掌握常用类String、ArrayList等的使用\r\n\r\n6、掌握学生管理系统编写\r\n\r\nJavaSE进阶\r\n\r\n可掌握的核心能力\r\n\r\n1、深入理解Java面向对象相关知识点\r\n\r\n2、掌握开发中常用类如集合、IO流、时间日期等操作\r\n\r\n3、掌握Java异常处理机制，熟悉Java多线程开发\r\n\r\n4、掌握网络基础知识，了解Socket原理，TCP、UDP协议\r\n\r\n5、熟悉企业中主流的JDK新特性，如Lambda、Stream流等操作\r\n\r\n6、掌握Java基本语法完成单机程序的编写\r\n\r\nJavaWeb\r\n\r\n可掌握的核心能力\r\n\r\n1、掌握数据库单表、多表操作\r\n\r\n2、了解前端开发流程，能完成简单网页制作\r\n\r\n3、掌握Web核心技术点的使用，能使用web技术完成单体项目的开发\r\n\r\n热门框架 SSM+SpringBoot\r\n\r\n可掌握的核心能力\r\n\r\n1、独立完成企业级应用功能模块开发2、基于现有框架基础之上设计专用插件\r\n\r\n微服务框架SpringCloud+Redis+MQ+Docker+ES\r\n\r\n可掌握的核心能力\r\n\r\n1、掌握SpringCloudAlibaba微服务技术栈的使用\r\n\r\n2、掌握企业分布式缓存解决方案\r\n\r\n3、掌握企业分布式消息队列方案\r\n\r\n4、掌握企业分布式搜索解决方案\r\n\r\n5、熟练使用Docker等容器化技术\r\n\r\n6、掌握企业分布式事务解决方案\r\n\r\n7、掌握企业限流降级工具Sentinel的企业实战\r\n\r\n深度解决方案专题秒杀/GIS地图/审批工作流\r\n\r\n可掌握的核心能力\r\n\r\n1、掌握高并发网站静态化方案、异步编程实战应用\r\n\r\n2、大型项目低耦合双写一致性技术方案\r\n\r\n3、高并发抢单队列削峰实战、海量积压订单高效处理方案、高并发抢单超卖控制、超时订单处理机制\r\n\r\n4、大厂每日订单处理方案、服务自我保护机制、高性能网关技术等\r\n\r\n二、Java的学习方法\r\n\r\nJava的学习其实没有什么太多的捷径可言，用好自己的学习习惯就是最好的学习方法。\r\n\r\n经常有小伙伴反馈说什么什么学习方法一点都不好用，对自己没用之类的，其实也是因为一味的采用别人的方法确实不是对自己来说最好用的学习方法。\r\n\r\n按照自己的习惯来学习，一方面能够减少自己对学习的排斥感，另一方面自己的方法可能看起来不好用，但只要是真的能把知识学进去，那就够了。\r\n\r\n所以我对学习方法的建议相当朴实无华，就是反复学。第一遍学了之后印象不深，没关系，我们可以再来看第二遍，可能第二遍觉得学会了但是举一反三的时候又不会了，把难点记下来，先放着，过两天通过后面的学习内容接着对之前的学习内容来反推，加深印象的同时，通过知识的衔接提升之前对知识点的理解。\r\n\r\n反复地学习，听起来可能笨了点，但亲测有效。\r\n\r\n三、学习Java的方式\r\n\r\n一般学习Java主要是两个方式：自学或培训。\r\n\r\n各有优劣，可以根据自己的实际情况来选择学习的方式，如果你自身理解能力不错且有良好的学习习惯，那么自学是完全没问题的；当然，如果你说不愿意耗费那么长的时间去自学，想短时间内习得知识技能，那就需要去培训了，可以全方面系统学习，有老师带着。\r\n\r\n如果你确实想入行Java，但又不确定自己是不是适合学习，也担心去培训了结果没有找到工作，那就可以先去听试听课，有好的技能才能决定你是否找到好的工作，因此筛选培训班就成了你必须做的一件事。\r\n\r\n四、专注学习\r\n\r\n在互联网快速发展、短视频层出不穷的现在，想要专注地做一件事已经变得没那么容易了。\r\n\r\n但是学习就是要求高度的专注，可能你学两分钟就想去刷短视频、跟朋友聊天，这都是常态，也不要觉得特别愧疚，一旦你开始对自己的学习感到愧疚了，那么就会对学习这件事逐渐自带一种反抗情绪，即为了不愧疚干脆将学习抛之脑后。\r\n\r\n而这样的心态无疑阻碍了你学习的进一步发展，大家在最开始的时候可以不用对自己要求那么苛刻，学习是一个需要逐渐适应的过程，刚开始你能专注学习五分钟，随着学习的深入，你就能专注的学习半小时了，每次的学习时长都是对你自身的鼓励，至少在那段时间里你学了五分钟，且这五分钟的学习内容告诉了你什么是Java，Java用来干什么的，只要有收获了就是一次小小的成功！\r\n\r\n所以只要不断地坚持学习即可。\r\n\r\n以上就是这次文章的全部内容了，希望可以帮到新手学习Java~', 0, 0, 0, '2023-03-02 12:38:52', '2022-11-14 20:00:07', '本文将从以下四个方面解析新手小白如何学习Java：\r\n\r\n什么样的学习路径适合新手；\r\n用什么样的学习方法来学习Java；\r\n学习Java的学习方式；\r\n如果专注于学习。', NULL);
INSERT INTO `article` VALUES (1348, 20, '前端教程：开发流程中项目需求分析怎么做？', '\r\n1.数据模型分析\r\n\r\n通常情况下，一个项目需要严谨的数据模型分析，包括根据业务逻辑设计数据表，设计表字段、表之间的关联等。，在本项目中，我们使用文件来代替数据库作为数据存储。\r\n\r\n2.路由设计\r\n\r\n在本项目中，会有一个JavaScript文件，该文件负责把具体的请求路径分发给具体的请求处理函数。用户的每一个请求都会对应后台的一个具体的请求处理函数，例如，当用户需要添加歌曲时，该文件就会将请求转到处理添加业务的函数。\r\n\r\n3.功能开发\r\n\r\n编程人员根据具体功能信息进行项目开发，比如一款音乐播放类的软件，核心功能是开发展示、添加、编辑、删除歌曲四种：\r\n\r\n(1)展示歌曲信息。\r\n\r\n(2)添加歌曲，包括名称、歌手、音乐文件、图片文件。\r\n\r\n(3)编辑歌曲信息。\r\n\r\n(4)删除歌曲。\r\n\r\n项目结构\r\n\r\n本项目的文件层级结构如图1所示。各文件的作用具体如下：\r\n\r\n(1) render.js：解析模板标记语法。\r\n\r\n(2)musicjs：封装音乐文件相关的逻辑处理函数。\r\n\r\n(3) node \\_modules 文件夹下的bootstrap：响应式前端框架。\r\n\r\n(4)node\\_modules 文件夹下的underscore:模板引擎用于注入后台数据。\r\n\r\n(5)node\\_modules 文件夹下的 formidable：用于表单的数据处理、尤其是表单中的文件上传处理。\r\n\r\n(6)uploads 文件夹：用于存放MP3音频文件和jpg图片文件。\r\n\r\n![](//n.sinaimg.cn/sinakd20221013s/630/w594h836/20221013/dfa7-24aa6683d269197f72842865ab5317d4.jpg)\r\n\r\n(7)views文件夹：用于存放页面。\r\n\r\n(8)app.js：项目的入口文件。\r\n\r\n(9)config.js：配置端口。\r\n\r\n(10)package.json:项目说明文件。\r\n\r\n(11)router.js：路由模块，根据用户的请求判断路径，然后将请求分发到具体的处理函数。', 0, 0, 0, NULL, '2022-11-25 20:03:50', '项目从开始到上线的流程中，当涉及代码部分时，最重要的环节是该项目的需求分析。编程人员只有明确需求才能够设计数据、逻辑层代码等。下面将针对项目中的需求分析进行详细介绍。', 'http://cdn.forevergtt.love/mysystem/medicine/82b75897-1137-4e5b-bb73-1d8d453c91f1');
INSERT INTO `article` VALUES (1349, 21, '程序员如何不着痕迹伪装自己的菜鸟气质', '对于刚入行的程序员来说，面对各种各样的陌生配置环境和代码库，难免会手忙脚乱，尽显菜鸟本色。\r\n\r\n但从啥都需要教的菜鸟到啥都懂的大神程序员，并不简单，这需要牺牲一根又一根宝贵的头发，直到它们肉眼可数。\r\n\r\n那么，菜鸟程序员该如何伪装自己，才能不让别人看出来自己菜？\r\n\r\n别担心，今天，就要教你不着痕迹地伪装程序员大神。接下来这几招，你可学着点，大概率让你成为万众瞩目的焦点，菜鸟看了叫你大佬，高手看了直呼内行。\r\n\r\n![](//n.sinaimg.cn/sinakd20220927s/482/w640h642/20220927/275d-d2576554f6ea62bdda2a935f989c7e00.jpg)\r\n\r\n气质伪装\r\n\r\n自信话少\r\n\r\n菜鸟程序员的一大特征就是，说话没底气。老板问你问题的时候，你说话没有一点底气，期期艾艾，菜鸟气质暴露的一览无遗。\r\n\r\n明白了这个道理以后，你就需要每天提醒自己，挺起腰板，理不直气也壮，首先要笃定，各种信誓旦旦，不管别人说什么，反正自己说的就是有道理。\r\n\r\n当你被问到知道的问题时，千万不要正面回答，微微一笑，然后保持沉默，让别人猜不透你的意思。\r\n\r\n在回答问题的时候，记得多用专业术语，当你用这些术语把你的同事老板都唬住的时候，你就成功了一半。但这一步比较难，中间伴随着诸多的不确定因素，比如他们会深究这些术语。没事，这是小事儿，用另一层更加深刻的专业术语去解释给他们听。\r\n\r\n如果有人问你啥答不上来怎么办？播妞为你们准备了两种备选答案：\r\n\r\n①最好的答案就是：不答，径直走开。同事会合理化为：果然是大神，大神都有点怪癖。（老板提问时，也可参照此条，不怕挨打就行）\r\n\r\n②平时讨论技术方案时，当沙僧就行。\r\n\r\n“甲方爸爸说得对。”\r\n\r\n“PM说得对。”\r\n\r\n“leader说得对。”\r\n\r\n“老板说得对。”\r\n\r\n实在不行，就用沉稳的语气回答他们：我确实不怎么懂，我以为我懂其实不懂，我略懂一点点。他们又会自我合理化：大神就是大神，这么谦虚。\r\n\r\n俗话说得好，嘴巴不狠，地位不稳。话弱一分，锅重十吨。\r\n\r\n![](//n.sinaimg.cn/sinakd20220927s/480/w640h640/20220927/e1be-2e1e2a4ea2f86e3be07a7e82e6b35be1.jpg)\r\n\r\n造型伪装\r\n\r\n越牛的程序员\r\n\r\n穿着越朴素\r\n\r\n沉醉于代码世界里的程序员是不在意外界的，尤其是不在乎那些物质的东西。与外表的整洁与优雅相比，他们更喜欢代码本身的整洁与优雅。\r\n\r\n大神程序员追求简单生活，也没有时间打理自己外貌。所以，想要伪装到位，一定要注意伪装着装！着装！着装！\r\n\r\n无论是在大厂的高楼大厦里，还是在小公司的民宅里，无论是春夏秋冬白天晚上，还是刮风下雨电闪雷鸣，程序员爆款套装还是要备一套的。\r\n\r\n以下套装可参考：\r\n\r\n格纹衬衣+牛仔裤+休闲鞋（注意：是格纹衬衫，其他衬衫不行）\r\n\r\nT恤+宽松短裤+拖鞋\r\n\r\n背心+宽松大花裤衩+人字拖\r\n\r\n出门的时候不要忘了背电脑双肩包，换衣服的频率也不要太高，一年3-5件T恤就够了，冬天实在熬不住了，可以加件冲锋衣！\r\n\r\n想要让自己看起来更大神一点，菜鸟程序员还可以在发型上做点文章。\r\n\r\n发际线得先上移2公分，或者直接剃成地中海，海面越大代表级数越高。如果想一步到位，可以选择剃成光头，但记得要用帽子稍微遮掩一下，才能充分体现出你低调奢华有内涵的大神气质。\r\n\r\n还有一种发型更有大神风范：头顶头发剃掉，然后用一侧头发盖过去。但播妞不推荐你这么做，不好打理，尤其是在遇到大风天气时，实在尴尬。\r\n\r\n![](//n.sinaimg.cn/sinakd20220927s/482/w640h642/20220927/b6b2-6b0f4fa7298ff36f98d0b3bfbe53610f.jpg)\r\n\r\n装备伪装\r\n\r\n实力不够\r\n\r\n装备来凑\r\n\r\n经过前两个步骤的伪装，你大概率已经摆脱了菜鸟气质。\r\n\r\n但想要成为“表里如一”的大神程序员，播妞觉得你还需要搭配一些有格调的书籍，多准备一些行业相关的书籍。\r\n\r\n比如你是Java程序员，左手一本《解析Python网络爬虫》，右手一本《格斗术》，再来一本《如何成为老板的心腹 大患 》，PM看了直接对你恭敬3分，老板看了都会觉得你很有进取心，还在自卷学其他的内容。试问这样的综合型人才谁不喜欢？\r\n\r\n注意，书要多，要厚，要摆放随意，这样才能显得你专业。\r\n\r\n除了一些有格调的书籍，数码设备方面也需要“见贤思齐”，作为一名高端的程序员，一定要少用鼠标，一直用鼠标点点点，就直接破功了。', 3, 0, 0, '2023-03-02 12:38:52', '2022-11-19 20:07:06', '菜鸟程序员该如何伪装自己，才能不让别人看出来自己菜？', NULL);

-- ----------------------------
-- Table structure for article_category_ref
-- ----------------------------
DROP TABLE IF EXISTS `article_category_ref`;
CREATE TABLE `article_category_ref`  (
  `article_id` int(11) NOT NULL COMMENT '文章ID',
  `category_id` int(11) NOT NULL COMMENT '分类ID',
  PRIMARY KEY (`article_id`, `category_id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of article_category_ref
-- ----------------------------
INSERT INTO `article_category_ref` VALUES (1314, 1);
INSERT INTO `article_category_ref` VALUES (1314, 10);
INSERT INTO `article_category_ref` VALUES (1315, 42);
INSERT INTO `article_category_ref` VALUES (1315, 66);
INSERT INTO `article_category_ref` VALUES (1316, 1);
INSERT INTO `article_category_ref` VALUES (1316, 67);
INSERT INTO `article_category_ref` VALUES (1331, 66);
INSERT INTO `article_category_ref` VALUES (1331, 68);
INSERT INTO `article_category_ref` VALUES (1333, 69);
INSERT INTO `article_category_ref` VALUES (1333, 70);
INSERT INTO `article_category_ref` VALUES (1334, 1);
INSERT INTO `article_category_ref` VALUES (1334, 71);
INSERT INTO `article_category_ref` VALUES (1335, 32);
INSERT INTO `article_category_ref` VALUES (1336, 72);
INSERT INTO `article_category_ref` VALUES (1336, 73);
INSERT INTO `article_category_ref` VALUES (1337, 74);
INSERT INTO `article_category_ref` VALUES (1337, 75);
INSERT INTO `article_category_ref` VALUES (1338, 8);
INSERT INTO `article_category_ref` VALUES (1338, 9);
INSERT INTO `article_category_ref` VALUES (1339, 87);
INSERT INTO `article_category_ref` VALUES (1346, 85);
INSERT INTO `article_category_ref` VALUES (1348, 84);
INSERT INTO `article_category_ref` VALUES (1348, 93);
INSERT INTO `article_category_ref` VALUES (1359, 1);
INSERT INTO `article_category_ref` VALUES (1375, 61);
INSERT INTO `article_category_ref` VALUES (1376, 1);
INSERT INTO `article_category_ref` VALUES (1376, 61);
INSERT INTO `article_category_ref` VALUES (1376, 64);
INSERT INTO `article_category_ref` VALUES (1376, 65);
INSERT INTO `article_category_ref` VALUES (1378, 65);
INSERT INTO `article_category_ref` VALUES (1380, 83);
INSERT INTO `article_category_ref` VALUES (1381, 65);
INSERT INTO `article_category_ref` VALUES (1381, 88);
INSERT INTO `article_category_ref` VALUES (1381, 89);
INSERT INTO `article_category_ref` VALUES (1383, 1);
INSERT INTO `article_category_ref` VALUES (1383, 84);
INSERT INTO `article_category_ref` VALUES (1383, 85);
INSERT INTO `article_category_ref` VALUES (1383, 86);
INSERT INTO `article_category_ref` VALUES (1384, 90);
INSERT INTO `article_category_ref` VALUES (1384, 91);
INSERT INTO `article_category_ref` VALUES (1385, 92);
INSERT INTO `article_category_ref` VALUES (1386, 84);
INSERT INTO `article_category_ref` VALUES (1387, 84);
INSERT INTO `article_category_ref` VALUES (1388, 84);
INSERT INTO `article_category_ref` VALUES (1389, 84);
INSERT INTO `article_category_ref` VALUES (1390, 84);

-- ----------------------------
-- Table structure for category
-- ----------------------------
DROP TABLE IF EXISTS `category`;
CREATE TABLE `category`  (
  `category_id` int(11) NOT NULL AUTO_INCREMENT COMMENT '分类ID',
  `category_name` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '分类名称',
  `category_description` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT '' COMMENT '描述',
  `category_icon` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '图标',
  PRIMARY KEY (`category_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 94 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of category
-- ----------------------------
INSERT INTO `category` VALUES (1, 'Java', 'Java是一门面向对象编程语言', 'http://cdn.forevergtt.love/mysystem/medicine/3f802b44-5ec6-42b0-92b1-9c51d01157fa');
INSERT INTO `category` VALUES (2, '算法', '算法（Algorithm）是指解题方案的准确而完整的描述，是一系列解决问题的清晰指令，算法代表着用系统的方法描述解决问题的策略机制。', 'http://cdn.forevergtt.love/mysystem/medicine/3186e3ee-418b-4eb4-8c36-dd0f882c5a76');
INSERT INTO `category` VALUES (3, '数据结构', '数据结构是计算机存储、组织数据的方式。', 'http://cdn.forevergtt.love/mysystem/medicine/eabb63dd-a404-474c-aff7-82e04caa5304');
INSERT INTO `category` VALUES (4, 'C++', 'C++是一种计算机高级程序设计语言，由C语言扩展升级而产生 [17]  ，最早于1979年由本贾尼·斯特劳斯特卢普在AT&T贝尔工作室研发。C++拥有计算机运行的实用性特征，同时还致力于提高大规模程序的编程质量与程序设计语言的问题描述能力。', 'http://cdn.forevergtt.love/mysystem/medicine/8aafc3c5-3699-466d-8350-0f2c9c71934a');
INSERT INTO `category` VALUES (5, '操作系统', '操作系统（英语：Operating System，缩写：OS）是一组主管并控制计算机操作、运用和运行硬件、软件资源和提供公共服务来组织用户交互的相互关联的系统软件程序。', 'http://cdn.forevergtt.love/mysystem/medicine/ba30c775-f458-4527-b5e6-93fe456eee26');
INSERT INTO `category` VALUES (6, '计算机网络', '计算机网络是指将地理位置不同的具有独立功能的多台计算机及其外部设备，通过通信线路连接起来，在网络操作系统，网络管理软件及网络通信协议的管理和协调下，实现资源共享和信息传递的计算机系统。', 'http://cdn.forevergtt.love/mysystem/medicine/7636e5f9-fa46-4f13-9e3f-b42e15b327a6');
INSERT INTO `category` VALUES (7, '面试题', '面试的经典问题和答案', 'http://cdn.forevergtt.love/mysystem/medicine/9f6e9ee2-23cb-4d11-a51c-37896d80fb21');
INSERT INTO `category` VALUES (8, '数据库', '数据库是“按照数据结构来组织、存储和管理数据的仓库”。是一个长期存储在计算机内的、有组织的、可共享的、统一管理的大量数据的集合。', 'http://cdn.forevergtt.love/mysystem/medicine/66b69521-ef00-4b85-92dd-d436ee1df705');
INSERT INTO `category` VALUES (9, 'MySQL', 'MySQL是一个关系型数据库管理系统，由瑞典MySQL AB 公司开发，属于 Oracle 旗下产品。MySQL 是最流行的关系型数据库管理系统之一，在 WEB 应用方面，MySQL是最好的 RDBMS (Relational Database Management System，关系数据库管理系统) 应用软件之一。', 'http://cdn.forevergtt.love/mysystem/medicine/2989a2e1-124d-417b-ab00-5c6f86439b72');
INSERT INTO `category` VALUES (10, 'Spring', 'Spring框架是一个开放源代码的J2EE应用程序框架，由Rod Johnson发起，是针对bean的生命周期进行管理的轻量级容器（lightweight container）。 Spring解决了开发者在J2EE开发中遇到的许多常见的问题，提供了功能强大IOC、AOP及Web MVC等功能。', 'http://cdn.forevergtt.love/mysystem/medicine/f445d474-f035-42cc-bf02-7319e949ec3f');
INSERT INTO `category` VALUES (11, 'SpringMVC', 'Spring MVC属于SpringFrameWork的后续产品，已经融合在Spring Web Flow里面。Spring 框架提供了构建 Web 应用程序的全功能 MVC 模块。', 'http://cdn.forevergtt.love/mysystem/medicine/a8ff7d40-b627-4642-ac3d-e317322b88ce');
INSERT INTO `category` VALUES (12, 'MyBatis', 'MyBatis本是apache的一个开源项目iBatis，2010年这个项目由apache software foundation迁移到了google code，并且改名为MyBatis。2013年11月迁移到Github。', 'http://cdn.forevergtt.love/mysystem/medicine/a36294a3-e936-44d1-a193-543da0187baf');
INSERT INTO `category` VALUES (13, 'JVM', 'MyBatis本是apache的一个开源项目iBatis，2010年这个项目由apache software foundation迁移到了google code，并且改名为MyBatis。2013年11月迁移到Github。', 'http://cdn.forevergtt.love/mysystem/medicine/98c7d4c0-b38d-4ede-8df6-3758f460c738');
INSERT INTO `category` VALUES (14, '设计模式', '设计模式(Design pattern)是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结。', 'http://cdn.forevergtt.love/mysystem/medicine/09930dc9-aba6-4346-985c-df723a34d474');
INSERT INTO `category` VALUES (15, '网络编程', '网络编程从大的方面说就是对信息的发送到接收，中间传输为物理线路的作用。', 'http://cdn.forevergtt.love/mysystem/medicine/351bbf95-7921-4ba4-9125-f81c249e44d6');
INSERT INTO `category` VALUES (16, 'IO', 'I/O输入/输出(Input/Output)，分为IO设备和IO接口两个部分。 ', 'http://cdn.forevergtt.love/mysystem/medicine/cca393b2-f77a-4ffd-9076-3902ac670c48');
INSERT INTO `category` VALUES (17, 'JSP', 'JSP（全称JavaServer Pages）是由Sun Microsystems公司主导创建的一种动态网页技术标准。', 'http://cdn.forevergtt.love/mysystem/medicine/a2528ff9-9325-4ec1-882c-2f3eaa008f13');
INSERT INTO `category` VALUES (18, 'Servlet', 'Servlet（Server Applet）是Java Servlet的简称，称为小服务程序或服务连接器，用Java编写的服务器端程序，具有独立于平台和协议的特性，主要功能在于交互式地浏览和生成数据，生成动态Web内容。', 'http://cdn.forevergtt.love/mysystem/medicine/3882ff46-f742-4c38-bc5a-5cf44abb387f');
INSERT INTO `category` VALUES (19, 'JavaWeb', 'Java Web，是用Java技术来解决相关web互联网领域的技术栈。', 'http://cdn.forevergtt.love/mysystem/medicine/d03e8a98-e8a0-4eef-a046-22f137fc79f9');
INSERT INTO `category` VALUES (20, 'Hibernate', 'Hibernate是一个开放源代码的对象关系映射框架，它对JDBC进行了非常轻量级的对象封装，它将POJO与数据库表建立映射关系，是一个全自动的orm框架，hibernate可以自动生成SQL语句，自动执行，使得Java程序员可以随心所欲的使用对象编程思维来操纵数据库。', 'http://cdn.forevergtt.love/mysystem/medicine/4658311d-7a49-43cc-a33f-0794bd3322f7');
INSERT INTO `category` VALUES (21, 'SQL', '结构化查询语言（Structured Query Language）简称SQL，是一种特殊目的的编程语言，是一种数据库查询和程序设计语言，用于存取数据以及查询、更新和管理关系数据库系统。', 'http://cdn.forevergtt.love/mysystem/medicine/4a19ce29-8715-4aed-99a8-791b7acac2c7');
INSERT INTO `category` VALUES (22, 'Redis', 'Redis（Remote Dictionary Server )，即远程字典服务，是一个开源的使用ANSI C语言编写、支持网络、可基于内存亦可持久化的日志型、Key-Value数据库，并提供多种语言的API。', 'http://cdn.forevergtt.love/mysystem/medicine/eaebd843-8150-403c-a12e-11d7320c4dab');
INSERT INTO `category` VALUES (23, 'Ssm', 'SSM（Spring+SpringMVC+MyBatis）框架集由Spring、MyBatis两个开源框架整合而成（SpringMVC是Spring中的部分内容），常作为数据源较简单的web项目的框架。', 'http://cdn.forevergtt.love/mysystem/medicine/f73a299d-1f7c-4f54-b2d1-075d99edd980');
INSERT INTO `category` VALUES (24, 'JavaScript', 'JavaScript（简称“JS”） 是一种具有函数优先的轻量级，解释型或即时编译型的编程语言。虽然它是作为开发Web页面的脚本语言而出名，但是它也被用到了很多非浏览器环境中，JavaScript 基于原型编程、多范式的动态脚本语言，并且支持面向对象、命令式、声明式、函数式编程范式。', 'http://cdn.forevergtt.love/mysystem/medicine/9b77b9f3-c7ef-4fac-b91f-3876c3b7347f');
INSERT INTO `category` VALUES (25, 'Dubbo', 'Dubbo(读音[ˈdʌbəʊ])是阿里巴巴公司开源的一个高性能优秀的服务框架，使得应用可通过高性能的 RPC 实现服务的输出和输入功能，可以和 [1]  Spring框架无缝集成。', 'http://cdn.forevergtt.love/mysystem/medicine/7f8811b5-1527-4bf3-9448-c50c141b171d');
INSERT INTO `category` VALUES (26, 'VM', '虚拟机（Virtual Machine）指通过软件模拟的具有完整硬件系统功能的、运行在一个完全隔离环境中的完整计算机系统。', 'http://cdn.forevergtt.love/mysystem/medicine/e1bb9ccf-2778-4fff-802e-b4d62e28411b');
INSERT INTO `category` VALUES (27, 'MongoDB', 'MongoDB是一个基于分布式文件存储 [1]  的数据库。由C++语言编写。旨在为WEB应用提供可扩展的高性能数据存储解决方案。', 'http://cdn.forevergtt.love/mysystem/medicine/443ac75c-7cb4-4d24-883f-fe1e288a140e');
INSERT INTO `category` VALUES (28, 'SpringBoot', 'Spring Boot是由Pivotal团队提供的全新框架，其设计目的是用来简化新Spring应用的初始搭建以及开发过程。该框架使用了特定的方式来进行配置，从而使开发人员不再需要定义样板化的配置。通过这种方式，Spring Boot致力于在蓬勃发展的快速应用开发领域(rapid application development)成为领导者。', 'http://cdn.forevergtt.love/mysystem/medicine/791b7c70-9a88-4eab-8525-a18ecd737d58');
INSERT INTO `category` VALUES (29, 'ElasticSearch', 'Elasticsearch 是位于 Elastic Stack 核心的分布式搜索和分析引擎。', 'http://cdn.forevergtt.love/mysystem/medicine/6a315416-c1a0-49b4-841e-57ee81c65a3d');
INSERT INTO `category` VALUES (30, 'Docker', 'Docker 是一个开源的应用容器引擎，让开发者可以打包他们的应用以及依赖包到一个可移植的镜像中，然后发布到任何流行的 Linux或Windows操作系统的机器上，也可以实现虚拟化。容器是完全使用沙箱机制，相互之间不会有任何接口。', 'http://cdn.forevergtt.love/mysystem/medicine/88a07d40-eba3-40a8-8c89-98977f85e32e');
INSERT INTO `category` VALUES (31, 'Jenkins', 'Jenkins是一个开源软件项目，是基于Java开发的一种持续集成工具，用于监控持续重复的工作，旨在提供一个开放易用的软件平台，使软件项目可以进行持续集成', 'http://cdn.forevergtt.love/mysystem/medicine/0a1842d2-2988-4ed3-94b4-574fec77345a');
INSERT INTO `category` VALUES (32, 'Vue', 'Vue (读音 /vjuː/，类似于 view) 是一套用于构建用户界面的渐进式JavaScript框架。', 'http://cdn.forevergtt.love/mysystem/medicine/abf70d7e-1d96-475d-87ee-4e12c01d1e6e');
INSERT INTO `category` VALUES (33, 'Php', 'PHP（PHP: Hypertext Preprocessor）即“超文本预处理器”，是在服务器端执行的脚本语言，尤其适用于Web开发并可嵌入HTML中。', 'http://cdn.forevergtt.love/mysystem/medicine/8fdcb9ea-f4fd-4259-97e2-8bb17946e9b1');
INSERT INTO `category` VALUES (34, 'Python', 'Python由荷兰数学和计算机科学研究学会的吉多·范罗苏姆于1990年代初设计，作为一门叫做ABC语言的替代品。 [1]  Python提供了高效的高级数据结构，还能简单有效地面向对象编程。', 'http://cdn.forevergtt.love/mysystem/medicine/7b6df35d-b767-411a-8f96-aa568cf276e1');
INSERT INTO `category` VALUES (35, 'C#', 'C#是微软公司发布的一种由C和C++衍生出来的面向对象的编程语言、运行于.NET Framework和.NET Core(完全开源，跨平台)之上的高级程序设计语言。', 'http://cdn.forevergtt.love/mysystem/medicine/1413bf41-9e41-4840-8afb-e6ad8d16814c');
INSERT INTO `category` VALUES (36, 'Rest', 'REST即表述性状态传递（英文：Representational State Transfer，简称REST）是Roy Fielding博士在2000年他的博士论文中提出来的一种软件架构风格。它是一种针对网络应用的设计和开发方式，可以降低开发的复杂性，提高系统的可伸缩性。', NULL);
INSERT INTO `category` VALUES (37, 'API', 'API之主要目的是提供应用程序与开发人员以访问一组例程的能力，而又无需访问源码，或理解内部工作机制的细节。提供API所定义的功能的软件称作此API的实现。API是一种接口，故而是一种抽象。', NULL);
INSERT INTO `category` VALUES (38, 'IOS', 'iOS是由苹果公司开发的移动操作系统。', NULL);
INSERT INTO `category` VALUES (39, 'Css', '层叠样式表(英文全称：Cascading Style Sheets)是一种用来表现HTML（标准通用标记语言的一个应用）或XML（标准通用标记语言的一个子集）等文件样式的计算机语言。CSS不仅可以静态地修饰网页，还可以配合各种脚本语言动态地对网页各元素进行格式化。', NULL);
INSERT INTO `category` VALUES (40, 'Html', 'HTML的全称为超文本标记语言，是一种标记语言。它包括一系列标签．通过这些标签可以将网络上的文档格式统一，使分散的Internet资源连接为一个逻辑整体。', '1');
INSERT INTO `category` VALUES (41, '软件工程', '软件工程是一门研究用工程化方法构建和维护有效、实用和高质量的软件的学科。', NULL);
INSERT INTO `category` VALUES (42, '量子力学', '量子力学（Quantum Mechanics），为物理学理论，是研究物质世界微观粒子运动规律的物理学分支，主要研究原子、分子、凝聚态物质，以及原子核和基本粒子的结构、性质的基础理论。它与相对论一起构成现代物理学的理论基础。量子力学不仅是现代物理学的基础理论之一，而且在化学等学科和许多近代技术中得到广泛应用。', NULL);
INSERT INTO `category` VALUES (43, 'el-admin', 'el-admin 是一个基于 Spring Boot 2.1.0 、 Spring boot Jpa、 Spring Security、redis、Vue 的前后端分离的权限管理系统，项目采用分模块开发方式， 权限控制采用 RBAC（Role-Based Access Control，基于角色的访问控制），前端菜单支持动态路由。', NULL);
INSERT INTO `category` VALUES (44, 'Git', 'Git（读音为/gɪt/）是一个开源的分布式版本控制系统，可以有效、高速地处理从很小到非常大的项目版本管理。 [1]  也是Linus Torvalds为了帮助管理Linux内核开发而开发的一个开放源码的版本控制软件。', NULL);
INSERT INTO `category` VALUES (45, 'UML', '统一建模语言(Unified Modeling Language，UML)是一种为面向对象系统的产品进行说明、可视化和编制文档的一种标准语言，是非专利的第三代建模和规约语言。UML是面向对象设计的建模工具，独立于任何具体程序设计语言。 [1]', NULL);
INSERT INTO `category` VALUES (46, '软件测试', '软件测试（英语：Software Testing），描述一种用来促进鉴定软件的正确性、完整性、安全性和质量的过程。换句话说，软件测试是一种实际输出与预期输出之间的审核或者比较过程。软件测试的经典定义是：在规定的条件下对程序进行操作，以发现程序错误，衡量软件质量，并对其是否能满足设计要求进行评估的过程。', NULL);
INSERT INTO `category` VALUES (47, 'HashMap', '基于哈希表的 Map 接口的实现。此实现提供所有可选的映射操作，并允许使用 null 值和 null 键', NULL);
INSERT INTO `category` VALUES (48, 'Xml', '可扩展标记语言 (Extensible Markup Language, XML) ，标准通用标记语言的子集，可以用来标记数据、定义数据类型，是一种允许用户对自己的标记语言进行定义的源语言。 XML是标准通用标记语言 可扩展性良好,内容与形式分离,遵循严格的语法要求,保值性良好等优点,', NULL);
INSERT INTO `category` VALUES (49, 'ArrayList', 'ArrayList就是动态数组，用MSDN中的说法，就是Array的复杂版本，它提供了动态的增加和减少元素，实现了ICollection和IList接口，灵活的设置数组的大小等好处\r\n', NULL);
INSERT INTO `category` VALUES (50, 'UI', '用户界面(User Interface)是指对软件的人机交互、操作逻辑、界面美观的整体设计。', NULL);
INSERT INTO `category` VALUES (51, 'Tomcat', 'Tomcat是Apache 软件基金会（Apache Software Foundation）的Jakarta 项目中的一个核心项目，由Apache、Sun 和其他一些公司及个人共同开发而成。由于有了Sun 的参与和支持，最新的Servlet 和JSP 规范总是能在Tomcat 中得到体现，Tomcat 5支持最新的Servlet 2.4 和JSP 2.0 规范。因为Tomcat 技术先进、性能稳定，而且免费，因而深受Java 爱好者的喜爱并得到了部分软件开发商的认可，成为比较流行的Web 应用服务器。', NULL);
INSERT INTO `category` VALUES (52, 'Aop', '在软件业，AOP为Aspect Oriented Programming的缩写，意为：面向切面编程，通过预编译方式和运行期间动态代理实现程序功能的统一维护的一种技术。AOP是OOP的延续，是软件开发中的一个热点，也是Spring框架中的一个重要内容，是函数式编程的一种衍生范型。利用AOP可以对业务逻辑的各个部分进行隔离，从而使得业务逻辑各部分之间的耦合度降低，提高程序的可重用性，同时提高了开发的效率。', NULL);
INSERT INTO `category` VALUES (53, 'Nginx', 'Nginx (engine x) 是一个高性能的HTTP和反向代理web服务器 [13]  ，同时也提供了IMAP/POP3/SMTP服务。Nginx是由伊戈尔·赛索耶夫为俄罗斯访问量第二的Rambler.ru站点（俄文：Рамблер）开发的，公开版本1.19.6发布于2020年12月15日。', NULL);
INSERT INTO `category` VALUES (54, 'Bean', 'EJB是Enterprise Java Bean的缩写，一个Bean扮演着应用程序素材的角色。它包含有一个functional interface，一个life-cycle interface，以及一个实现它所支援的商业方法的类别。', NULL);
INSERT INTO `category` VALUES (55, 'SpringFramework', 'springframework 是spring 里面的一个基础开源框架，主要用于javaee的企业开发。', NULL);
INSERT INTO `category` VALUES (56, 'Ajax', 'Ajax即Asynchronous Javascript And XML（异步JavaScript和XML）在 2005年被Jesse James Garrett提出的新术语，用来描述一种使用现有技术集合的‘新’方法，包括: HTML 或 XHTML, CSS, JavaScript, DOM, XML, XSLT, 以及最重要的XMLHttpRequest。 [3]  使用Ajax技术网页应用能够快速地将增量更新呈现在用户界面上，而不需要重载（刷新）整个页面，这使得程序能够更快地回应用户的操作。', NULL);
INSERT INTO `category` VALUES (57, 'React', 'React是用于构建用户界面的JavaScript库， [1]  起源于Facebook的内部项目，该公司对市场上所有 JavaScript MVC框架都不满意，决定自行开发一套，用于架设Instagram的网站。', NULL);
INSERT INTO `category` VALUES (58, 'axios', 'Axios，是一个基于promise [5]  的网络请求库，作用于node.js和浏览器中，它是 isomorphic 的(即同一套代码可以运行在浏览器和node.js中)。在服务端它使用原生node.js http模块, 而在客户端 (浏览端) 则使用XMLHttpRequest。', NULL);
INSERT INTO `category` VALUES (59, 'Bootstrap', 'Bootstrap是美国Twitter公司的设计师Mark Otto和Jacob Thornton合作基于HTML、CSS、JavaScript 开发的简洁、直观、强悍的前端开发框架，使得 Web 开发更加快捷。Bootstrap提供了优雅的HTML和CSS规范，它即是由动态CSS语言Less写成。', NULL);
INSERT INTO `category` VALUES (60, 'Gitlab', 'GitLab 是一个用于仓库管理系统的开源项目，使用Git作为代码管理工具，并在此基础上搭建起来的Web服务。', NULL);
INSERT INTO `category` VALUES (65, 'C', ' ', NULL);
INSERT INTO `category` VALUES (66, '计算机', ' ', NULL);
INSERT INTO `category` VALUES (67, '就业', ' ', NULL);
INSERT INTO `category` VALUES (68, '网络安全', ' ', NULL);
INSERT INTO `category` VALUES (69, '成功', ' ', NULL);
INSERT INTO `category` VALUES (70, '程序员', ' ', NULL);
INSERT INTO `category` VALUES (71, '成长', ' ', NULL);
INSERT INTO `category` VALUES (72, 'csdn', ' ', NULL);
INSERT INTO `category` VALUES (73, '编程语言', ' ', NULL);
INSERT INTO `category` VALUES (74, '思路', ' ', NULL);
INSERT INTO `category` VALUES (75, '新闻', ' ', 'http://cdn.forevergtt.love/mysystem/medicine/2ba9053a-4f50-40ac-a82b-aa3482472f76');
INSERT INTO `category` VALUES (78, 'BB', ' ', NULL);
INSERT INTO `category` VALUES (80, 'DD', '', NULL);
INSERT INTO `category` VALUES (82, 'W', '', NULL);
INSERT INTO `category` VALUES (83, 'springbooot', '', NULL);
INSERT INTO `category` VALUES (84, 'java', '', NULL);
INSERT INTO `category` VALUES (85, 'JAVA', '', NULL);
INSERT INTO `category` VALUES (86, 'VUE', '', NULL);
INSERT INTO `category` VALUES (87, 'XX', '', NULL);
INSERT INTO `category` VALUES (88, 'A', '', NULL);
INSERT INTO `category` VALUES (89, 'B', '', NULL);
INSERT INTO `category` VALUES (90, 'JAva', '', NULL);
INSERT INTO `category` VALUES (91, 'Springboot', '', NULL);
INSERT INTO `category` VALUES (92, '架构', '', NULL);
INSERT INTO `category` VALUES (93, 'vue', '', NULL);

-- ----------------------------
-- Table structure for comment
-- ----------------------------
DROP TABLE IF EXISTS `comment`;
CREATE TABLE `comment`  (
  `comment_id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '评论ID',
  `comment_article_id` int(10) UNSIGNED NOT NULL COMMENT '文章ID',
  `comment_author_name` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '评论人名称',
  `comment_author_email` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '评论人邮箱',
  `comment_author_avatar` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '评论人头像',
  `comment_content` text CHARACTER SET utf8 COLLATE utf8_general_ci NULL COMMENT '内容',
  `comment_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT 'IP',
  `comment_create_time` datetime(0) NULL DEFAULT NULL COMMENT '评论时间',
  `comment_role` int(11) NULL DEFAULT NULL COMMENT '角色，是否管理员/是否是友人',
  PRIMARY KEY (`comment_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 76 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of comment
-- ----------------------------
INSERT INTO `comment` VALUES (43, 1314, 'unfool', '2935473825@qq.com', NULL, '很有用处！', '106.122.200.208', '2022-11-15 09:55:54', 0);
INSERT INTO `comment` VALUES (44, 1314, '程序员那些事', '1624374826@qq.com', NULL, '作者总结的很到位。', '117.30.54.68 ', '2022-11-15 09:55:57', 0);
INSERT INTO `comment` VALUES (45, 1314, '软件匠', '263131625@qq.com', NULL, '学到了。', '119.180.192.212', '2022-11-17 18:33:11', 0);
INSERT INTO `comment` VALUES (48, 1314, '岁月不如经历', '1426352612@qq.com', NULL, '我觉得这篇文章很好', '27.223.255.255', '2022-12-07 18:40:14', 0);
INSERT INTO `comment` VALUES (49, 1316, '我就是我', '2863535172@qq.com', NULL, '计算机专业挺好的，应该是未来趋势。', '211.67.255.255\r\n', '2022-03-25 18:43:40', 0);
INSERT INTO `comment` VALUES (57, 1316, '面包真好吃', '235364324@qq.com', NULL, '质量很高，感谢作者。', '58.15.255.255\r\n', '2022-12-08 01:31:18', 0);
INSERT INTO `comment` VALUES (58, 1316, '幸福时光', '2234523455@qq.com', NULL, 'java卷的已经不行了。。。', '117.30.54.68 ', '2022-12-08 03:07:00', 0);
INSERT INTO `comment` VALUES (59, 1316, '博学天空', '1643675327@qq.com', NULL, '对我帮助很大', '60.235.255.255\r\n', '2022-12-08 03:07:10', 0);
INSERT INTO `comment` VALUES (60, 1316, '牛肉炖土豆', '1635267237@qq.com', NULL, '赞一个', '119.180.192.212', '2022-12-08 03:07:14', 0);
INSERT INTO `comment` VALUES (61, 1331, '薯片创始人', '27364656361@qq.com', NULL, '网络安全问题确实要重视。', '150.223.255.255\r\n', '2022-12-08 03:17:10', 0);
INSERT INTO `comment` VALUES (62, 1331, '希望', '2872392768@qq.comwc', NULL, '这篇文章值得收藏', '180.201.255.255', '2022-12-08 12:19:08', 0);
INSERT INTO `comment` VALUES (63, 1331, '小青草', '1625464253@qq.com', NULL, '在互联网越来越发达的今天，网络安全问题已不容忽视。', '150.122.255.255', '2022-12-08 12:46:22', 0);
INSERT INTO `comment` VALUES (64, 1331, '星河安全', '2567543355@qq.com', NULL, '请问还有什么其他的方法吗？', '182.47.255.255\r\n', '2022-12-12 00:29:26', 0);
INSERT INTO `comment` VALUES (65, 1332, 'fish', '2872392768@qq.comwc', NULL, 'c++很万能，也比较简单。', '203.93.139.255\r\n112.224.0.0', '2022-12-12 12:03:13', 0);
INSERT INTO `comment` VALUES (66, 1332, '开在夏天', '2872392768@qq.com', NULL, '谢谢作者，已收藏。', '106.122.200.208', '2022-12-13 02:09:10', 0);
INSERT INTO `comment` VALUES (67, 1332, '呱', '2872392768@qq.com', NULL, 'c++是其他语言的根本。', '211.80.255.255\r\n', '2022-12-13 05:33:31', 0);
INSERT INTO `comment` VALUES (68, 1314, '渺渺兮予怀', '12532323345@qq.com', NULL, '两种语言都很有用！', '', '2022-12-13 05:40:46', 0);
INSERT INTO `comment` VALUES (70, 1336, '在', '2028524188@stu.htu.edu.cn', NULL, '<p>肯定还活着呀</p>', NULL, '2022-12-15 01:28:18', 0);
INSERT INTO `comment` VALUES (72, 1343, '为', '王 ', NULL, '<p>问问</p>', NULL, '2022-12-30 03:46:32', 0);
INSERT INTO `comment` VALUES (73, 1337, 'w', '287239s2768@qq.com', NULL, '<p>we</p>', NULL, '2023-02-23 01:04:21', 0);
INSERT INTO `comment` VALUES (74, 1386, '强无敌', '2872392768@qq.comwc', NULL, '<p>按我说的发</p>', NULL, '2023-03-01 16:45:06', 0);
INSERT INTO `comment` VALUES (75, 1314, '额外v', '2872392768@qq.com', NULL, '<p>儿童我去饿v</p>', NULL, '2023-03-02 10:47:49', 0);

-- ----------------------------
-- Table structure for img_name_tb
-- ----------------------------
DROP TABLE IF EXISTS `img_name_tb`;
CREATE TABLE `img_name_tb`  (
  `file_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `file_url` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `is_dead` int(11) NULL DEFAULT NULL,
  `id` int(11) NOT NULL,
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of img_name_tb
-- ----------------------------

-- ----------------------------
-- Table structure for link
-- ----------------------------
DROP TABLE IF EXISTS `link`;
CREATE TABLE `link`  (
  `link_id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '链接ID',
  `link_url` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT 'URL',
  `link_name` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '姓名',
  `link_image` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '头像',
  `link_description` text CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL COMMENT '描述',
  `link_owner_nickname` varchar(40) CHARACTER SET utf8 COLLATE utf8_general_ci NOT NULL COMMENT '所属人名称',
  `link_owner_contact` varchar(255) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '联系方式',
  `link_update_time` datetime(0) NULL DEFAULT NULL COMMENT '更新时间',
  `link_create_time` datetime(0) NULL DEFAULT NULL COMMENT '创建时间',
  `link_status` int(10) UNSIGNED NULL DEFAULT 1 COMMENT '状态',
  PRIMARY KEY (`link_id`) USING BTREE,
  UNIQUE INDEX `link_name`(`link_name`) USING BTREE
) ENGINE = MyISAM AUTO_INCREMENT = 23 CHARACTER SET = utf8 COLLATE = utf8_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of link
-- ----------------------------
INSERT INTO `link` VALUES (10, 'www.baidu.com', '百度', NULL, '百度（Baidu）是拥有强大互联网基础的领先AI公司。', '李彦宏', '1766363627@qq.com', '2022-12-15 02:14:02', '2022-11-29 11:52:58', 1);
INSERT INTO `link` VALUES (11, 'www.google.com', '谷歌', NULL, '谷歌公司（Google Inc.）成立于1998年9月4日，由拉里·佩奇和谢尔盖·布林共同创建，被公认为全球最大的搜索引擎公司。', '埃里克·施密特', '2746464657@qq.com', '2022-11-02 11:52:55', '2022-10-19 11:52:58', 1);
INSERT INTO `link` VALUES (12, 'https://hao.360.cn', '360浏览器', NULL, '360安全浏览器（360 Security Browser）是360安全中心推出的一款基于Internet Explorer和Chromium双核的浏览器，是世界之窗开发者凤凰工作室和360安全中心合作的产品', '北京奇虎科技有限公司', '2028524188@qq.com', '2022-12-13 06:09:20', '2022-12-07 19:29:05', 1);
INSERT INTO `link` VALUES (18, 'com.lenovo.browser', '联想浏览器', 'http://cdn.forevergtt.love/mysystem/medicine/2514310c-cf3d-4066-8f6d-181da61caf35', '联想浏览器（原绿茶浏览器）是联想官方提供的安全、易用的手机浏览器。', '联想（北京）有限公司', '2872392768@qq.com', '2022-12-13 06:09:16', '2022-12-01 19:29:12', 1);
INSERT INTO `link` VALUES (17, 'http://ie.sogou.com', '搜狗浏览器', 'http://cdn.forevergtt.love/mysystem/medicine/9362c94a-9add-47b4-aee8-3710b5d5d781', '搜狗高速浏览器 [1]  由搜狗公司开发，基于谷歌chromium内核，力求为用户提供跨终端无缝使用体验，让上网更简单、网页阅读更流畅的浏览器。', '搜狗', '1273635364@qq.com', '2022-12-13 06:09:08', '2022-12-02 19:29:33', 1);
INSERT INTO `link` VALUES (13, 'http://mb.qq.com ', 'QQ浏览器', NULL, 'QQ浏览器 [1]  是腾讯科技（深圳）有限公司开发的一款浏览器，其前身为TT浏览器。QQ浏览器秉承TT浏览器1-4系列方便易用的特点，但技术架构不同；交互和视觉表现也重新设计。采用Chromium内核+IE双内核，让浏览快速稳定，拒绝卡顿，完 美支持HTML5和各种新的Web标准。它同时可以安装众多Chrome的拓展，支持QQ快捷登录，登录浏览器后即可自动登录腾讯系网页 [。', '深圳市腾讯计算机系统有限公司', '1625354625@qq.com', '2022-12-14 20:26:40', '2022-12-12 20:26:43', 1);
INSERT INTO `link` VALUES (14, 'http://ie.2345.com', '2345加速浏览器', NULL, '2345手机浏览器是一款极速上网手机浏览器，小巧稳定且省流量，安装包只有52.51M！四重广告智能拦截模式，安全省流。支持主流各大搜索引擎，内置海量新闻头条、免费小说影视、网址导航，满足你90%的手机上网需求！', '上海二三四五网络科技有限公司', '23531245321@qq.com', '2022-12-14 20:29:04', '2022-12-13 20:29:07', 1);
INSERT INTO `link` VALUES (15, ':http://www.liebao.cn/ ', '猎豹浏览器', NULL, '猎豹安全浏览器，是由猎豹移动公司（原金山网络）推出的一款浏览器，主打安全与极速特性，采用Trident和WebKit双渲染引擎，并整合金山自家的BIPS进行安全防护。猎豹安全浏览器对Chrome的Webkit内核进行了超过100项的技术优化，访问网页速度更快。其具有首创的智能切换引擎，动态选择内核匹配不同网页，并且支持HTML5新国际网页标准，极速浏览的同时也保证兼容性。', '北京金山办公软件股份有限公司', '17363526453@qq.com', '2022-12-14 20:34:11', '2022-12-13 20:34:14', 1);
INSERT INTO `link` VALUES (16, 'http://www.firefox.com.cn/', '火狐浏览器', NULL, 'Mozilla Firefox，中文俗称“火狐”（正式缩写为Fx或fx [1]  ），是一个由Mozilla开发的自由及开放源代码的网页浏览器。', 'Mozilla', '2645636182@qq.com', '2022-12-14 20:38:31', NULL, 1);
INSERT INTO `link` VALUES (19, 'www.aa.com', '1', 'http://cdn.forevergtt.love/mysystem/medicine/d1f7923b-802d-43cb-87e5-9dafb853f13b', '1', '1', '293547382q5@qq.com', NULL, '2022-12-15 02:59:30', 0);
INSERT INTO `link` VALUES (20, 'www.aa.com', 'sdf', NULL, '胡一天人', 'sert', '2872392768@qq.com', NULL, '2023-01-09 02:16:49', 0);
INSERT INTO `link` VALUES (21, 'www.awd.com', 'ertf', NULL, '深V', 'i啊我靠', '2872392768@qq.com', NULL, '2023-01-09 02:38:04', 0);
INSERT INTO `link` VALUES (22, 'www.ad.com', 'aesdf', NULL, 'adf', 'ac', '2872392768@qq.com', NULL, '2023-01-09 02:45:11', 0);

-- ----------------------------
-- Table structure for menu
-- ----------------------------
DROP TABLE IF EXISTS `menu`;
CREATE TABLE `menu`  (
  `menu_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '菜单名',
  `perm_key` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '具体权限',
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `status` int(1) NULL DEFAULT NULL COMMENT '0表示正常，1表示停用',
  `del_flag` int(255) NULL DEFAULT NULL COMMENT '0表示未删除，1表示已删除',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 3 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of menu
-- ----------------------------
INSERT INTO `menu` VALUES ('新增文章', 'blog:add:article', 1, 0, 0);
INSERT INTO `menu` VALUES ('删除文章', 'blog:delete:article', 2, 0, 0);

-- ----------------------------
-- Table structure for message
-- ----------------------------
DROP TABLE IF EXISTS `message`;
CREATE TABLE `message`  (
  `message_id` int(10) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '留言ID',
  `message_author_name` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '留言人名称',
  `message_author_email` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '留言人邮箱',
  `message_author_avatar` varchar(100) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT '留言人头像',
  `message_content` varchar(1000) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '留言内容',
  `message_ip` varchar(50) CHARACTER SET utf8 COLLATE utf8_general_ci NULL DEFAULT NULL COMMENT 'IP',
  `message_create_time` datetime(0) NULL DEFAULT NULL COMMENT '留言时间',
  `message_role` int(11) NULL DEFAULT NULL COMMENT '角色，是否管理员/是否是友人',
  PRIMARY KEY (`message_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 63 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of message
-- ----------------------------
INSERT INTO `message` VALUES (43, '小花', '2872392768@qq.com', NULL, '<p>你好，你的文章对我帮助很大。</p>', '182.112.59.70', '2022-11-23 20:07:03', 1);
INSERT INTO `message` VALUES (44, '在希望的田野上', '2754378642@qq.com', NULL, '你好', '219.229.255.255\r\n', '2022-11-23 20:07:03', 1);
INSERT INTO `message` VALUES (45, '不能吃的馒头', '13453245563@qq.com', NULL, '我有一些问题想和你探讨。', '61.169.255.255\r\n', '2022-12-07 11:17:39', 0);
INSERT INTO `message` VALUES (46, '碧海蓝天', '2746453423@qq.com', NULL, '我很赞同。', '117.74.255.255', '2022-12-07 11:19:38', 0);
INSERT INTO `message` VALUES (47, '开心', '26454736351@qq.com', NULL, '你的一些观点很有见解。', '125.215.63.255\r\n', '2022-12-07 11:34:58', 0);
INSERT INTO `message` VALUES (48, 'Real', '1625344756@qq.com', NULL, '希望能和你成为朋友', '114.95.255.255', '2022-12-07 11:41:55', 0);
INSERT INTO `message` VALUES (49, '海的那边', '17263526354@qq.com', NULL, '好好好很好！', '1.192.217.131	', '2022-12-14 20:41:09', 0);
INSERT INTO `message` VALUES (50, '蓝精灵', '2317634271@qq.com', NULL, '我喜欢你的文章哦5', '1.193.115.0', '2022-12-14 20:42:08', 0);
INSERT INTO `message` VALUES (51, '小红帽', '1627462547@qq.com', NULL, '我已经关注你啦', '61.52.8.243	', '2022-12-14 20:44:14', 0);
INSERT INTO `message` VALUES (52, '羊咩咩', '27364523354@qq.com', NULL, '踩一踩', '42.236.14.160', '2022-12-14 20:47:14', 0);
INSERT INTO `message` VALUES (53, 'Lucky', '17364837365@qq.com', NULL, '好有内涵啊', '1.199.161.0', '2022-12-14 20:48:17', 0);
INSERT INTO `message` VALUES (54, '咕噜', '26356345267@qq.com', NULL, '很实用！', '58.56.12.0', '2022-12-14 20:49:31', 0);
INSERT INTO `message` VALUES (55, '1', '1', NULL, '1', '122.0.255.255\r\n', '2022-12-13 05:57:22', 0);
INSERT INTO `message` VALUES (56, '隔壁的小黄', '1625353625@qq.com', NULL, '好好好~', '27.148.160.027', '2022-12-14 20:50:18', 0);
INSERT INTO `message` VALUES (57, '吃饱没咩', '2635524144@qq.com', NULL, '给你点赞', '210.34.130.210', '2022-12-14 20:51:33', 0);
INSERT INTO `message` VALUES (58, '夏天', '2746363562@qq.com', NULL, '作者希望你出更多的好作品。', '36.149.19.255', '2022-12-14 20:53:04', 0);
INSERT INTO `message` VALUES (59, '骑士', '2533223455@qq.com', NULL, '狠狠的赞同。', '43.248.107.255', '2022-12-14 20:56:51', 0);
INSERT INTO `message` VALUES (60, '最后的晚餐', '1333324244@qq.com', NULL, '有些方面我不是很同意。', '58.223.15.0', '2022-12-14 20:58:01', NULL);
INSERT INTO `message` VALUES (61, '你爹', '287239s2768@qq.com', NULL, '垃圾', '0:0:0:0:0:0:0:1', '2022-12-15 03:00:01', 0);
INSERT INTO `message` VALUES (62, 'www', '287239s2768@qq.com', NULL, '😁🤣🤣ds ', '0:0:0:0:0:0:0:1', '2022-12-19 01:40:14', 0);

-- ----------------------------
-- Table structure for name
-- ----------------------------
DROP TABLE IF EXISTS `name`;
CREATE TABLE `name`  (
  `name_id` int(11) NOT NULL AUTO_INCREMENT,
  `name_nickname` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL COMMENT '称号',
  `name_link_id` int(11) NULL DEFAULT NULL COMMENT '友人id',
  PRIMARY KEY (`name_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 5 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of name
-- ----------------------------
INSERT INTO `name` VALUES (1, '管理员', 1);
INSERT INTO `name` VALUES (2, '资源大使', 2);
INSERT INTO `name` VALUES (3, '程序员', 3);
INSERT INTO `name` VALUES (4, '', NULL);

-- ----------------------------
-- Table structure for role
-- ----------------------------
DROP TABLE IF EXISTS `role`;
CREATE TABLE `role`  (
  `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `role_key` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `status` int(255) NULL DEFAULT NULL COMMENT '0表示启用，1表示禁用',
  PRIMARY KEY (`id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 4 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of role
-- ----------------------------
INSERT INTO `role` VALUES ('管理员', 'admin', 1, 0);
INSERT INTO `role` VALUES ('普通用户', 'user', 2, 0);
INSERT INTO `role` VALUES ('游客', 'tourist', 3, 0);

-- ----------------------------
-- Table structure for role_menu
-- ----------------------------
DROP TABLE IF EXISTS `role_menu`;
CREATE TABLE `role_menu`  (
  `role_id` int(11) NOT NULL,
  `menu_id` int(11) NOT NULL,
  PRIMARY KEY (`role_id`, `menu_id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of role_menu
-- ----------------------------
INSERT INTO `role_menu` VALUES (1, 1);
INSERT INTO `role_menu` VALUES (1, 2);
INSERT INTO `role_menu` VALUES (2, 1);

-- ----------------------------
-- Table structure for user
-- ----------------------------
DROP TABLE IF EXISTS `user`;
CREATE TABLE `user`  (
  `user_id` int(11) NOT NULL AUTO_INCREMENT,
  `user_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `user_password` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NULL DEFAULT NULL,
  `user_role` int(11) NULL DEFAULT NULL COMMENT '用户角色',
  PRIMARY KEY (`user_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 21 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of user
-- ----------------------------
INSERT INTO `user` VALUES (2, 'aaaaaa', 'e10adc3949ba59abbe56e057f20f883e', 2);
INSERT INTO `user` VALUES (3, 'aaaaaaq', 'fcea920f7412b5da7be0cf42b8c93759', 2);
INSERT INTO `user` VALUES (4, 'admin1', '96e79218965eb72c92a549dd5a330112', 2);
INSERT INTO `user` VALUES (5, 'qqqqqq', 'e10adc3949ba59abbe56e057f20f883e', 2);
INSERT INTO `user` VALUES (6, 'abcdef', 'e10adc3949ba59abbe56e057f20f883e', 2);
INSERT INTO `user` VALUES (7, 'abcdefa', 'e10adc3949ba59abbe56e057f20f883e', 2);
INSERT INTO `user` VALUES (8, 'scm123456', '$2a$10$SAzHRSgSGMebHf.jKYBM7eXXVUGg2a2UnRFNTxyw0gcEUxiN/5Yia', 2);
INSERT INTO `user` VALUES (9, 'admin', '$2a$10$QuzUDni4PMAO7hUR6IhSp.EFJia8me6yG.HFeLySh2cBrby8KWTiq', 1);
INSERT INTO `user` VALUES (10, 'admsin', 'abc1s23456', 2);
INSERT INTO `user` VALUES (11, 'admwwsin', '$2a$10$hZY0cKpV/mp3n5877.pR4e.PEODrwAdRIUjd.75c.NVasFwGqWxu.', 2);
INSERT INTO `user` VALUES (13, 'qwqwq', '$2a$10$Yh3DKISK0DNk3Uqho8SiYuFVCkYb5He42lSV/t6z46I9bEUGiSUzO', 2);
INSERT INTO `user` VALUES (14, 'qweqwe3', '$2a$10$mNiqQmL1LHXC0Au02ItSROu2KdGNHsnGI3UhwbjRC0V4lwLWVFAk.', 2);
INSERT INTO `user` VALUES (15, 'admins', '$2a$10$1hlUt5SrRls6lMS6ToZBc.0k329cBay3kmrEIeuhu1JX3sbbCjZAS', 2);
INSERT INTO `user` VALUES (16, 'lovezgt', '$2a$10$MafJaXl21Of0FGNhpjF2TunKZdemSLisiWVaHA1dBw7E4HgE5eV2u', 2);
INSERT INTO `user` VALUES (17, 'lovezgtz', '$2a$10$flnaXNJ62TG6z3ho.TmKhORd3PZ3IoqTZcHbtW6IVGYcYH.7WdX82', 2);
INSERT INTO `user` VALUES (18, 'wderth', '$2a$10$1GRvy2JUB8p4.0hu8XNvOuZbo6eij5BDMQ8HZNfB4amMrfs0lf1M6', 2);
INSERT INTO `user` VALUES (19, 'lhigyufdtrsew', '$2a$10$0NK1NYo4pcodAhUpq1Ye3uRUB/czCTljcjJNoRKSVh77l0jANKOym', 2);
INSERT INTO `user` VALUES (20, 'admin11', '$2a$10$/w6pZLp8Di/XzY/aeLNcDO72UppIU94cGmfS4HhthgM.AxU39nz1O', 2);

-- ----------------------------
-- Table structure for user_role
-- ----------------------------
DROP TABLE IF EXISTS `user_role`;
CREATE TABLE `user_role`  (
  `user_id` int(11) NOT NULL,
  `role_id` int(11) NOT NULL,
  PRIMARY KEY (`user_id`, `role_id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of user_role
-- ----------------------------
INSERT INTO `user_role` VALUES (2, 1);
INSERT INTO `user_role` VALUES (9, 1);
INSERT INTO `user_role` VALUES (9, 2);

SET FOREIGN_KEY_CHECKS = 1;
